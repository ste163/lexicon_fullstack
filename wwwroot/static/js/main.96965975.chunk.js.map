{"version":3,"sources":["utils/ToastMessages.js","providers/UserProvider.js","providers/DeleteProvider.js","providers/CollectionProvider.js","providers/ProjectProvider.js","providers/ThesaurusProvider.js","providers/WordProvider.js","utils/Routes.js","components/branding/Branding.js","utils/ChangeColorMode.js","views/auth/AuthView.js","components/icons/Icons.js","utils/ChangeIconClassOnHover.js","components/modal/Modal.js","components/delete/Delete.js","components/buttons/Buttons.js","components/headerDesktop/header/Header.js","components/inputs/Inputs.js","components/headerDesktop/subHeader/SubHeader.js","components/headerDesktop/HeaderDesktop.js","components/headerMobile/HamburgerMenu.js","components/headerMobile/HeaderMobile.js","components/footer/Footer.js","components/details/Details.js","components/details/DetailsContainer.js","components/lists/ListControls.js","components/lists/ListCard.js","components/lists/ListCardContainer.js","utils/ArrayHelpers.js","components/forms/ProjectForm.js","components/managers/ProjectManager.js","components/forms/CollectionForm.js","components/managers/CollectionManager.js","views/main/selected/SelectedCard.js","views/main/list/ListColumn.js","components/definitions/DefinitionSynonyms.js","components/definitions/DefinitionAntonyms.js","components/definitions/DefinitionCard.js","components/definitions/DefinitionSimilar.js","components/definitions/DefinitionNotFound.js","views/main/thesaurus/ThesaurusSearch.js","views/main/thesaurus/ThesaurusColumn.js","views/main/MainView.js","ApplicationViews.js","Lexicon.js","index.js"],"names":["RetrieveFailure","objectType","AddSuccess","name","AddFailure","FailureNameDupe","UpdateSuccess","UpdateFailure","DeleteSuccessful","stringName","DeleteFailure","stringType","UserContext","createContext","UserProvider","props","apiUrl","currentUser","sessionStorage","getItem","useState","isLoggedIn","setIsLoggedIn","isFirebaseReady","setIsFirebaseReady","useEffect","firebase","auth","onAuthStateChanged","u","getToken","getIdToken","getUser","firebaseUserId","then","token","fetch","method","headers","Authorization","res","status","toast","error","json","saveUser","user","body","JSON","stringify","Provider","value","login","email","pw","signInWithEmailAndPassword","signInResponse","uid","setItem","id","anonymousLogin","signInAnonymously","logout","signOut","clear","info","register","password","createUserWithEmailAndPassword","createResponse","savedUser","getCurrentUser","parse","children","className","DeleteContext","DeleteProvider","undefined","objectToDelete","setObjectToDelete","isDeleteModalOpen","setIsDeleteModalOpen","CollectionContext","CollectionProvider","objectTypeForToasts","currentUserId","useContext","collections","setCollections","isFetchingCollections","setIsFetchingCollections","isFetchingCollectionDetails","setIsFetchingCollectionDetails","selectedCollection","setSelectedCollection","isCollectionManagerOpen","setIsCollectionManagerOpen","isCollectionCreateFormOpen","setIsCollectionCreateFormOpen","isCollectionDetailsOpen","setIsCollectionDetailsOpen","isCollectionEditFormOpen","setIsCollectionEditFormOpen","getCollections","c","getCollectionById","collectionId","addCollection","submittedCollectionForm","collection","success","updateCollection","ProjectContext","ProjectProvider","projects","setProjects","isFetchingProjects","setIsFetchingProjects","isFetchingProjectDetails","setIsFetchingProjectDetails","selectedProject","setSelectedProject","isProjectManagerOpen","setIsProjectManagerOpen","isProjectCreateFormOpen","setIsProjectCreateFormOpen","isProjectDetailsOpen","setIsProjectDetailsOpen","isProjectEditFormOpen","setIsProjectEditFormOpen","getProjects","p","getProjectById","projectId","addProject","submittedProjectForm","project","updateProject","ThesaurusContext","ThesaurusProvider","definitionCards","setDefinitionCards","getWordFromThesaurus","term","process","response","WordContext","WordProvider","wordsInCollection","setWordsInCollection","getWordsByCollectionId","w","getWordById","wordId","addWord","word","AppSelectedRoute","pathnameId","WordDeleteRoute","CollectionManagerRoute","CollectionManagerCreateRoute","CollectionManagerDetailsRoute","CollectionManagerEditRoute","CollectionManagerDeleteRoute","ProjectManagerRoute","ProjectManagerCreateRoute","ProjectManagerDetailsRoute","ProjectManagerEditRoute","ProjectManagerDeleteRoute","LexLogo","location","width","height","version","viewBox","xmlns","d","style","fill","paintOrder","strokeLinecap","strokeLinejoin","strokeWidth","color","fillOpacity","LexTitle","transform","whiteSpace","MwLogo","HeaderBranding","ChangeColorMode","root","document","documentElement","colorMode","setProperty","AuthView","loading","setLoading","loginEmail","setLoginEmail","loginPassword","setLoginPassword","registerEmail","setRegisterEmail","registerPassword","setRegisterPassword","activeBtn","setBtn","loginBtn","useRef","registerBtn","underline","history","useHistory","onClick","e","onMouseEnter","current","onMouseLeave","ref","onSubmit","preventDefault","catch","err","push","code","htmlFor","type","onChange","target","placeholder","required","autoFocus","minLength","disabled","IconArrow","rotation","x","y","IconClose","ry","IconLogout","colorRendering","dominantBaseline","imageRendering","inlineSize","isolation","mixBlendMode","shapeMargin","shapePadding","shapeRendering","solidColor","stopColor","stroke","ChangeIconClassOnHover","hoverEvent","isOnMouseOver","initialClass","afterClass","svgs","Array","from","currentTarget","firstElementChild","forEach","svg","classList","remove","add","Modal","closeModal","isOpen","contentHeader","onMouseOver","contentFunction","Delete","useLocation","possibleDeleteRoutes","deleteItem","currentUrl","pathname","find","r","match","goBack","Logout","isMobile","WordButton","isSelectedCard","DeleteWordButton","deleteUrlToPushTo","AddableButton","item","onClickFunction","itemsAvailableStateArray","setItemsAvailableStateArray","itemsAddedState","setItemsAddedToStateArray","RemovableItemButton","text","isActive","ManagerButton","managerRoute","managerBtnText","setHamburgerIsOpen","ManagerArrow","isForm","managerUrlToPushTo","ManagerCreate","formUrlToPushTo","createNewString","Header","SearchBar","labelTitle","placeholderText","setSearchTerms","keyEvent","DropDown","nameOf","fieldsetLocation","labelIdName","urlToPushTo","currentState","stateArray","setCurrentState","isCollection","isHamburger","selectedItem","map","stateItem","SubHeader","isSelectedColumnActive","setIsSelectedColumnActive","isListColumnActive","setIsListColumnActive","appSelectedRoute","length","checked","defaultChecked","HeaderDesktop","HamburgerMenu","setIsOpen","hamburgerIsOpen","HeaderMobile","Footer","href","Details","isCollections","selectedUrlToPushTo","editUrlToPushTo","description","projectCollections","words","DetailsContainer","isFetching","isDetailsOpen","isEditFormOpen","itemToEdit","EditForm","isCollectionManager","ListControls","searchLabelTitle","searchPlaceholderText","ListCard","CollectionList","searchTerms","items","removeDuplicationFromArray","duplicationArray","copyOfDuplicationArray","uniqueResultsArray","obj","filter","newObj","moveSingleItemsBetweenStateArrays","itemsAvailableState","setItemsAvailableState","setItemsAddedToState","clickedItem","textContent","itemToAdd","ProjectForm","userId","collectionsAvailableToAdd","setCollectionsAvailableToAdd","collectionsAdded","setCollectionsAdded","defaultProject","currentProject","setCurrentProject","isLoading","setIsLoading","collsInProj","pc","collsWithDuplication","removedDuplication","constructNewProject","newProject","maxLength","ProjectManager","filteredList","setFilteredList","matches","toLowerCase","includes","trim","CollectionForm","projectsAvailableToAdd","setProjectsAvailableToAdd","projectsAdded","setProjectsAdded","defaultCollection","currentCollection","setCurrentCollection","projsInCol","projsWithDuplication","handleControlledInputChange","newCollection","constructNewCollection","rows","cols","CollectionManager","SelectedCard","isDeletingWords","setIsDeletingWords","filteredWords","setFilteredWords","sorted","sortedAlphabetically","sort","a","b","wordA","wordB","ListColumn","DefinitionSynonyms","currentDef","keyValue","arrayOfSynonymArrays","setArrayOfSynonymArrays","synPrevBtnDisabled","setSynPrevBtnDisabled","synNextBtnDisabled","setSynNextBtnDisabled","currentSynArray","setCurrentSynArray","SeparateListOfSynsIntoSets","indexOf","allSynonyms","meta","syns","synonymArray","synonym","CreateArrayOfAllSyns","arraysOfSynonyms","setOf10Array","currentIndex","synCount","array","CalculateShowingSynAmount","totalSyns","CalculateTotalSyns","previous","next","DefinitionAntonyms","arrayOfAntonymArrays","setArrayOfAntonymArrays","antPrevBtnDisabled","setAntPrevBtnDisabled","antNextBtnDisabled","setAntNextBtnDisabled","currentAntArray","setCurrentAntArray","SeparateListOfAntsIntoSets","allAntonyms","ants","antonymArray","antonym","CreateArrayOfAllAnts","arraysOfAntonyms","antCount","CalculateShowingAntAmount","totalAnts","CalculateTotalAnts","DefinitionCard","cardId","definitions","defPrevBtnDisabled","setDefPrevBtnDisabled","defNextBtnDisabled","setDefNextBtnDisabled","setCurrentDef","removed","card","uuid","fl","shortdef","shortDefinition","DefinitionSimilar","similar","DefinitionNotFound","ThesaurusSearch","search","setSearch","trimmed","lowered","ThesaurusColumn","dc","key","MainView","window","innerHeight","innerWidth","windowDimensions","setWindowDimensions","setIsMobile","debouncedHandleResize","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","debounce","addEventListener","console","log","removeEventListener","isFetchingCollection","ApplicationViews","routeParamId","findRouteParam","turnOffAllCollectionRoutes","turnOffAllProjectRoutes","turnOffAllButDelete","collectionDetails","projectDetails","StateRouter","path","to","Lexicon","position","hideProgressBar","closeOnClick","draggable","autoClose","initializeApp","apiKey","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.96965975.chunk.js","sourcesContent":["// Registration\r\nexport const RegSuccess = () => \"Registered! Welcome to Lexicon.\"\r\n\r\nexport const RegFail = () => \"This email has already been registered.\"\r\n\r\nexport const LoginWelcome = () => \"Welcome to Lexicon!\"\r\n\r\nexport const LoginError = () =>  \"Invalid email or password.\"\r\n\r\nexport const AnonWelcome = () =>  \"Welcome! As an anonymous user, you can not save data.\"\r\n\r\nexport const AnonError = () => \"Unable to sign in anonymously.\"\r\n\r\nexport const AnonWarning = () => \"Anonymous users can not save data.\"\r\n\r\nexport const Logout = () => \"Logged out.\"\r\n\r\n\r\n// Retrieving \r\nexport const RetrieveFailure = objectType => `Unable to retrieve ${objectType}.`\r\n\r\n\r\n// Adding\r\nexport const AddSuccess = (objectType, name) => `Added ${objectType} ${name}.`\r\n\r\nexport const AddFailure = objectType => `Unable to add ${objectType}.`\r\n\r\nexport const FailureNameDupe = objectType => `You already have a ${objectType} with that name.`\r\n\r\n\r\n// Updating\r\nexport const UpdateSuccess = objectType => `Updated ${objectType}.`\r\n\r\nexport const UpdateFailure = objectType => `Unable to update ${objectType}. That name may already be in Lexicon's database.`\r\n\r\n\r\n// Deleting\r\nexport const DeleteSuccessful = stringName => `Successfully deleted ${stringName}.`\r\n\r\nexport const DeleteFailure = stringType => `Unable to delete ${stringType}.`\r\n\r\n\r\n// Connection error message\r\nexport const DbNoConnection = () => \"Could not connect to Lexicon's database.\"","// Written by NSS to assist in having real Authentication & Authorization\r\nimport React, { useState, useEffect, createContext } from \"react\"\r\nimport { toast } from 'react-toastify'\r\nimport { DbNoConnection, Logout } from '../utils/ToastMessages'\r\nimport firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\n\r\nexport const UserContext = createContext()\r\n\r\nexport function UserProvider(props) {\r\n  const apiUrl = \"/api/user\"\r\n  const currentUser = sessionStorage.getItem(\"currentUser\")\r\n\r\n  const [isLoggedIn, setIsLoggedIn] = useState(currentUser != null)\r\n  const [isFirebaseReady, setIsFirebaseReady] = useState(false)\r\n  \r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((u) => {\r\n      setIsFirebaseReady(true)\r\n    })\r\n  }, [])\r\n\r\n  const login = (email, pw) => {\r\n    return firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, pw)\r\n      .then((signInResponse) => getUser(signInResponse.user.uid))\r\n      .then((user) => {\r\n        sessionStorage.setItem(\"currentUser\", JSON.stringify(user))\r\n        sessionStorage.setItem(\"currentUserId\", user.id)\r\n        setIsLoggedIn(true)\r\n        return user\r\n      })\r\n  }\r\n\r\n  const anonymousLogin = () => {\r\n    return firebase\r\n      .auth()\r\n      .signInAnonymously()\r\n      .then(user => {\r\n        sessionStorage.setItem(\"currentUser\", JSON.stringify(user))\r\n        sessionStorage.setItem(\"currentUserId\", 0)\r\n        setIsLoggedIn(true)\r\n        return user\r\n      })\r\n  }\r\n\r\n  const logout = () => {\r\n    return firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        sessionStorage.clear()\r\n        setIsLoggedIn(false)\r\n        toast.info(Logout())\r\n      })\r\n  }\r\n\r\n  const register = (user, password) => {\r\n    return firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(user.email, password)\r\n      .then((createResponse) =>\r\n        saveUser({ ...user, firebaseUserId: createResponse.user.uid })\r\n      )\r\n      .then(savedUser => {\r\n        sessionStorage.setItem(\"currentUser\", JSON.stringify(savedUser))\r\n        sessionStorage.setItem(\"currentUserId\", savedUser.id)\r\n        setIsLoggedIn(true)\r\n        return savedUser\r\n      })\r\n  }\r\n\r\n  const getToken = () => firebase.auth().currentUser.getIdToken()\r\n\r\n  const getUser = (firebaseUserId) => {\r\n    return getToken().then((token) =>\r\n      fetch(`${apiUrl}/${firebaseUserId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then(res => {\r\n        if (res.status === 500) {\r\n          toast.error(DbNoConnection())\r\n          return res.json();\r\n        }\r\n        return res.json();\r\n      }))\r\n  }\r\n\r\n  const saveUser = user => {\r\n    return getToken().then(token =>\r\n      fetch(apiUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(user),\r\n      })\r\n      .then(res => {\r\n        if (res.status === 500) {\r\n          toast.error(DbNoConnection())\r\n          return\r\n        } else {\r\n         return res.json()\r\n        }\r\n      }))\r\n  }\r\n\r\n  const getCurrentUser = () => {\r\n    const user = sessionStorage.getItem(\"currentUser\")\r\n    if (!user) {\r\n      return null\r\n    }\r\n    return JSON.parse(user)\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        isLoggedIn,\r\n        login,\r\n        anonymousLogin,\r\n        logout,\r\n        register,\r\n        getToken,\r\n        getCurrentUser,\r\n      }}\r\n    >\r\n      {isFirebaseReady ? (\r\n        props.children\r\n      ) : (\r\n        <div className=\"spinner__center spinner__center--onPage\">\r\n          <div className=\" cls-spinner\">\r\n            <div className=\"cls-circle cls-spin\"></div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </UserContext.Provider>\r\n  )\r\n}","import React, { useState, createContext } from 'react'\r\n// Because of how I constructed the Managers, it would be too difficult to pass the\r\n// setDeletedObject state throughout the MainView. This provider allows for the global state to change anywhere.\r\n\r\nexport const DeleteContext = createContext()\r\n\r\nexport const DeleteProvider = props => {\r\n    const [objectToDelete, setObjectToDelete] = useState(undefined)\r\n    const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false)\r\n\r\n    return (\r\n        <DeleteContext.Provider\r\n            value={{\r\n                objectToDelete,\r\n                setObjectToDelete,\r\n                isDeleteModalOpen,\r\n                setIsDeleteModalOpen\r\n            }}>\r\n            {props.children}\r\n        </DeleteContext.Provider>\r\n    )\r\n}\r\n","import React, { createContext, useState, useContext } from 'react'\r\nimport { UserContext } from \"./UserProvider\"\r\nimport { toast } from 'react-toastify'\r\nimport {\r\n  AnonWarning,\r\n  DbNoConnection,\r\n  RetrieveFailure,\r\n  AddFailure,\r\n  AddSuccess,\r\n  FailureNameDupe,\r\n  UpdateSuccess,\r\n  UpdateFailure, } from '../utils/ToastMessages'\r\n// Gets all collections and handles the state of everything related to them (including the managers)\r\n\r\nexport const CollectionContext = createContext()\r\n\r\nexport const CollectionProvider = props => {\r\n  const objectTypeForToasts = \"collection\"\r\n  const apiUrl = \"/api/collection\"\r\n  const currentUserId = +sessionStorage.getItem('currentUserId') // If 0, then anonymous, do not allow user to do anything\r\n  const { getToken } = useContext(UserContext)\r\n\r\n  // all collections\r\n  const [collections, setCollections] = useState()\r\n  // lets program know if it needs to show a loading indicator or not\r\n  const [isFetchingCollections, setIsFetchingCollections] = useState(true) \r\n  const [isFetchingCollectionDetails, setIsFetchingCollectionDetails] = useState(true)\r\n  // currently selected collection\r\n  const [selectedCollection, setSelectedCollection] = useState()\r\n  // handles open states for manager and its views\r\n  const [isCollectionManagerOpen, setIsCollectionManagerOpen] = useState(false)\r\n  const [isCollectionCreateFormOpen, setIsCollectionCreateFormOpen] = useState(false)\r\n  const [isCollectionDetailsOpen, setIsCollectionDetailsOpen] = useState(false)\r\n  const [isCollectionEditFormOpen, setIsCollectionEditFormOpen] = useState(false)\r\n\r\n  const getCollections = () => {\r\n    if (currentUserId === 0) {\r\n      setIsFetchingCollections(false)\r\n    } else {\r\n      return getToken().then(token =>\r\n        fetch(`${apiUrl}`, {\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        })\r\n        .then(res => {\r\n          setIsFetchingCollections(false)\r\n          if (res.status === 500) {\r\n            toast.error(DbNoConnection())\r\n            return\r\n          }\r\n          if (res.status === 404) {\r\n            toast.error(RetrieveFailure(`${objectTypeForToasts}s`))\r\n            return\r\n          }\r\n          return res.json()\r\n        })\r\n        .then(c => setCollections(c)))\r\n    }\r\n  }\r\n\r\n  // Must do a setCollection .then AFTER you run this method\r\n  // had to do it this way so I could set the deleteObject state\r\n  const getCollectionById = collectionId => {\r\n    if (currentUserId === 0) {\r\n      setIsFetchingCollectionDetails(false)\r\n    } else {\r\n      return getToken().then(token =>\r\n        fetch(`${apiUrl}/${collectionId}`, {\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        })\r\n        .then(res => {\r\n          setIsFetchingCollectionDetails(false)\r\n          if (res.status === 500) {\r\n            toast.error(DbNoConnection())\r\n          }\r\n          if (res.status === 404) {\r\n            toast.error(RetrieveFailure(objectTypeForToasts))\r\n          }\r\n          return res.json()\r\n        }))\r\n    }\r\n  }\r\n\r\n  const addCollection = submittedCollectionForm => {\r\n    if (currentUserId === 0) {\r\n      toast.error(AnonWarning())\r\n    } else {\r\n      return getToken().then(token => \r\n        fetch(apiUrl, {\r\n            method: \"POST\",\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(submittedCollectionForm)\r\n        }))\r\n        .then(res => {\r\n          if (res.status === 200) {\r\n            // Working well!\r\n            return res.json()\r\n          }\r\n          if (res.status === 500) {\r\n            // Not connected to Db\r\n            toast.error(DbNoConnection())\r\n            return\r\n          }\r\n          if (res.status === 400) {\r\n            // Bad request\r\n            toast.error(FailureNameDupe(objectTypeForToasts))\r\n            return\r\n          }      \r\n          if (res.status === 404) {\r\n            // Not found\r\n            toast.error(AddFailure(objectTypeForToasts))\r\n            return\r\n          }      \r\n        })\r\n        .then(collection => {\r\n          if (collection) {\r\n            toast.success(AddSuccess(objectTypeForToasts, submittedCollectionForm.collection.name))\r\n            getCollections()\r\n          } else {\r\n            return\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  const updateCollection = submittedCollectionForm => {\r\n    if (currentUserId === 0) {\r\n      toast.error(AnonWarning())\r\n    } else {\r\n      return getToken().then(token => \r\n        fetch(`${apiUrl}/${submittedCollectionForm.collection.id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(submittedCollectionForm)\r\n        }))\r\n        .then(res => {\r\n          if (res.status === 204) {\r\n            toast.success(UpdateSuccess(objectTypeForToasts))\r\n            getCollections()\r\n            return true\r\n          }\r\n          if (res.status === 500) {\r\n            // Not connected to Db\r\n            toast.error(DbNoConnection())\r\n            return false\r\n          }\r\n          if (res.status === 401) {\r\n            // Bad request\r\n            toast.error(FailureNameDupe(objectTypeForToasts))\r\n            return false\r\n          }\r\n          if (res.status === 404) {\r\n            // Not found\r\n            toast.error(UpdateFailure(objectTypeForToasts))\r\n            return false\r\n          }      \r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <CollectionContext.Provider\r\n      value={{\r\n        isFetchingCollections,\r\n        isFetchingCollectionDetails, setIsFetchingCollectionDetails,\r\n\r\n        collections, setCollections,\r\n        selectedCollection, setSelectedCollection,\r\n        isCollectionManagerOpen, setIsCollectionManagerOpen,\r\n        isCollectionCreateFormOpen, setIsCollectionCreateFormOpen,\r\n        isCollectionDetailsOpen, setIsCollectionDetailsOpen,\r\n        isCollectionEditFormOpen, setIsCollectionEditFormOpen,\r\n\r\n        getCollections,\r\n        getCollectionById,\r\n        addCollection,\r\n        updateCollection\r\n      }}>\r\n        {props.children}\r\n    </CollectionContext.Provider>\r\n  )\r\n}","import React, { createContext, useState, useContext } from 'react'\r\nimport { UserContext } from \"./UserProvider\"\r\nimport { toast } from 'react-toastify'\r\nimport {\r\n  AnonWarning,\r\n  DbNoConnection,\r\n  RetrieveFailure,\r\n  AddFailure,\r\n  AddSuccess,\r\n  FailureNameDupe,\r\n  UpdateSuccess,\r\n  UpdateFailure, } from '../utils/ToastMessages'\r\n// Gets all projects and handles the state of everything related to them (including the managers)\r\n\r\nexport const ProjectContext = createContext()\r\n\r\nexport const ProjectProvider = props => {\r\n  const objectTypeForToasts = \"project\"\r\n  const apiUrl = \"/api/project\"\r\n  const currentUserId = +sessionStorage.getItem('currentUserId') // If 0, then anonymous, do not allow user to do anything\r\n  const { getToken } = useContext(UserContext)\r\n\r\n  // all projects\r\n  const [projects, setProjects] = useState()\r\n  // lets program know if it needs to show a loading indicator or not\r\n  const [isFetchingProjects, setIsFetchingProjects] = useState(true) \r\n  const [isFetchingProjectDetails, setIsFetchingProjectDetails] = useState(true)\r\n  // currently selected Project\r\n  const [selectedProject, setSelectedProject] = useState()\r\n  // handles open states for manager and its views\r\n  const [isProjectManagerOpen, setIsProjectManagerOpen] = useState(false)\r\n  const [isProjectCreateFormOpen, setIsProjectCreateFormOpen] = useState(false)\r\n  const [isProjectDetailsOpen, setIsProjectDetailsOpen] = useState(false)\r\n  const [isProjectEditFormOpen, setIsProjectEditFormOpen] = useState(false)\r\n  \r\n  const getProjects = () => {\r\n    if (currentUserId === 0) {\r\n      setIsFetchingProjects(false)\r\n    } else {\r\n      return getToken().then(token =>\r\n        fetch(`${apiUrl}`, {\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        })\r\n        .then(res => {\r\n          setIsFetchingProjects(false)\r\n          if (res.status === 500) {\r\n            toast.error(DbNoConnection())\r\n            return\r\n          }\r\n          if (res.status === 404) {\r\n            toast.error(RetrieveFailure(`${objectTypeForToasts}s`))\r\n            return\r\n          }\r\n          return res.json()\r\n        })\r\n        .then(p => setProjects(p)))\r\n    }\r\n  }\r\n\r\n  // Must do a setProject .then AFTER you run this method\r\n  // had to do it this way so I could set the deleteObject state\r\n  const getProjectById = (projectId) => {\r\n    if (currentUserId === 0) {\r\n      setIsFetchingProjectDetails(false)\r\n    } else {\r\n      return getToken().then(token =>\r\n        fetch(`${apiUrl}/${projectId}`, {\r\n          method: \"GET\",\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        })\r\n        .then(res => {\r\n          setIsFetchingProjectDetails(false)\r\n          if (res.status === 500) {\r\n            toast.error(DbNoConnection())\r\n          }\r\n          if (res.status === 404) {\r\n            toast.error(RetrieveFailure(objectTypeForToasts))\r\n          }\r\n          return res.json()\r\n        }))\r\n    }\r\n  }\r\n\r\n  const addProject = submittedProjectForm => {\r\n    if (currentUserId === 0) {\r\n      toast.error(AnonWarning())\r\n    } else {\r\n      return getToken().then(token => \r\n        fetch(apiUrl, {\r\n            method: \"POST\",\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(submittedProjectForm)\r\n        }))\r\n        .then(res => {\r\n          if (res.status === 200) {\r\n            // Working well!\r\n            return res.json()\r\n          }\r\n          if (res.status === 500) {\r\n            // Not connected to Db\r\n            toast.error(DbNoConnection())\r\n            return\r\n          }\r\n          if (res.status === 400) {\r\n            // Bad request\r\n            toast.error(FailureNameDupe(objectTypeForToasts))\r\n            return\r\n          }      \r\n          if (res.status === 404) {\r\n            // Not found\r\n            toast.error(AddFailure(objectTypeForToasts))\r\n            return\r\n          }      \r\n        })\r\n        .then(project => {\r\n          if (project) {\r\n            toast.success(AddSuccess(objectTypeForToasts, submittedProjectForm.project.name))\r\n            getProjects()\r\n          } else {\r\n            return\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  const updateProject = submittedProjectForm => {\r\n    if (currentUserId === 0) {\r\n      toast.error(AnonWarning())\r\n    } else {\r\n      return getToken().then(token => \r\n        fetch(`${apiUrl}/${submittedProjectForm.project.id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(submittedProjectForm)\r\n        }))\r\n        .then(res => {\r\n          if (res.status === 204) {\r\n            toast.success(UpdateSuccess(objectTypeForToasts))\r\n            getProjects()\r\n            return true\r\n          }\r\n          if (res.status === 500) {\r\n            // Not connected to Db\r\n            toast.error(DbNoConnection())\r\n            return false\r\n          }\r\n          if (res.status === 401) {\r\n            // Bad request\r\n            toast.error(FailureNameDupe(objectTypeForToasts))\r\n            return false\r\n          }\r\n          if (res.status === 404) {\r\n            // Not found\r\n            toast.error(UpdateFailure(objectTypeForToasts))\r\n            return false\r\n          }      \r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ProjectContext.Provider\r\n      value={{\r\n        isFetchingProjects,\r\n        isFetchingProjectDetails, setIsFetchingProjectDetails,\r\n\r\n        projects, setProjects,\r\n        selectedProject, setSelectedProject,\r\n        isProjectManagerOpen, setIsProjectManagerOpen,\r\n        isProjectCreateFormOpen, setIsProjectCreateFormOpen,\r\n        isProjectDetailsOpen, setIsProjectDetailsOpen,\r\n        isProjectEditFormOpen, setIsProjectEditFormOpen,\r\n\r\n        getProjects,\r\n        getProjectById,\r\n        addProject,\r\n        updateProject\r\n      }}>\r\n        {props.children}\r\n    </ProjectContext.Provider>\r\n  )\r\n}","import React, { useState, createContext } from \"react\"\r\n// Handles call to the thesaurus and \r\n\r\nexport const ThesaurusContext = createContext()\r\n\r\nexport const ThesaurusProvider = props => {\r\n    const APIKey = process.env.REACT_APP_MW_THESAURUS_API_KEY\r\n\r\n    const [ definitionCards, setDefinitionCards ] = useState([])\r\n\r\n    const getWordFromThesaurus = term => {\r\n        return fetch(`https://dictionaryapi.com/api/v3/references/thesaurus/json/${term}?key=${APIKey}`)\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            // If I want to set a max card amount from user settings, will need to add that check here\r\n            // Must use spread operator to add the array of responses to state. Cannot use push as that mutates the data.\r\n            // State is immutable, but the spread operator returns a copy, so it doesn't mutate the data.\r\n            setDefinitionCards(definitionCards => [ response, ...definitionCards ])\r\n        })\r\n    }\r\n\r\n    return (\r\n        <ThesaurusContext.Provider value={{\r\n            getWordFromThesaurus,\r\n            definitionCards,\r\n            setDefinitionCards\r\n        }}>\r\n            {props.children}\r\n        </ThesaurusContext.Provider>\r\n    )\r\n}","import React, { useState, useContext, createContext } from \"react\"\r\nimport { UserContext } from \"./UserProvider\"\r\nimport { toast } from 'react-toastify'\r\nimport {\r\n    AnonWarning,\r\n    DbNoConnection,\r\n    RetrieveFailure,\r\n    AddFailure,\r\n    AddSuccess,\r\n    FailureNameDupe } from '../utils/ToastMessages'\r\n\r\nexport const WordContext = createContext()\r\n\r\nexport const WordProvider = props => {\r\n    const objectTypeForToasts = \"word\"\r\n    const apiUrl = \"/api/word\"\r\n    const currentUserId = +sessionStorage.getItem('currentUserId') // If 0, then anonymous, do not allow user to do anything\r\n\r\n    // State for words in currently selected collection\r\n    const [ wordsInCollection, setWordsInCollection ] = useState([])\r\n    const { getToken } = useContext(UserContext)\r\n\r\n    const getWordsByCollectionId = collectionId => {\r\n        if (currentUserId === 0) {\r\n            return\r\n        } else {\r\n          return getToken().then(token =>\r\n            fetch(`${apiUrl}/${collectionId}`, {\r\n              method: \"GET\",\r\n              headers: {\r\n                Authorization: `Bearer ${token}`\r\n              }\r\n            })\r\n            .then(res => {\r\n              if (res.status === 500) {\r\n                toast.error(DbNoConnection())\r\n                return\r\n              }\r\n              if (res.status === 404) {\r\n                toast.error(RetrieveFailure(objectTypeForToasts))\r\n                return\r\n              }\r\n              return res.json()\r\n            })\r\n            .then(w => setWordsInCollection(w)))\r\n        }\r\n      }\r\n\r\n    const getWordById = wordId => {\r\n        if (currentUserId === 0) {\r\n            return\r\n        } else {\r\n          return getToken().then(token =>\r\n            fetch(`${apiUrl}/singleword/${wordId}`, {\r\n              method: \"GET\",\r\n              headers: {\r\n                Authorization: `Bearer ${token}`\r\n              }\r\n            })\r\n            .then(res => {\r\n              if (res.status === 500) {\r\n                toast.error(DbNoConnection())\r\n                return\r\n              }\r\n              if (res.status === 404) {\r\n                toast.error(RetrieveFailure(objectTypeForToasts))\r\n                return\r\n              }\r\n              return res.json()\r\n        }))\r\n      }\r\n    }\r\n\r\n    const addWord = word => {\r\n        if (currentUserId === 0) {\r\n          toast.error(AnonWarning())\r\n        } else {\r\n          return getToken().then(token => \r\n            fetch(`${apiUrl}/${word.collectionId}`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                  Authorization: `Bearer ${token}`,\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(word)\r\n            }))\r\n            .then(res => {\r\n              if (res.status === 200) {\r\n                // Working well!\r\n                return res.json()\r\n              }\r\n              if (res.status === 500) {\r\n                // Not connected to Db\r\n                toast.error(DbNoConnection())\r\n                return\r\n              }\r\n              if (res.status === 400) {\r\n                // Bad request\r\n                toast.error(FailureNameDupe(objectTypeForToasts))\r\n                return\r\n              }      \r\n              if (res.status === 404) {\r\n                // Not found\r\n                toast.error(AddFailure(objectTypeForToasts))\r\n                return\r\n              }      \r\n            })\r\n            .then(collection => {\r\n              if (collection) {\r\n                toast.success(AddSuccess(objectTypeForToasts, word.name))\r\n                getWordsByCollectionId(word.collectionId)\r\n              } else {\r\n                return\r\n              }\r\n            })\r\n        }\r\n      }\r\n\r\n    return (\r\n        <WordContext.Provider value={{\r\n            wordsInCollection,\r\n            getWordsByCollectionId,\r\n            getWordById,\r\n            addWord\r\n        }}>\r\n            {props.children}\r\n        </WordContext.Provider>\r\n    )\r\n}","// All route names (specifically for making deleting work easily)\r\nexport const CollectionManagerString = () => 'collection-manager'\r\nexport const ProjectManagerString = () => 'project-manager'\r\nexport const WordString = () => 'word'\r\n\r\n// All routes used throughout Lexicon\r\nexport const AuthRoute = () => '/auth'\r\n\r\nexport const AppRoute = () => '/app'\r\n\r\nexport const AppSelectedRoute = pathnameId => `${AppRoute()}/selected/${pathnameId}`\r\n\r\nexport const SettingsRoute = () => `${AppRoute()}/settings`\r\n\r\n// Word delete\r\nexport const WordDeleteRoute = pathnameId => `${AppRoute()}/${WordString()}/delete/${pathnameId}`\r\n\r\n// Collection Manager\r\nexport const CollectionManagerRoute = () => `${AppRoute()}/${CollectionManagerString()}`\r\n\r\nexport const CollectionManagerCreateRoute = () => `${CollectionManagerRoute()}/create`\r\n\r\nexport const CollectionManagerDetailsRoute = pathnameId => `${CollectionManagerRoute()}/details/${pathnameId}`\r\n\r\nexport const CollectionManagerEditRoute = pathnameId => `${CollectionManagerRoute()}/edit/${pathnameId}`\r\n\r\nexport const CollectionManagerDeleteRoute = pathnameId => `${CollectionManagerRoute()}/delete/${pathnameId}`\r\n\r\n\r\n// Project Manager\r\nexport const ProjectManagerRoute = () => `${AppRoute()}/${ProjectManagerString()}`\r\n\r\nexport const ProjectManagerCreateRoute = () => `${ProjectManagerRoute()}/create`\r\n\r\nexport const ProjectManagerDetailsRoute = pathnameId => `${ProjectManagerRoute()}/details/${pathnameId}`\r\n\r\nexport const ProjectManagerEditRoute = pathnameId => `${ProjectManagerRoute()}/edit/${pathnameId}`\r\n\r\nexport const ProjectManagerDeleteRoute = pathnameId => `${ProjectManagerRoute()}/delete/${pathnameId}`\r\n\r\n\r\n// Utility Methods\r\nexport const findRouteParam = (currentUrl) => {\r\n    const regex = /\\d+/\r\n    const match = currentUrl.match(regex)\r\n    if (match !== null) {\r\n        return match[0]\r\n    }\r\n}","import React from 'react'\r\nimport './Branding.css'\r\n\r\n// To use logo\r\n    // Assign a location prop: logo__login--lex, header, footer (from Branding.css)\r\nexport const LexLogo = props => (\r\n    <svg className={props.location} width=\"185\" height=\"150\" version=\"1.1\" viewBox=\"0 0 48.948 39.688\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <title>Lexicon Logo</title>\r\n        <path id=\"tri_yellow\" d=\"m34.539 0.033073c-23.026-0.022049-11.513-0.011024 0 0zm-9.9115 11.398-24.542 28.223h16.259l7.3246-10.08 7.0714-9.7307z\" style={{fill:\"#e4e485\",paintOrder:\"stroke fill markers\", strokeLinecap:\"round\", strokeLinejoin:\"round\", strokeWidth:\".10087\"}}/>\r\n        <path d=\"m20.07 0.033577 6.5867 9.063 5.29e-4 -5.291e-4 0.8692 1.1963 6.9407 9.5514 14.396-19.81h-28.792z\" style={{fill:\"#d64d4d\", paintOrder:\"stroke fill markers\", strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\".050434\"}}/>\r\n        <path id=\"tri_red\" d=\"m0.085055 0.033577 17.39 19.811 7.2884-8.2253-8.4191-11.585z\" style={{fill:\"#d64d4d\", paintOrder:\"stroke fill markers\", strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\".050434\"}}/>\r\n        <path className={props.color} id=\"tri_black-white\" d=\"m34.467 19.844-14.396 19.811h28.792z\" style={{fill:\"#171717\", paintOrder:\"stroke fill markers\", strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\".050434\"}}/>\r\n        <path id=\"tri_orange\" d=\"m24.709 11.544-7.2342 8.2998h13.265z\" style={{fillOpacity:\".57143\",fill:\"#d64d4d\",paintOrder:\"stroke fill markers\",strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\".021494\"}}/>\r\n    </svg>\r\n)\r\n\r\nexport const LexTitle = props => (\r\n    <svg className={props.location} width=\"515\" height=\"70\" version=\"1.1\" viewBox=\"0 0 136.26 18.521\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <title>Lexicon Title</title>\r\n        <path className={props.color} transform=\"scale(.26458)\" d=\"m306.62 0.048828c-6.736 0-13.113 1.4683-19.133 4.4062-6.0194 2.8664-10.855 6.9153-14.51 12.146-3.6546 5.1594-5.4824 11-5.4824 17.521 0 5.9478 1.3609 11.644 4.084 17.09 2.723 5.3745 6.9508 9.8168 12.684 13.328 5.7327 3.4397 12.899 5.1602 21.498 5.1602 7.3092 0 14.154-1.3967 20.531-4.1914 0.64466-0.28708 1.0381-0.53926 1.1816-0.75391 0.21464-0.28661 0.39356-0.85883 0.53711-1.7188l1.5059-11.502c0-0.14355-0.10762-0.2505-0.32227-0.32226-0.14353-0.07176-0.32245-0.10742-0.53711-0.10742-0.28641 0-0.42968 0.10761-0.42968 0.32226-1.7915 5.7328-4.6226 9.9963-8.4922 12.791-3.798 2.7947-8.3476 4.1914-13.65 4.1914-5.6611 0-10.93-1.6489-15.803-4.9453-4.8728-3.368-8.7768-7.8819-11.715-13.543-2.938-5.7328-4.4082-11.967-4.4082-18.703 0-5.7327 1.1821-10.785 3.5469-15.156s5.6628-7.7387 9.8906-10.104c4.2996-2.4364 9.2426-3.6543 14.832-3.6543 13.974 0 22.25 5.2311 24.83 15.693 0.0718 0.21532 0.2883 0.32226 0.64648 0.32226 0.35819-0.07177 0.53711-0.21505 0.53711-0.42969l-1.1836-11.285c-0.07179-0.71684-0.21507-1.2194-0.42969-1.5059-0.14307-0.35839-0.50072-0.71603-1.0742-1.0742-2.1498-1.2182-5.0167-2.1858-8.5996-2.9023-3.5113-0.71657-7.0218-1.0742-10.533-1.0742zm82.07 0c-6.091 0-12.075 1.3252-17.951 3.9766-5.8044 2.6514-10.571 6.6288-14.297 11.932-3.7263 5.2311-5.5879 11.537-5.5879 18.918 0 6.306 1.3967 12.145 4.1914 17.52 2.8664 5.3028 6.8796 9.5306 12.039 12.684 5.2311 3.0814 11.178 4.623 17.842 4.623 6.736 0 12.97-1.5774 18.703-4.7305 5.8044-3.153 10.428-7.4523 13.867-12.898 3.4396-5.4461 5.1582-11.43 5.1582-17.951 0-5.8761-1.3967-11.429-4.1914-16.66-2.723-5.2311-6.6647-9.4232-11.824-12.576-5.1595-3.2247-11.142-4.8359-17.949-4.8359zm-388.3 1.1797c-0.14354 0-0.21484 0.21457-0.21484 0.64453s0.071299 0.64648 0.21484 0.64648c2.7947 0 4.8371 0.21457 6.127 0.64453 1.3615 0.35832 2.2575 1.0397 2.6875 2.043 0.50173 1.0032 0.75195 2.5787 0.75195 4.7285v49.768c0 2.1498-0.25022 3.763-0.75195 4.8379-0.42989 1.0033-1.3259 1.6828-2.6875 2.041-1.2899 0.35819-3.3322 0.53711-6.127 0.53711-0.14354 0-0.21484 0.21457-0.21484 0.64453 0 0.42996 0.071299 0.64648 0.21484 0.64648h49.445c0.64526 0 1.0744-0.10761 1.2891-0.32226 0.21465-0.28641 0.32226-0.71751 0.32226-1.291 0-3.6546 0.3222-8.3116 0.9668-13.973 0-0.21463-0.21457-0.32227-0.64453-0.32227-0.35819-0.07108-0.53711 2.17e-4 -0.53711 0.21484-1.2899 9.1008-5.4819 13.652-12.576 13.652h-13.758c-2.7231 0-4.7297-0.17892-6.0195-0.53711-1.2181-0.35832-2.0783-1.004-2.5801-1.9355-0.42996-1.0033-0.64453-2.543-0.64453-4.6211v-49.232c0-2.1498 0.21457-3.7253 0.64453-4.7285 0.50166-1.075 1.3976-1.7922 2.6875-2.1504 1.3615-0.42996 3.4396-0.64453 6.2344-0.64453 0.14354 0 0.21484-0.21653 0.21484-0.64648s-0.0713-0.64453-0.21484-0.64453l-5.0508 0.10742c-3.0097 0.14354-5.4832 0.2168-7.418 0.2168-1.7198 0-4.0841-0.073252-7.0938-0.2168zm69.277 0c-0.14355 0-0.21484 0.21457-0.21484 0.64453s0.0713 0.64648 0.21484 0.64648c2.7947 1e-7 4.8371 0.21457 6.127 0.64453 1.3615 0.35832 2.2575 1.0397 2.6875 2.043 0.50173 1.0032 0.75195 2.5787 0.75195 4.7285v49.768c0 2.1498-0.25022 3.763-0.75195 4.8379-0.42996 1.0033-1.326 1.6828-2.6875 2.041-1.2899 0.35819-3.3322 0.53711-6.127 0.53711-0.14355 0-0.21484 0.21653-0.21484 0.64648 0 0.42996 0.0713 0.64453 0.21484 0.64453h44.393c0.64529 0 1.0744-0.10761 1.2891-0.32226 0.28642-0.28641 0.42969-0.71751 0.42969-1.291 0-4.8012 0.3222-9.4581 0.9668-13.973 0-0.21465-0.21458-0.32227-0.64453-0.32227-0.42996-0.07111-0.64454 1.92e-4 -0.64454 0.21484l2e-3 -2e-3c-0.57324 4.0846-1.9004 7.3825-3.9785 9.8906-2.0064 2.508-4.4422 3.7617-7.3086 3.7617h-9.8887c-2.7947 0-4.8371-0.17892-6.127-0.53711-1.218-0.35832-2.0783-1.004-2.5801-1.9355-0.42996-1.0033-0.64453-2.543-0.64453-4.6211v-24.83h13.865c3.4397 0 5.8416 0.64372 7.2031 1.9336s2.041 3.5468 2.041 6.7715c0 0.14355 0.21457 0.2168 0.64453 0.2168s0.64648-0.07325 0.64648-0.2168l-0.10937-5.0508c-0.0718-1.0033-0.10742-2.5449-0.10742-4.623l0.10742-8.4902c0-0.14354-0.21457-0.2168-0.64453-0.2168s-0.64453 0.07325-0.64453 0.2168c0 2.7231-0.64567 4.6562-1.9356 5.8027-1.2899 1.0749-3.5826 1.6133-6.8789 1.6133h-14.188v-21.82c0-2.1498 0.21457-3.7273 0.64453-4.7305 0.50159-1.0034 1.3976-1.6828 2.6875-2.041 1.2899-0.35819 3.2965-0.53711 6.0195-0.53711h7.416c3.153 0 5.6961 1.0748 7.6309 3.2246 1.9348 2.1497 2.9024 5.0524 2.9024 8.707 0 0.21464 0.18087 0.32031 0.53906 0.32031 0.42996 0 0.64453-0.10567 0.64453-0.32031l-0.2168-13.008c0-0.6446-0.3222-0.9668-0.96679-0.9668zm426.14 0c-0.14362 0-0.21484 0.21653-0.21484 0.64648s0.0712 0.64453 0.21484 0.64453c3.0097 0 5.0878 0.75101 6.2344 2.2559 1.1466 1.5049 1.7207 4.0856 1.7207 7.7402v47.08l-42.459-52.777c-0.93155-1.1465-1.7918-2.3644-2.5801-3.6543-0.43001-0.78855-0.82344-1.2893-1.1816-1.5039-0.28654-0.28641-0.67992-0.42969-1.1816-0.42969-0.42996 0-1.0399 0.035649-1.8281 0.10742-0.78825 0.071773-1.7915 0.10742-3.0098 0.10742-1.4332 0-2.5438-0.035649-3.332-0.10742l-3.8691-0.10742c-0.21468-1e-7 -0.32227 0.21457-0.32227 0.64453s0.10759 0.64453 0.32227 0.64453c2.6514 0 5.2302 1.0748 7.7383 3.2246v51.486c0 3.7263-0.57222 6.307-1.7188 7.7402-1.1466 1.4332-3.2604 2.1504-6.3418 2.1504-0.14362 0-0.2168 0.21457-0.2168 0.64453 0 0.42996 0.0732 0.64453 0.2168 0.64453 1.8632 0 3.2598-0.03566 4.1914-0.10742l5.2676-0.10742 5.1582 0.10742c0.93155 0.07176 2.2587 0.10742 3.9785 0.10742 0.21468 0 0.32227-0.21457 0.32227-0.64453 0-0.42996-0.10759-0.64453-0.32227-0.64453-3.0097 0-5.1236-0.71717-6.3418-2.1504-1.2182-1.5049-1.8281-4.0856-1.8281-7.7402v-49.229l1.8281 2.041 48.584 59.766c0.14355 0.14352 0.39571 0.17918 0.75391 0.10742 0.35817-0.07108 0.53711-0.17872 0.53711-0.32227v-57.076c0-3.6546 0.60793-6.2354 1.8262-7.7402 1.2899-1.5049 3.4753-2.2578 6.5566-2.2578 0.21543 0 0.32422-0.21457 0.32422-0.64453s-0.10879-0.64453-0.32422-0.64453l-4.1914 0.10547c-2.2931 0.14354-4.0494 0.2168-5.2676 0.2168-1.2899 0-3.0084-0.073252-5.1582-0.2168zm-359.66 0.00195c-0.14355 0-0.21484 0.21457-0.21484 0.64453s0.0713 0.64648 0.21484 0.64648c2.5798 0 4.8029 0.57215 6.666 1.7188 1.8632 1.1465 3.7248 3.1174 5.5879 5.9121l17.307 26.119-16.23 22.25c-2.0782 2.7947-4.2635 4.9463-6.5566 6.4512-2.2931 1.4332-4.6593 2.1484-7.0957 2.1484-0.21466 0-0.32032 0.21457-0.32032 0.64453 0 0.42996 0.10566 0.64648 0.32032 0.64648 1.7915 0 3.0828-0.03566 3.8711-0.10742l4.4062-0.10938 7.2012 0.10938c1.0749 0.07176 2.6881 0.10742 4.8379 0.10742 0.21465 0 0.32227-0.21653 0.32227-0.64648 0-0.42996-0.10762-0.64453-0.32227-0.64453-4.3712 0-6.5566-1.1821-6.5566-3.5469 0-1.2899 0.71529-2.9746 2.1484-5.0527l14.941-20.852 16.662 25.26c0.6446 0.93135 0.9668 1.6843 0.9668 2.2578 0 0.71678-0.46688 1.2175-1.3984 1.5039-0.93155 0.28641-2.4713 0.42969-4.6211 0.42969-0.14355 0-0.2168 0.21457-0.2168 0.64453 0 0.42996 0.0733 0.64453 0.2168 0.64453 2.2214 0 3.9758-0.03566 5.2656-0.10742l8.0625-0.10742 5.6973 0.10742c1.0749 0.07176 2.5431 0.10742 4.4062 0.10742 0.14355 0 0.21484-0.21457 0.21484-0.64453 0-0.42996-0.0713-0.64453-0.21484-0.64453-3.153 0-5.7318-0.53643-7.7383-1.6113-1.9348-1.1466-3.8342-3.1532-5.6973-6.0195l-17.844-26.766 15.049-20.529c4.7295-6.4494 9.5315-9.6758 14.404-9.6758 0.21463 1e-7 0.32031-0.21457 0.32031-0.64453s-0.10568-0.64453-0.32031-0.64453l-3.8711 0.10742c-1.7198 0.14354-3.188 0.21484-4.4062 0.21484-2.0782 0-4.4782-0.071299-7.2012-0.21484l-4.8379-0.10742c-0.2153-1e-7 -0.32226 0.21457-0.32226 0.64453s0.10696 0.64453 0.32226 0.64453c4.1562 0 6.2344 1.2198 6.2344 3.6562 0 1.4331-0.86025 3.404-2.5801 5.9121l-13.65 19.24-16.338-24.508c-0.6446-1.0031-0.9668-1.7561-0.9668-2.2578 0-0.71684 0.46493-1.2175 1.3965-1.5039 0.93162-0.35819 2.4732-0.53711 4.623-0.53711 0.21463 0 0.32032-0.21653 0.32032-0.64648-1e-5 -0.42996-0.10569-0.64453-0.32032-0.64453l-5.5898 0.10742c-3.4396 0.14354-6.3065 0.21484-8.5996 0.21484l-3.8691-0.10742c-1.8631-0.14354-3.226-0.21484-4.0859-0.21484zm84.326 0c-0.21465 0-0.32226 0.21457-0.32226 0.64453s0.10761 0.64453 0.32226 0.64453c2.7947 0 4.8371 0.21653 6.127 0.64648 1.3614 0.35832 2.2932 1.0378 2.7949 2.041 0.50173 1.0032 0.75195 2.5807 0.75195 4.7305v49.768c0 2.1498-0.25022 3.761-0.75195 4.8359-0.50166 1.0033-1.4334 1.6848-2.7949 2.043-1.2899 0.35819-3.3322 0.53711-6.127 0.53711-0.21465 0-0.32226 0.21457-0.32226 0.64453 0 0.42996 0.10761 0.64453 0.32226 0.64453 2.2215 0 3.9758-0.03566 5.2656-0.10742l7.2031-0.10742 7.5234 0.10742c1.2182 0.07176 2.9029 0.10742 5.0527 0.10742 0.14355 0 0.21485-0.21457 0.21485-0.64453 0-0.42996-0.0713-0.64453-0.21485-0.64453-2.8664 0-4.9445-0.17892-6.2344-0.53711-1.2897-0.35832-2.1858-1.0398-2.6875-2.043-0.42996-1.0033-0.64453-2.6145-0.64453-4.8359v-49.553c0-2.1498 0.21457-3.7272 0.64453-4.7305 0.5016-1.0749 1.3976-1.8259 2.6875-2.2559 1.3615-0.42996 3.4396-0.64648 6.2344-0.64648 0.14355 0 0.21485-0.21457 0.21485-0.64453s-0.0713-0.64453-0.21485-0.64453l-5.0527 0.10742c-3.0097 0.14354-5.517 0.21484-7.5234 0.21484-1.7915 0-4.1934-0.071299-7.2031-0.21484zm163.71 1.1816c6.306 0 11.823 1.4702 16.553 4.4082 4.8012 2.9381 8.4925 7.0586 11.072 12.361 2.6514 5.2312 3.9766 11.213 3.9766 17.949 0 6.3777-1.1821 11.861-3.5469 16.447-2.3648 4.5862-5.5892 8.061-9.6738 10.426-4.0845 2.3648-8.6699 3.5469-13.758 3.5469-6.0193 0-11.394-1.6113-16.123-4.8359-4.7295-3.2247-8.4209-7.5975-11.072-13.115-2.5798-5.5894-3.8691-11.715-3.8691-18.379 0-8.8858 2.3285-15.909 6.9863-21.068 4.6579-5.1595 11.143-7.7402 19.455-7.7402z\" style={{fill:\"#171717\",whiteSpace:\"pre\"}}/>\r\n    </svg>\r\n)\r\n\r\nexport const MwLogo = props => (\r\n    <svg className={props.location} width=\"125\" height=\"125\" version=\"1.1\" viewBox=\"0 0 33.073 33.073\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <title>Merriam Webster Logo</title>\r\n        <path id=\"background\" d=\"m0.1737 16.537c0-9.05 7.3519-16.386 16.422-16.386 9.0696 0 16.305 7.3362 16.305 16.386 0 9.05-7.2351 16.386-16.305 16.386-9.0696 0-16.422-7.3362-16.422-16.386\" style={{fill:\"#fff\"}}/>\r\n        <path id=\"circle__outer\" d=\"m0.24493 16.537c0 4.5052 1.8299 8.5839 4.789 11.536s7.0461 4.7781 11.562 4.7781c9.0297 0 16.233-7.303 16.233-16.314-7e-4 -9.0115-7.2036-16.314-16.233-16.315-4.5154 0-8.6025 1.8264-11.562 4.7788s-4.789 7.0314-4.789 11.537m-0.14241 0c0-9.0899 7.3834-16.457 16.493-16.457 4.5535-7e-4 8.649 1.8422 11.604 4.8198 2.9552 2.9783 4.7711 7.093 4.7711 11.637 0 4.5441-1.8159 8.6588-4.7711 11.637-2.9548 2.9783-7.0503 4.8198-11.604 4.8198-9.1095 0-16.493-7.367-16.493-16.457\" style={{fill:\"#d91920\"}}/>\r\n        <path id=\"circle__inner\" d=\"m2.1945 16.536c0 3.9618 1.6046 7.544 4.2008 10.142 2.5966 2.5958 6.1791 4.2001 10.142 4.2008 3.9611-7e-4 7.544-1.605 10.141-4.2008 2.5958-2.5976 4.2008-6.1798 4.2008-10.142s-1.605-7.5444-4.2008-10.141c-2.5969-2.5966-6.1798-4.2008-10.141-4.2008-3.9625 0-7.5451 1.6043-10.142 4.2008-2.5962 2.5966-4.2008 6.1791-4.2008 10.141m-1.0028 0c6.99e-4 -8.4751 6.8705-15.344 15.345-15.344 8.474 0 15.343 6.8691 15.344 15.344-7e-4 8.4748-6.8701 15.344-15.344 15.345-8.4748-7e-4 -15.345-6.8701-15.345-15.345\" style={{fill:\"#d91920\"}}/>\r\n        <path id=\"trademark\" d=\"m27.908 31.109c0.11756 0 0.22253-8e-3 0.22253-0.14905 0-0.11337-0.10287-0.13436-0.19944-0.13436h-0.18894v0.28341zm-0.16585 0.51399h-0.13821v-0.91497h0.34815c0.21623 0 0.3233 0.0798 0.3233 0.26032 0 0.1634-0.10287 0.23513-0.23723 0.25158l0.26032 0.40307h-0.15535l-0.24143-0.39643h-0.15955zm0.1683 0.20364c0.35864 0 0.64205-0.28131 0.64205-0.6634 0-0.37543-0.28341-0.65884-0.64205-0.65884-0.36319 0-0.6466 0.28341-0.6466 0.65884 0 0.38209 0.28341 0.6634 0.6466 0.6634m-0.80615-0.6634c0-0.45521 0.36948-0.79075 0.80615-0.79075 0.43177 0 0.80125 0.33554 0.80125 0.79075 0 0.45976-0.36948 0.79566-0.80125 0.79566-0.43667 0-0.80615-0.3359-0.80615-0.79566\" style={{fill:\"#d91920\"}}/>\r\n        <path id=\"text\" d=\"m28.356 14.782h1.2859v-0.47236h-1.2859zm-4.5633 4.9027c0.52729 1e-3 0.75577 0.37684 0.75717 0.86704 0 0.0273-1e-3 0.0549-2e-3 0.0847l-1.5997-0.0144c0.0406-0.46605 0.35024-0.93841 0.84498-0.93736m1.3765 2.4321c-0.27151 0.28657-0.53918 0.52589-0.92616 0.52589-0.0196 0-0.0392-7e-4 -0.0581-2e-3 -1.099-0.0665-1.2505-0.89537-1.2523-1.8404l1.9318 0.0143c0.20888-7e-4 0.29426-0.0269 0.29426-0.303-1e-3 -0.61546-0.52869-1.0444-1.261-1.0462-0.86808 2e-3 -1.5661 0.65045-1.5675 1.803 1e-3 1.1739 0.69209 1.8226 1.5675 1.8243 0.35864-7e-4 0.60847-0.0486 0.66515-0.0812l0.84219-0.87543zm-12.595-2.409c0.52694 1e-3 0.75507 0.37754 0.75647 0.86774 0 0.0273-7e-4 0.0553-1e-3 0.084l-1.6001-0.0136c0.0406-0.46606 0.34989-0.93807 0.84499-0.93807m0.44961 2.9584c-0.0192 0-0.0388-7e-4 -0.0574-1e-3 -1.0987-0.0661-1.2509-0.89573-1.2526-1.8408l1.9318 0.0143c0.20924-1e-3 0.29391-0.0266 0.29391-0.30266-7e-4 -0.61546-0.52763-1.0451-1.2607-1.0465-0.86843 2e-3 -1.5654 0.65045-1.5675 1.803 0.0021 1.1739 0.69174 1.8229 1.5675 1.8243 0.35934-7e-4 0.60881-0.049 0.6648-0.0812l0.84254-0.87578-0.23583-0.0189c-0.27187 0.28586-0.53918 0.52554-0.92652 0.52554m13.94 0.30895h-0.0206zm-1.8264-0.015v-2e-3zm1.3446-2.7477-0.0976 0.1571v-0.84674l-0.1704-0.0637-5e-3 0.0137-6e-3 -0.0137c-0.28377 0.12876-0.70049 0.24353-1.0332 0.28586l-0.0129 0.17705c0.21518 0.0143 0.42896 0.05 0.61406 0.14205l-8e-3 2.6004-0.62876 0.10706-0.0115 0.20364 1.8551 0.0143 0.0143-0.20364-0.6375-0.13576 0.0115-1.7635c7e-4 -0.12036 0.33029-0.93526 0.71623-0.93596 0.084-7e-4 0.20608 0.0626 0.28061 0.11861l0.18929 0.0182 0.13681-0.48215c-0.12386-0.10637-0.41287-0.12352-0.56053-0.12422-0.38383 2e-3 -0.49405 0.44087-0.64695 0.73128m-8.5367-7.2487c-0.11896-0.10217-0.39362-0.11861-0.53463-0.11931-0.36564 2e-3 -0.47061 0.42057-0.61581 0.69594l-0.0924 0.1473 7e-4 -0.80265-0.16235-0.0619-4e-3 0.014-6e-3 -0.0133c-0.26977 0.12211-0.6669 0.23163-0.98285 0.27221l-0.0122 0.169c0.20468 0.0143 0.40797 0.0486 0.58362 0.13611l-8e-3 2.4727-0.59727 0.10182-0.0122 0.19384h0.0147v3.5e-4h0.0455l1.7061 0.0147 0.0144-0.1949-0.60742-0.13016 0.0122-1.6767c0-0.11442 0.31386-0.88908 0.6802-0.88978 0.0794-7e-4 0.19559 0.0591 0.26626 0.11232l0.18125 0.0178zm-3.1924 3.2061v3.5e-4l-0.0196-3.5e-4zm-1.1424-0.29601-0.59726 0.10147-0.0122 0.19489 1.7663 0.0143 0.0143-0.1949-0.60742-0.13016 0.0115-1.6767c7e-4 -0.11442 0.31561-0.88943 0.68089-0.89013 0.0794-3.5e-4 0.19524 0.0595 0.26627 0.11302l0.1809 0.0175 0.13121-0.45941c-0.11897-0.10147-0.39363-0.11861-0.53534-0.11966-0.36494 2e-3 -0.46991 0.42057-0.61511 0.69629l-0.0917 0.1473v-0.80265l-0.16235-0.0616-4e-3 0.0136-7e-3 -0.0136c-0.26977 0.12246-0.6669 0.23198-0.98285 0.27256l-0.0123 0.16865c0.20469 0.0144 0.40797 0.049 0.58432 0.13611zm-1.9559-2.8422c0.49859 7e-4 0.71413 0.35584 0.71553 0.8198 0 0.0259-7e-4 0.0532-1e-3 0.0801l-1.5133-0.0133c0.03814-0.44156 0.331-0.88733 0.79916-0.88663m0.0987 3.2274c0.34079 0 0.57662-0.0458 0.6305-0.0766l0.79881-0.83065-0.22463-0.0185c-0.25822 0.27081-0.51155 0.49789-0.87823 0.49789-0.0178 0-0.036 0-0.0539-2e-3 -1.0399-0.0626-1.1833-0.84674-1.1851-1.7421h0.02169l1.8068 0.014c0.19804 0 0.27957-0.0259 0.27957-0.28761-1e-3 -0.58327-0.5007-0.99019-1.1956-0.99089-0.82259 1e-3 -1.4828 0.61581-1.4849 1.7085 0.0021 1.1116 0.65605 1.726 1.4849 1.7278m-5.9555-0.0889-0.01749-3.5e-4h0.01749zm4.796-3.5e-4v3.5e-4l-0.02169-3.5e-4zm-1.8999-0.0147v-2e-3zm-2.8674-0.16724-0.62771-0.13051 0.34954-3.7771 0.03254-0.0931 1.6833 4.0605 0.09307 9e-3 1.6368-4.0262 0.04514 0.0829 0.3226 3.7592-0.67039 0.10112-0.0119 0.19664 1.9286 0.0143 0.01434-0.19664-0.58607-0.13051-0.41917-4.1721 0.65675-0.10007-0.0021-0.0143 0.01435-1e-3 -0.0077-0.16725-1.4325-0.0136-1.4307 3.4793-1.451-3.4709-1.4573-8e-3 -0.02204 0.18089 0.71378 0.13156-0.40098 4.1693-0.55248 0.10322-0.0112 0.19664 1.578 0.0143zm12.176-2.7372h-3.5e-4l3.5e-4 -2e-3zm-0.0714 2.9044h-3.5e-4l3.5e-4 -5e-3zm0.62106-0.25612-0.62351 0.10147-0.0122 0.1697 1.7876 0.0143v-0.0143h0.0143v-0.15535l-0.62211-0.13016 0.0112-2.9996-0.13296-0.0616c-0.27536 0.12246-0.66444 0.23198-0.97445 0.27256l-0.0122 0.16865c0.20119 0.0144 0.39993 0.049 0.57243 0.13611zm2.9926-1.3191v0.22498l-0.0147 0.74912c-0.20644 0.12841-0.52694 0.29496-0.71868 0.29426-0.25367-7e-4 -0.51784-0.1795-0.51854-0.41427-2e-3 -0.46186 0.49265-0.59342 1.2519-0.85409m0-0.0147v4e-3c-0.0623 0.0196-0.12036 0.0381-0.17879 0.0567 0.0588-0.0199 0.11651-0.0395 0.17879-0.0609m-0.0252 1.627c-3.5e-4 0-4e-3 7e-4 -4e-3 7e-4l8e-3 -0.10112zm-1.0843 9e-3h0.0157c0.41602-0.0105 0.75262-0.16725 1.0707-0.41672l-0.0175 0.42162c7e-4 7e-4 2e-3 1e-3 6e-3 1e-3 2e-3 0 7e-3 -1e-3 9e-3 -1e-3v1e-3s9e-3 -2e-3 0.013-3e-3c0.12841-0.0147 0.79705-0.16585 1.0987-0.22218l0.021-4e-3 -0.10357-0.16095-0.4881-0.0507 7e-4 -2.0899c-7e-4 -0.60426-0.26207-0.87858-0.68474-0.87928-0.0196 0-0.0399-7e-4 -0.0605-7e-4 -0.0602 0-0.12386 4e-3 -0.18019 0.0367l-0.76592 0.45766c-0.0777 0.0504-0.35164 0.19979-0.36389 0.33275l-0.0259 0.37998 0.0525 0.0406 0.39958-0.0801c0.0497-0.0112 0.12176-8e-3 0.12176-0.0913v-0.0115c-4e-3 -0.0658-7e-3 -0.12946-7e-3 -0.18964 2e-3 -0.26627 0.0647-0.46501 0.54619-0.53359 0.0178-3e-3 0.035-5e-3 0.0521-5e-3 0.24177 2e-3 0.38488 0.25612 0.38558 0.74842v0.50455c-0.32855 0.10217-0.68859 0.24352-1.0731 0.37193-0.29111 0.0941-0.74247 0.23303-0.74247 0.81035 1e-3 0.27257 0.31245 0.63121 0.72112 0.63191m-1.6557-4.2214c0.16025 0 0.31281-0.12912 0.31351-0.30441-7e-4 -0.1795-0.13366-0.34045-0.31351-0.34115-0.17459 1e-3 -0.3009 0.1746-0.3009 0.34115 7e-4 0.1634 0.1459 0.30441 0.3009 0.30441m9.5678 4.1655h-0.0179zm-1.9752 0h-0.0182zm-2.001 0h-0.0182zm-1.605-0.0151h-3.5e-4l3.5e-4 -4e-3zm-0.0154-2.9167h-7e-4l7e-4 -4e-3zm5.1109 0.69628c2e-3 -0.68194-0.34255-1.0675-1.0665-1.0868-3e-3 -7e-4 -7e-3 -7e-4 -0.0105-7e-4 -0.0878 0-0.22778 0.035-0.42442 0.18824l-0.50665 0.43317c-0.18159-0.3443-0.52729-0.61337-0.93456-0.61442-0.26732-7e-4 -0.36494 0.0367-0.57417 0.20119l-0.48461 0.31351v-0.45871l-0.15569-0.0616c-0.26977 0.12246-0.64975 0.23198-0.95311 0.27256l-0.0157 0.13086c0.19699 0.015 0.39118 0.0493 0.56053 0.13681l-5e-3 2.5017-0.52869 0.10217-0.0115 0.1774 1.634 0.0143 0.0144-0.16095-0.55073-0.1473 0.0112-2.2421c0.24003-0.1837 0.514-0.40343 0.80301-0.40273 0.61301 7e-4 0.62806 0.62036 0.62876 1.1676v1.4916l-0.52869 0.11862-0.0109 0.16095 1.634 0.0143 0.0143-0.16095-0.55073-0.1473 0.0112-2.2491c0.23408-0.1725 0.54863-0.35304 0.84149-0.35304 0.55143 2e-3 0.58957 0.46675 0.59062 0.9587 0 0.0833-3.5e-4 0.1662-3.5e-4 0.24843v1.4094l-0.52869 0.11862-0.0115 0.16095 1.6095 0.0143 0.0143-0.16095-0.52589-0.1473zm-5.5916 8.3971-0.0196 0.0189c-0.1578 0.15815-0.40133 0.40273-0.59727 0.40133-0.37369-8e-3 -0.51924-0.26522-0.52134-0.73408 0-0.021 0-0.0416 1e-3 -0.0619v-1.8698h0.0241l0.99475 0.014 0.0144-0.34779-1.0476-0.0144 0.0143-0.89082-0.1795-0.0144c-0.1431 0.5-0.53918 0.79636-0.92476 1.0756l-7e-3 0.1774h0.0151v0.01435h0.49579l-0.0143 2.142c7e-4 0.6704 0.43247 0.91077 0.81945 0.91217 0.0151 0 0.0294-7e-4 0.0448-7e-4 0.54758-0.0273 0.92477-0.57242 0.92547-0.57312l-0.0336-0.22218zm-11.215-3.9632-0.04059-0.0108 0.04094 0.0101zm-0.63925-0.33345v-3.4e-4l0.01959 3.4e-4zm-4.5364 0.36144h6.99e-4l0.04444 0.14066zm0.59202-0.33064h7e-4l-0.0014 8e-3zm5.6186 0.15185 0.0109-0.18299-1.6994-0.014-0.01435 0.18334 0.6634 0.1774-0.09902 0.28306-1.1127 3.1438c-0.12106-0.36319-1.0332-3.1102-1.0955-3.3432l0.08537-0.13331 0.55423-0.0826 0.01225-0.20014-1.838-0.0119 7e-4 0.0144h-0.01505v0.18544l0.5035 0.11547 0.09167 0.16725c-0.06333 0.23582-1.0161 2.9408-1.1441 3.3044l-1.1008-3.4314 0.03254-9e-3 0.53569-0.13261 0.02519-0.19909-0.014-3.5e-4v-3.5e-4l-0.06753-3.5e-4 -1.831-0.0185-0.01784 0.18719 0.65395 0.162 1.5087 4.7645 0.23093 0.0105 1.374-3.7907 1.2743 3.7666 0.24527 0.0115 1.6658-4.7715zm4.0332 1.3058c-0.11336 0-0.21798 0.0213-0.32785 0.0357l-0.58362 0.37193 0.0847 0.0707c0.1578-0.0479 0.31561-0.0759 0.46606-0.0759 0.81315 1e-3 1.1739 0.75577 1.1746 1.521-7e-4 0.7939-0.34779 1.4657-1.0633 1.4671-0.47061-7e-4 -0.75087-0.3247-0.75157-0.79286v-4.6571l-0.14416-0.0644c-0.29356 0.12981-0.64975 0.24388-0.9804 0.28691l-8e-3 0.13331c0.21344 0.0136 0.36634 0.0486 0.55213 0.14101l-0.013 3.7155c0 0.16795 1e-3 0.33345 1e-3 0.49999 0 0.29601-4e-3 0.59342-0.0259 0.90553l0.13261 0.0717 0.26872-0.25997c0.22218 0.13366 0.50315 0.23898 0.75962 0.23968 1.2687-2e-3 1.8187-0.91252 1.8201-1.9006-1e-3 -1.1162-0.5028-1.7075-1.3625-1.7092m1.6032 2.3852-3.5e-4 -1e-3 0.0206 1e-3zm0.53534-1.5784c0-0.38803 0.28026-0.62736 0.60566-0.62806 0.44787 7e-4 0.66375 0.345 0.66515 0.80021l0.24283 0.0143 0.0273-0.69978h-0.0144l9e-3 -0.0112c-0.27747-0.24737-0.58887-0.31595-0.94297-0.31595-0.54863 1e-3 -1.0598 0.37928-1.0605 1.0189 8e-3 1.3303 1.7323 0.76101 1.7173 1.6644-1e-3 0.41812-0.26102 0.71343-0.66899 0.71448h-0.0182c-0.51189-0.0102-0.8303-0.43177-0.84394-0.9797l-0.26872-0.0136 1e-3 0.0143h-1e-3l6e-3 0.0682 0.0703 0.92336c0.3114 0.1781 0.6536 0.22463 0.98775 0.22463 0.6382-1e-3 1.2726-0.35269 1.2733-1.1228-7e-3 -1.2785-1.8034-0.90587-1.7876-1.6718\" style={{fill:\"#1b458f\"}}/>\r\n    </svg>\r\n)\r\n\r\n// Implement the Logo and Title for the desktop and mobile headers\r\nexport const HeaderBranding = () => (\r\n    <section className=\"header__branding\">\r\n        <LexLogo location={\"logo__header--lex\"} color={\"logo__white\"} />\r\n        <LexTitle location={\"title__header\"} color={\"title__white\"} />\r\n    </section>\r\n)","// Change CSS property values on the :root for light & dark mode\r\nconst ChangeColorMode = () => {\r\n    const root = document.documentElement.style\r\n    const colorMode = sessionStorage.getItem('colorMode')\r\n\r\n    if (colorMode !== 'dark') {\r\n        root.setProperty('--yellow', '#fbfbbe')\r\n        root.setProperty('--lightYellow', '#ffffdb')\r\n        root.setProperty('--darkYellow', '#f5f5b6')\r\n        root.setProperty('--fontColor', '#333333')\r\n        root.setProperty('--offWhite', '#FCFCFC')\r\n        root.setProperty('--black', 'rgb(7, 7, 7)')\r\n        root.setProperty('--lightBlack', '#171717ff')\r\n        root.setProperty('--lightGray', '#F6F6F6')\r\n        root.setProperty('--mediumGray', '#f1f1f1')\r\n        root.setProperty('--fontColorInactive', '#cacaca')\r\n        root.setProperty('--fontColorBtn', '#FCFCFC')\r\n    } else if (colorMode === 'dark') {\r\n        root.setProperty('--yellow', '#5e5e2c')\r\n        root.setProperty('--lightYellow', '#6a6c36')\r\n        root.setProperty('--darkYellow', '#53532d')\r\n        root.setProperty('--fontColor', 'white')\r\n        root.setProperty('--offWhite', '#1e1e1e')\r\n        root.setProperty('--black', 'rgb(195, 195, 195)')\r\n        root.setProperty('--lightBlack', 'white')\r\n        root.setProperty('--lightGray', '#2c2b2b')\r\n        root.setProperty('--mediumGray', '#2d2c2c')\r\n        root.setProperty('--fontColorInactive', '#4a4a4a')\r\n        root.setProperty('--fontColorBtn', '#333333')\r\n    }\r\n}\r\n\r\nexport default ChangeColorMode","import React, { useContext, useRef, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\nimport { AppRoute } from '../../utils/Routes'\r\nimport { LoginWelcome, LoginError, RegSuccess, RegFail, AnonWelcome, AnonError } from '../../utils/ToastMessages'\r\nimport { UserContext } from '../../providers/UserProvider'\r\nimport { LexLogo, LexTitle } from '../../components/branding/Branding'\r\nimport ChangeColorMode from '../../utils/ChangeColorMode'\r\nimport './AuthView.css'\r\n\r\nconst AuthView = () => {\r\n    // If logging out with dark mode active, this resets colors to white \r\n    ChangeColorMode()\r\n\r\n    const { login, anonymousLogin, register } = useContext(UserContext)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [loginEmail, setLoginEmail] = useState(\"\")\r\n    const [loginPassword, setLoginPassword] = useState(\"\")\r\n\r\n    const [registerEmail, setRegisterEmail] = useState(\"\")\r\n    const [registerPassword, setRegisterPassword] = useState(\"\")\r\n\r\n    // To allow for the nav underline to move, target it by useRef\r\n    const [activeBtn, setBtn] = useState(true)\r\n\r\n    // Get references for all of the elements that will change\r\n    // Nav Buttons\r\n    const loginBtn = useRef()\r\n    const registerBtn = useRef()\r\n    const underline = useRef()\r\n\r\n    const history = useHistory()\r\n\r\n    const handleRegister = (e) => {  \r\n        e.preventDefault()\r\n        setLoading(true)\r\n        const user = {\r\n            email: registerEmail,\r\n        }\r\n        register(user, registerPassword)\r\n            .then(user => {\r\n                setLoading(false)\r\n                // Store default settings in sessionStorage\r\n                // Use the user.id as the key to know who's settings to load\r\n                toast.success(RegSuccess())\r\n                history.push(AppRoute())\r\n            })\r\n            .catch(err => {\r\n                if (err.code !== undefined) {\r\n                    toast.error(RegFail())\r\n                }\r\n                setLoading(false)\r\n            })\r\n    }  \r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        login(loginEmail, loginPassword)\r\n            .then(user => {\r\n                toast.info(LoginWelcome())\r\n            })\r\n            .catch(err => {\r\n                setLoading(false)\r\n                toast.error(LoginError())\r\n            })\r\n    }\r\n    \r\n    return (\r\n        <main className=\"auth__container\">    \r\n            <div className=\"border__top\" />\r\n            <div className=\"auth__column--middle\">\r\n\r\n                <div className=\"auth__branding\">\r\n                    <LexLogo location={\"logo__login--lex\"}/>\r\n                    <LexTitle location={\"title__login\"} />\r\n                    <h2 className=\"subtitle\">\r\n                        Create custom word collections<br/>\r\n                        using Merriam-Webster's Collegiate<sup>&#174;</sup> Thesaurus\r\n                    </h2>\r\n                </div>\r\n\r\n                <section className=\"card card__color--white card__auth\">\r\n                    <ul  className=\"auth__btns\">\r\n                        {/* LOGIN BTN */}\r\n                        <li className=\"btns__li\">\r\n                            <button\r\n                            className={activeBtn ? \"auth__btn auth__btn--active\" : \"auth__btn\"}\r\n                            onClick={e => {\r\n                                setBtn(true)\r\n                                if (registerEmail) {                                 \r\n                                    setLoginEmail(\"\")\r\n                                }\r\n                                if (registerPassword) {                                \r\n                                    setLoginPassword(\"\")\r\n                                }\r\n                            }}\r\n                            onMouseEnter={e => underline.current.className = \"auth__line line__login--active\"}\r\n                            onMouseLeave={e => underline.current.className = `auth__line ${activeBtn ? \"line__login--active\" : \"line__register--active\"}`}>\r\n                                Log in\r\n                            </button>\r\n                        </li>\r\n                        {/* REGISTER BTN */}\r\n                        <li className=\"btns__li\">\r\n                            <button\r\n                            className={activeBtn ? \"auth__btn\" : \"auth__btn auth__btn--active\"}\r\n                            onClick={e => {\r\n                                setBtn(false)\r\n                                if (loginEmail) {\r\n                                    setLoginEmail(\"\")\r\n                                }\r\n                                if (loginPassword) {\r\n                                    setLoginPassword(\"\")\r\n                                }\r\n                            }}\r\n                            onMouseEnter={e => underline.current.className = \"auth__line line__register--active\"}\r\n                            onMouseLeave={e => underline.current.className = `auth__line ${activeBtn ? \"line__login--active\" : \"line__register--active\"}`}>\r\n                                Register\r\n                            </button>\r\n                        </li>\r\n                        \r\n                        {/* Underline under Nav btns */}\r\n                        <div ref={underline} className={`auth__line ${activeBtn ? \"line__login--active\" : \"line__register--active\"}`}></div>\r\n                    \r\n                    </ul>\r\n\r\n                    <section className=\"auth__form\">\r\n                        <form\r\n                        className=\"form\"\r\n                        onSubmit={activeBtn ? handleLogin : handleRegister}>\r\n\r\n                            <fieldset>\r\n                                <label htmlFor={activeBtn ? \"emailLogin\" : \"usernameRegister\"}>Email</label>\r\n                                <input\r\n                                    className=\"input--auth\"\r\n                                    type=\"email\"\r\n                                    id={activeBtn ? \"emailLogin\" : \"usernameRegister\"}\r\n                                    value={activeBtn ? loginEmail : registerEmail}\r\n                                    onChange={e => {\r\n                                        if (activeBtn) {\r\n                                            setLoginEmail(e.target.value)\r\n                                        } else {\r\n                                            setRegisterEmail(e.target.value)\r\n                                        }\r\n                                    }}\r\n                                    placeholder=\"user@email.com\"\r\n                                    required\r\n                                    autoFocus />\r\n                            </fieldset>\r\n                            \r\n                            <fieldset>\r\n                                <label htmlFor={activeBtn ? \"passwordLogin\" : \"passwordRegister\"}>Password</label>\r\n                                <input\r\n                                    className=\"input--auth\"\r\n                                    id={activeBtn ? \"passwordLogin\" : \"passwordRegister\"}\r\n                                    value={activeBtn ? loginPassword : registerPassword}\r\n                                    onChange={e => {\r\n                                        if (activeBtn) {\r\n                                            setLoginPassword(e.target.value)\r\n                                        } else {\r\n                                            setRegisterPassword(e.target.value)\r\n                                        }\r\n                                    }}\r\n                                    placeholder=\"password\"\r\n                                    type=\"password\"\r\n                                    minLength={6}\r\n                                    required\r\n                                    autoFocus />\r\n                            </fieldset>\r\n                            \r\n                            {/* If Loading, show spinner instead of button */}\r\n                            {loading ? (\r\n                                <div className=\"spinner__card\">\r\n                                    <div className=\"cls-spinner cls-spinner--card\">\r\n                                        <div className=\"cls-circle cls-spin\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            ) : (\r\n                                <fieldset className=\"fieldset__btn auth__submit\">\r\n                                    <button \r\n                                    ref={loginBtn}\r\n                                    disabled={loading}\r\n                                    className={`btn btn__authSubmit ${activeBtn ? \"login__active\" : \" login__inactive\"}`}\r\n                                    type=\"submit\">\r\n                                        Login\r\n                                    </button>\r\n                                    <button\r\n                                    ref={registerBtn} \r\n                                    disabled={loading}\r\n                                    className={`btn btn__authSubmit ${activeBtn ? \"register__inactive\" : \"register__active\"}`}\r\n                                    type=\"submit\">\r\n                                        Register\r\n                                    </button>\r\n                                </fieldset>\r\n                            )}\r\n\r\n                        </form>\r\n\r\n                        <button\r\n                        onClick={e => {\r\n                            anonymousLogin()\r\n                            .then(user => {\r\n                                toast.info(AnonWelcome())\r\n                                history.push(AppRoute())\r\n                            })\r\n                            .catch(err => {\r\n                                toast.error(AnonError())\r\n                            })\r\n                        }}\r\n                        className=\"btn__no-style\">\r\n                            Continue without signing in\r\n                        </button>\r\n                    </section>\r\n                </section>\r\n\r\n            </div>\r\n            <div className=\"border__bottom\" />\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default AuthView","import React from \"react\"\r\nimport \"./Icons.css\"\r\n\r\n// Icon contains all icons used for Lexicon\r\n// To use Icons, pass in the following\r\n    // a \"Color=value\" with the value based on Icons.css\r\n\r\n// Takes a disabled prop\r\n// arrow also takes a rotation prop of rotation={icon__arrow--rotated} to flip 90deg\r\nexport const IconArrow = props => (\r\n    <svg className={`icon__arrow ${props.rotation}`} width=\"35\" height=\"20\" version=\"1.1\" viewBox=\"0 0 9.2606 5.2918\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <title>Arrow Icon</title>\r\n        <g transform=\"matrix(.526 0 0 .526 -.93661 -2.9209)\">\r\n            <rect className={props.disabled ? \"icon__disabled\" : props.color} id=\"line_right\" transform=\"rotate(45)\" x=\"16.259\" y=\"-8.8998\" width=\"2.5113\" height=\"12.703\"/>\r\n            <rect className={props.disabled ? \"icon__disabled\" : props.color} id=\"line_left\" transform=\"rotate(135)\" x=\"1.2924\" y=\"-18.771\" width=\"2.5113\" height=\"12.703\"/>\r\n        </g>\r\n    </svg>\r\n)\r\n\r\nexport const IconPlus = props => (\r\n    <svg className=\"icon__plus\" width=\"30\" height=\"30\" version=\"1.1\" viewBox=\"0 0 7.9376 7.9376\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <title>Plus Icon</title>\r\n        <g transform=\"matrix(.61526 0 0 .61526 -2.5428 -2.5426)\">\r\n            <rect className={props.color} id=\"plus_vert\" x=\"9.3277\" y=\"4.2316\" width=\"2.5113\" height=\"12.703\" ry=\"1.2556\"/>\r\n            <rect className={props.color} id=\"plus_horz\" transform=\"rotate(90)\" x=\"9.3277\" y=\"-16.935\" width=\"2.5113\" height=\"12.703\" ry=\"1.2556\"/>\r\n        </g>\r\n    </svg>\r\n)\r\n\r\nexport const IconHamburger = props => (\r\n    <svg className=\"icon__hamburger\" width=\"30\" height=\"25\" version=\"1.1\" viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <title>Hamburger Icon</title>\r\n        <g transform=\"matrix(.61526 0 0 .61526 -2.5428 -2.5426)\">\r\n            <rect className={props.color} id=\"plus_horz\" transform=\"rotate(90)\" x=\"8\" y=\"-16.935\" width=\"2.5113\" height=\"12.703\" ry=\"1.2556\"/>\r\n            <rect className={props.color} id=\"plus_horz\" transform=\"rotate(90)\" x=\"12\" y=\"-16.935\" width=\"2.5113\" height=\"12.703\" ry=\"1.2556\"/>\r\n            <rect className={props.color} id=\"plus_horz\" transform=\"rotate(90)\" x=\"16\" y=\"-16.935\" width=\"2.5113\" height=\"12.703\" ry=\"1.2556\"/>\r\n        </g>\r\n    </svg>\r\n)\r\n\r\nexport const IconClose = props => (\r\n    <svg className=\"icon__close\" width=\"23\" height=\"23\" version=\"1.1\" viewBox=\"0 0 6.0855 6.0855\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <title>Close Icon</title>\r\n        <g transform=\"matrix(.43505 -.43505 .43505 .43505 -6.1659 3.0428)\">\r\n            <rect className={props.color} id=\"line_vert\" x=\"9.3277\" y=\"4.2316\" width=\"2.5113\" height=\"12.703\" ry=\"1.2556\"/>\r\n            <rect className={props.color} id=\"line_horz\" transform=\"rotate(90)\" x=\"9.3277\" y=\"-16.935\" width=\"2.5113\" height=\"12.703\" ry=\"1.2556\"/>\r\n        </g>\r\n    </svg>\r\n)\r\n\r\nexport const IconDots = props => (\r\n    <svg className=\"icon__dots\" width=\"75\" height=\"20\" version=\"1.1\" viewBox=\"0 0 19.844 5.2918\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <title>Dots Icon</title>\r\n        <g transform=\"matrix(.94666 0 0 .94666 -.096637 -7.3726)\">\r\n            <path className={props.color} d=\"m5.4272 10.583a2.5509 2.5509 0 0 1-2.551 2.5509 2.5509 2.5509 0 0 1-2.5508-2.5509 2.5509 2.5509 0 0 1 2.5508-2.5509 2.5509 2.5509 0 0 1 2.551 2.5509z\"/>\r\n            <path className={props.color} d=\"m13.298 10.583a2.5509 2.5509 0 0 1-2.5509 2.5509 2.5509 2.5509 0 0 1-2.551-2.5509 2.5509 2.5509 0 0 1 2.551-2.5509 2.5509 2.5509 0 0 1 2.5509 2.5509z\"/>\r\n            <path className={props.color} d=\"m20.841 10.583a2.5509 2.5509 0 0 1-2.5509 2.5509 2.5509 2.5509 0 0 1-2.551-2.5509 2.5509 2.5509 0 0 1 2.551-2.5509 2.5509 2.5509 0 0 1 2.5509 2.5509z\"/>\r\n        </g>\r\n    </svg>\r\n)\r\n\r\nexport const IconLogout = props => (\r\n    <svg className=\"icon__logout\" width=\"35\" height=\"30\" version=\"1.1\" viewBox=\"0 0 9.2606 7.9376\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <title>Logout Icon</title>\r\n        <g transform=\"matrix(.73547 0 0 .73547 -3.1534 -3.8149)\">\r\n            <path className={props.color} id=\"logout__rect\" d=\"m15.97 5.4395c0.3658-3.2e-4 0.66243 0.2963 0.66211 0.66211v8.9102c3.18e-4 0.36581-0.29631 0.66243-0.66211 0.66211h-5.1123c-0.36505-7.41e-4 -0.66048-0.29706-0.66016-0.66211v-8.9102c-3.2e-4 -0.36505 0.29511-0.66136 0.66016-0.66211zm-0.66211 1.3223h-3.788v7.5898h3.788z\" style={{colorRendering:\"auto\",color:\"#000000\",dominantBaseline:\"auto\",imageRendering:\"auto\",inlineSize:\"0\",isolation:\"auto\",mixBlendMode:\"normal\",shapeMargin:\"0\",shapePadding:\"0\",shapeRendering:\"auto\",solidColor:\"#000000\",stopColor:\"#000000\"}}/>\r\n            <path className={props.color} id=\"logout__arrow\" d=\"m8.0477 5.6538c8e-3 -1.1e-4 0.016-1e-4 0.024 1e-5 0.22161 9e-3 0.43181 0.10058 0.58864 0.2574l4.0486 4.0486c0.34402 0.3441 0.34402 0.90192 0 1.246l-4.0486 4.0514c-0.34418 0.34449-0.90254 0.34449-1.2467 0-0.34405-0.34411-0.34405-0.90195 0-1.2461l2.5451-2.5472-4.2401 1e-5c-0.48557-7.6e-4 -0.87901-0.39421-0.87978-0.87978-3.7e-4 -0.48639 0.39341-0.88109 0.87979-0.88185h4.2401l-2.5451-2.5451c-0.34404-0.34411-0.34404-0.90196 1e-5 -1.2461 0.1679-0.16797 0.39652-0.26105 0.634-0.25814z\" style={{colorRendering:\"auto\",color:\"#000000\",dominantBaseline:\"auto\",imageRendering:\"auto\",inlineSize:\"0\",isolation:\"auto\",mixBlendMode:\"normal\",shapeMargin:\"0\",shapePadding:\"0\",shapeRendering:\"auto\",solidColor:\"#000000\",stopColor:\"#000000\",strokeLinecap:\"round\",strokeWidth:\".60854\",stroke:\"#171717ff\"}}/>\r\n        </g>\r\n    </svg>\r\n)\r\n\r\nexport const IconGear = props => (\r\n    <svg className=\"icon__gear\" width=\"30\" height=\"30\" version=\"1.1\" viewBox=\"0 0 7.9375 7.9375\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <title>Gear Icon</title>\r\n        <g>\r\n            <path className={props.color} id=\"gear\" d=\"m3.9685 0.058889c-0.38735 0-0.70855 0.32274-0.70855 0.71007 0 0.037027 0.0037 0.073145 0.00935 0.10874-0.35458 0.081004-0.68711 0.22203-0.98649 0.41169-0.12998-0.17572-0.33796-0.29142-0.57002-0.29142-0.38735 0-0.70855 0.3212-0.70855 0.70855 0 0.23114 0.1147 0.43847 0.28925 0.56849-0.19232 0.30115-0.33522 0.63621-0.41713 0.99367-0.03218-0.0046-0.064775-0.00783-0.098084-0.00783-0.38735 0-0.70942 0.32186-0.70942 0.7092 1.3e-7 0.38735 0.32207 0.70942 0.70942 0.70942 0.033309 0 0.065903-0.00324 0.098084-0.00783 0.08206 0.35805 0.22542 0.6936 0.41821 0.99519-0.17551 0.13003-0.29121 0.33789-0.29121 0.56958 1e-7 0.38735 0.32207 0.70855 0.70942 0.70855 0.23272 0 0.4412-0.11637 0.5711-0.29295 0.29896 0.18931 0.631 0.33007 0.98497 0.41104-0.0054 0.034786-0.00913 0.07-0.00913 0.10613-5e-7 0.38735 0.32207 0.70942 0.70942 0.70942 0.38735 0 0.70855-0.32207 0.70855-0.70942 0-0.036048-0.00356-0.07121-0.00892-0.10591 0.34986-0.079957 0.6783-0.21833 0.97453-0.40429 0.12954 0.17772 0.33857 0.2949 0.57219 0.2949 0.38735 0 0.70942-0.3212 0.70942-0.70855 0-0.23062-0.11467-0.43748-0.28881-0.56762 0.19624-0.3044 0.34195-0.64368 0.42496-1.0061 0.032203 0.00459 0.064748 0.00783 0.098084 0.00783 0.38735 0 0.70942-0.32207 0.70942-0.70942 0-0.38735-0.32207-0.7092-0.70942-0.7092-0.033336 0-0.06588 0.00323-0.098084 0.00783-0.081844-0.35738-0.22453-0.69235-0.41669-0.99345 0.17509-0.13 0.29055-0.33734 0.29055-0.56871 0-0.38735-0.32207-0.70855-0.70942-0.70855-0.23206 0-0.44003 0.1157-0.57002 0.29142-0.29933-0.18971-0.6319-0.33067-0.98649-0.41169 0.0057-0.035604 0.00957-0.071704 0.00957-0.10874 0-0.38733-0.32274-0.71007-0.71007-0.71007zm6.472e-4 2.5139c0.78227 0 1.3973 0.61504 1.3973 1.3973 0 0.78227-0.61504 1.3975-1.3973 1.3975-0.78227 0-1.3973-0.61526-1.3973-1.3975-1e-7 -0.78227 0.61504-1.3973 1.3973-1.3973z\"/>\r\n        </g>\r\n    </svg>\r\n)","// Util for changing Icon's SVG class on hover\r\nexport const ChangeIconClassOnHover = (hoverEvent, isOnMouseOver, initialClass, afterClass) => {\r\n    // Must convert HTMLCollection of SVG elements to an Array to loop through children\r\n    const svgs = Array.from(hoverEvent.currentTarget.firstElementChild.children[1].children)  \r\n    // If isOnMouseOver is true, change classList; if false, revert\r\n    if (isOnMouseOver) {\r\n        svgs.forEach(svg => {                           \r\n            svg.classList.remove(initialClass)\r\n            svg.classList.add(afterClass)\r\n        })      \r\n    } else {\r\n        // On mouseLeave event\r\n        svgs.forEach(svg => {                           \r\n            svg.classList.remove(afterClass)\r\n            svg.classList.add(initialClass)\r\n        })\r\n    }\r\n}","import React from \"react\"\r\nimport { useHistory } from 'react-router-dom'\r\nimport { IconClose } from \"../icons/Icons\"\r\nimport { ChangeIconClassOnHover } from \"../../utils/ChangeIconClassOnHover\"\r\nimport \"./Modal.css\"\r\n// To use Modal\r\n    // Add content with\r\n        // contentFunction\r\n    // Add a type label to top right corner with\r\n        // contentHeader\r\n    // Pass in isOpen state\r\n        \r\nconst Modal = props => {\r\n    const history = useHistory()\r\n\r\n    const closeModal = () => {\r\n        // need to store the last selected collection to return the app to the correct view.\r\n        history.push('/app')\r\n    }\r\n    \r\n    return (\r\n        // Background\r\n        <section className={props.isOpen ? (\r\n            \"background__modal modal__active\" \r\n        ) : (\r\n            \"background__modal\" \r\n        )}\r\n        onClick={e => {\r\n            // If you click on the background, close modal\r\n            if (e.target.className === \"background__modal modal__active\") {\r\n                closeModal()\r\n            }\r\n        }}>\r\n\r\n            {/* Modal Card */}\r\n            <article className=\"modal__container\">\r\n                <section className=\"modal__header\">\r\n                    <div className=\"card__type\">\r\n                        {props.contentHeader}\r\n                    </div>\r\n                    <button className=\"btn__close\"\r\n                    onClick={e => closeModal()}\r\n                    onMouseOver={e => ChangeIconClassOnHover(e, true, \"icon__gray\", \"icon__hovered\")}\r\n                    onMouseLeave={e => ChangeIconClassOnHover(e, true, \"icon__hovered\", \"icon__gray\")}>\r\n                        <IconClose color=\"icon__gray\" />\r\n                    </button>\r\n                </section>\r\n                {/* Modal body content */}\r\n                <section className=\"modal__content\">\r\n                    {props.contentFunction}                \r\n                </section>\r\n            </article>\r\n        </section>\r\n    )\r\n\r\n    }\r\n\r\n\r\n\r\nexport default Modal","import React, { useContext } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\nimport { UserContext } from '../../providers/UserProvider'\r\nimport { DeleteContext } from '../../providers/DeleteProvider'\r\nimport { CollectionManagerString, CollectionManagerRoute, ProjectManagerString, ProjectManagerRoute, WordDeleteRoute, WordString, AppRoute } from '../../utils/Routes'\r\nimport { DeleteSuccessful, DeleteFailure, DbNoConnection } from '../../utils/ToastMessages'\r\nimport Modal from '../modal/Modal'\r\nimport './Delete.css'\r\n\r\nconst Delete = () => {\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const { getToken } = useContext(UserContext)\r\n    const { objectToDelete, setObjectToDelete, isDeleteModalOpen, setIsDeleteModalOpen } = useContext(DeleteContext)\r\n\r\n    // Create the delete fetch here, instead of a provider. It will only ever be used here.\r\n    const deleteCollection = (collectionId) => {\r\n      getToken().then(token => \r\n          fetch(`/api/collection/${collectionId}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }).then(res => {\r\n              if (res.status === 500) {\r\n                  toast.error(DbNoConnection())\r\n              }\r\n            if (res.status === 204) {\r\n              setIsDeleteModalOpen(false)\r\n              setObjectToDelete(undefined)\r\n              toast.info(DeleteSuccessful(objectToDelete.name))\r\n              history.push(CollectionManagerRoute())\r\n            } else {\r\n              toast.error(DeleteFailure(\"collection\"))\r\n            }\r\n          }))\r\n    }\r\n\r\n    const deleteProject = (projectId) => {\r\n      getToken().then(token => \r\n          fetch(`/api/project/${projectId}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }).then(res => {\r\n              if (res.status === 500) {\r\n                  toast.error(DbNoConnection())\r\n              }\r\n            if (res.status === 204) {\r\n              setIsDeleteModalOpen(false)\r\n              setObjectToDelete(undefined)\r\n              toast.info(DeleteSuccessful(objectToDelete.name))\r\n              history.push(ProjectManagerRoute())\r\n            } else {\r\n              toast.error(DeleteFailure(\"project\"))\r\n            }\r\n          }))\r\n    }\r\n\r\n    const deleteWord = (wordId) => {\r\n      getToken().then(token => \r\n          fetch(`/api/word/${wordId}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }).then(res => {\r\n              if (res.status === 500) {\r\n                  toast.error(DbNoConnection())\r\n              }\r\n            if (res.status === 204) {\r\n              setIsDeleteModalOpen(false)\r\n              setObjectToDelete(undefined)\r\n              toast.info(DeleteSuccessful(objectToDelete.name))\r\n              history.push(AppRoute())\r\n            } else {\r\n              toast.error(DeleteFailure(\"word\"))\r\n            }\r\n          }))\r\n    }\r\n\r\n    // Create an array of all possible routes to use a .find on\r\n    const possibleDeleteRoutes = [CollectionManagerString(), ProjectManagerString(), WordString(),]\r\n\r\n    const deleteItem = () => {\r\n      const currentUrl = location.pathname\r\n      \r\n      // Find which path from the array of possibleDeleteRoutes is the current url\r\n      const currentDeletePath = possibleDeleteRoutes.find(r => currentUrl.match(r))\r\n\r\n      // Decide which delete function to call\r\n      switch (currentDeletePath) {\r\n        case CollectionManagerString():\r\n          deleteCollection(objectToDelete.id)\r\n          break\r\n        case ProjectManagerString():\r\n          deleteProject(objectToDelete.id)\r\n          break\r\n        case WordString():\r\n          deleteWord(objectToDelete.id)\r\n          break\r\n      }\r\n    }\r\n\r\n    const deleteContent = () => (\r\n      !objectToDelete ? (\r\n        <div className=\"spinner__center\">\r\n            <div className=\"cls-spinner\">\r\n                <div className=\"cls-circle cls-spin\"></div>\r\n            </div>\r\n        </div>\r\n      ) : (  \r\n        <>\r\n            <h2 className=\"modal__h2 modal__warning\">Warning!</h2>\r\n            <p className=\"warning__p\">Deleting <span className=\"bold\">{objectToDelete.name}</span> is <span className=\"bold\">permanent</span>.</p>\r\n            <p className=\"warning__p\">Are you sure you wish to proceed?</p>\r\n            <div className=\"delete__btns\">\r\n                <button\r\n                    className=\"btn btn--red btn--delete\"\r\n                    onClick={() => deleteItem()}>\r\n                    Delete\r\n                </button>\r\n                <button\r\n                    className=\"btn btn--cancel\"\r\n                    onClick={() => {\r\n                        history.goBack()\r\n                        setIsDeleteModalOpen(false)\r\n                        setObjectToDelete(undefined)\r\n                        }}>\r\n                    Cancel\r\n                </button>\r\n            </div>\r\n        </>\r\n      )\r\n    )\r\n\r\n    return (\r\n        <Modal\r\n            contentFunction={deleteContent()}\r\n            contentHeader={\"Delete\"}\r\n            isOpen={isDeleteModalOpen} />\r\n    )\r\n}\r\n\r\nexport default Delete","import React, { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { UserContext } from '../../providers/UserProvider'\r\nimport { IconLogout, IconGear, IconArrow } from '../icons/Icons'\r\nimport { ChangeIconClassOnHover } from '../../utils/ChangeIconClassOnHover'\r\nimport { SettingsRoute } from '../../utils/Routes'\r\nimport SettingsForm from '../forms/SettingsForm'\r\nimport Modal from '../modal/Modal'\r\nimport './Buttons.css'\r\n\r\n// Buttons take a { isMobile } prop that is a boolean. Allows for the SubHeader styling and Hamburger styling\r\nexport const Logout = ({ isMobile }) => {\r\n    const { logout } = useContext(UserContext)\r\n\r\n    return (\r\n        <button\r\n            className={!isMobile ? (\r\n                \"nav__btn btn__logout\"\r\n            ) : (\r\n                \"nav__btn btn__logout btn__mobile\"\r\n            )} \r\n            onClick={() => logout()}\r\n            onMouseOver={e => ChangeIconClassOnHover(e, true, 'icon__whiteNoChange', 'icon__hovered')}\r\n            onMouseLeave={e => ChangeIconClassOnHover(e, false, 'icon__whiteNoChange', 'icon__hovered')}>\r\n            <IconLogout color=\"icon__whiteNoChange\" />\r\n            Logout\r\n        </button>\r\n    )\r\n}\r\n\r\n// Clicking a WordButton opens its definition card\r\nexport const WordButton = ({ word, getWordFromThesaurus, isSelectedCard }) => (\r\n    <li className=\"item__li\">\r\n        <button className=\"btn btn--pill\"\r\n            onClick={e => getWordFromThesaurus(word)}>\r\n            {word}\r\n        </button>\r\n    </li>\r\n)\r\n\r\n// Delete WordButton\r\nexport const DeleteWordButton = ({ wordId, word, history, deleteUrlToPushTo }) => (\r\n    <li className=\"item__li\">\r\n        <button className=\"btn btn--pill btn--red\"\r\n            onClick={e => history.push(deleteUrlToPushTo(wordId))}>\r\n            {word}\r\n        </button>\r\n    </li>\r\n)\r\n\r\n//  Settings currently not implemented\r\n// export const Settings = ({ isMobile }) => (\r\n    // <button\r\n    //     className={!isMobile ? (\r\n    //         \"nav__btn btn__settings\"\r\n    //     ) : (\r\n    //         \"nav__btn btn__settings btn__mobile\"\r\n    //     )}\r\n    //     onClick={() => history.push(SettingsRoute())}\r\n    //     onMouseOver={e => ChangeIconClassOnHover(e, true, 'icon__whiteNoChange', 'icon__hovered')}\r\n    //     onMouseLeave={e => ChangeIconClassOnHover(e, false, 'icon__whiteNoChange', 'icon__hovered')}>\r\n    //     <IconGear color=\"icon__whiteNoChange\" />\r\n    //     Settings\r\n    // </button>\r\n//)\r\n\r\nexport const DropDownOptions = ({ itemToSelectString, items }) => (\r\n    <>\r\n        <option value=\"0\">Select {itemToSelectString}</option>\r\n        {items.map(item => {\r\n            return <option key={item.id} value={item.id}>\r\n                {item.name}\r\n            </option>\r\n        })}\r\n    </>\r\n)\r\n\r\nexport const AddableButton = ({\r\n    item,\r\n    onClickFunction,\r\n    itemsAvailableStateArray,\r\n    setItemsAvailableStateArray,\r\n    itemsAddedState,\r\n    setItemsAddedToStateArray }) => (\r\n    <li className=\"item__li\">\r\n        <button   \r\n            className=\"btn btn--pill\"\r\n            onClick={e => onClickFunction(e, itemsAvailableStateArray, setItemsAvailableStateArray, itemsAddedState, setItemsAddedToStateArray)}>\r\n            {item.name}\r\n        </button>\r\n    </li>\r\n)\r\n\r\nexport const RemovableItemButton = ({ text, isActive }) => (\r\n    <li className=\"item__li\">\r\n        <button\r\n            className={isActive ? (\r\n                \"btn btn--pill\"\r\n            ) : (\r\n                \"btn btn--pill btn--disabled\"\r\n            )}\r\n            disabled={isActive}>\r\n                {text}\r\n        </button>\r\n    </li>\r\n)\r\n\r\nexport const ManagerButton = ({\r\n    isMobile,\r\n    managerRoute,\r\n    managerBtnText,\r\n    setHamburgerIsOpen }) => {\r\n        const history = useHistory()\r\n\r\n        return (\r\n            <button\r\n                className={!isMobile ? (\r\n                    \"btn btn__subheader\"\r\n                ) : (\r\n                    \"btn__mobile\"\r\n                )}\r\n                onClick={() => {  \r\n                    if (isMobile) {\r\n                        setHamburgerIsOpen.setHamburgerIsOpen(false)\r\n                    }\r\n                    history.push(managerRoute())}}>\r\n                {managerBtnText}\r\n            </button>\r\n        )\r\n}\r\n\r\nexport const ManagerArrow = ({ isForm, history, managerUrlToPushTo }) => (\r\n    <button\r\n        className=\"btn__no-style btn__manager card btn__card--arrow btn__collection \"\r\n        onMouseOver={e => ChangeIconClassOnHover(e, true, 'icon__gray', 'icon__hovered')}\r\n        onMouseLeave={e => ChangeIconClassOnHover(e, false, 'icon__gray', 'icon__hovered')}\r\n        onClick={e => {\r\n            e.preventDefault()\r\n            history.push(managerUrlToPushTo())}}>\r\n                {isForm ? (\r\n                    <IconArrow color=\"icon__gray\" />\r\n                ) : (\r\n                    <IconArrow rotation=\"icon__arrow--rotated\" color=\"icon__gray\" />\r\n                )}\r\n    </button>\r\n)\r\n\r\nexport const ManagerCreate = ({ history, formUrlToPushTo, createNewString }) => (\r\n    <button\r\n        onMouseOver={e => ChangeIconClassOnHover(e, true, 'icon__black', 'icon__whiteNoChange')}\r\n        onMouseLeave={e => ChangeIconClassOnHover(e, false, 'icon__black', 'icon__whiteNoChange')}\r\n        className=\"btn btn__controls\"\r\n        onClick={e => history.push(formUrlToPushTo()) }>\r\n        <IconArrow color=\"icon__black\" rotation=\"icon__arrow--rotated\" />\r\n        Create new {createNewString}\r\n    </button>\r\n)\r\n","import React from 'react'\r\nimport { Logout, Settings } from '../../buttons/Buttons'\r\nimport { HeaderBranding } from '../../branding/Branding'\r\nimport './Header.css'\r\n\r\nconst Header = () => (\r\n    <header className=\"header\">\r\n        <HeaderBranding />\r\n\r\n        <nav>\r\n            <ul className=\"nav__list\">\r\n                <div className=\"nav__rightAligned\">\r\n                    {/* <li className=\"nav__item\">\r\n                        <Settings />\r\n                    </li> */}\r\n                    \r\n                    <li className=\"nav__item\">\r\n                        <Logout />\r\n                    </li>\r\n                </div>\r\n            </ul>\r\n        </nav>  \r\n    </header>\r\n)\r\n\r\nexport default Header","import React from 'react'\r\nimport './Inputs.css'\r\n\r\n// Used by ListColumn, Collection Manager, Project Manager, and ThesaurusSearch\r\nexport const SearchBar = ({ labelTitle, placeholderText, setSearchTerms }) => (\r\n    <fieldset className=\"input__search\">\r\n        <label className=\"card__type type__margin--search\" htmlFor=\"collectionSearch\">{labelTitle}</label>\r\n        <input type=\"text\"\r\n            name=\"collectionSearch\"\r\n            className=\"input__search\"\r\n            onChange={\r\n                (keyEvent) => setSearchTerms(keyEvent.target.value)\r\n            }\r\n            placeholder={placeholderText} />\r\n    </fieldset>\r\n)\r\n\r\nexport const DropDown = ({\r\n    nameOf,\r\n    fieldsetLocation,\r\n    labelIdName,\r\n    history,\r\n    urlToPushTo,\r\n    currentState,\r\n    stateArray,\r\n    setCurrentState,\r\n    isCollection,\r\n    isHamburger  }) => {\r\n// To use:\r\n    // nameOf the dropdown for placeholders like 'collection' or 'project'\r\n    // fieldsetLocation ClassName for either 'subHeader__fieldset' etc\r\n    // labelIdName like 'collectionSelect'\r\n    // currentState like 'selectedCollection' for the current item in state\r\n    // stateArray to map over and create drop-downs\r\n    // isHamburger is a bool to style labels and drop-downs\r\n\r\n    if (!stateArray) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <fieldset className={fieldsetLocation}>\r\n            <label\r\n            className={!isHamburger ? (\r\n                \"\"\r\n            ) : (\r\n                \"label__hamburger\"\r\n            )}\r\n            htmlFor=\"collectionSelect\">\r\n                {nameOf}:\r\n            </label>\r\n\r\n            <select\r\n                className={!isHamburger ?  \"\"  : \"select__hamburger\"}\r\n                id={labelIdName}\r\n                name={labelIdName}\r\n                value={currentState === undefined ? (\r\n                    0\r\n                ) : (\r\n                    isCollection ? (\r\n                        currentState.collection.id\r\n                ) : (\r\n                        currentState.id\r\n                    )\r\n                )}\r\n                onChange={e => {\r\n                    if (setCurrentState !== undefined) {\r\n                        // Find the Id of the item in the stateArray\r\n                        const selectedItem = stateArray.find(item => item.id === +e.target.value)\r\n                        // Set that item to currentItemState\r\n                        setCurrentState(selectedItem)\r\n                    } else {\r\n                        history.push(urlToPushTo(+e.target.value))}\r\n                    }}>\r\n                <option value=\"0\">{nameOf}</option>\r\n                {stateArray.map(stateItem => (\r\n                    <option key={stateItem.id} value={stateItem.id}>\r\n                        {stateItem.name}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </fieldset>\r\n    )\r\n}","import React from \"react\"\r\nimport { ManagerButton } from '../../buttons/Buttons'\r\nimport { DropDown } from '../../inputs/Inputs'\r\nimport { CollectionManagerRoute, ProjectManagerRoute } from '../../../utils/Routes'\r\nimport \"./SubHeader.css\"\r\n\r\nconst SubHeader = ({\r\n    isSelectedColumnActive,\r\n    setIsSelectedColumnActive,\r\n    isListColumnActive,\r\n    setIsListColumnActive,\r\n    selectedCollection,\r\n    appSelectedRoute,\r\n    history,\r\n    collections }) =>  {\r\n        // IF user id === 0, do not show the rest of the subheader\r\n        const userId = +sessionStorage.getItem(\"currentUserId\")\r\n\r\n        return (\r\n            <section className=\"view__subHeader\">\r\n                <ManagerButton\r\n                    isMobile={false}\r\n                    managerRoute={CollectionManagerRoute}\r\n                    managerBtnText={\"Manage Collections\"} />\r\n\r\n                <ManagerButton\r\n                    isMobile={false}\r\n                    managerRoute={ProjectManagerRoute}\r\n                    managerBtnText={\"Manage Projects\"} />\r\n\r\n                <div className=\"line__vertical\"></div>\r\n\r\n                <DropDown\r\n                    nameOf='Selected collection'\r\n                    fieldsetLocation='subHeader__fieldset'\r\n                    labelIdName='collectionSelect'\r\n                    isCollection={true}\r\n                    history={history}\r\n                    urlToPushTo={appSelectedRoute}\r\n                    currentState={selectedCollection}\r\n                    stateArray={collections} />\r\n\r\n                <div className=\"line__vertical\"></div>\r\n\r\n                <label className=\"toggle__column\" htmlFor=\"listColumn\">Toggle List Column: </label>\r\n\r\n                <input\r\n                    disabled={!collections || collections.length === 0 ? true : false} // Disable toggle if no collections\r\n                    onChange={e => {setIsListColumnActive(e.currentTarget.checked)}}\r\n                    defaultChecked={!collections || collections.length === 0 ? true : isListColumnActive} // need default checked to stop react error\r\n                    type=\"checkbox\"\r\n                    id=\"listColumn\"\r\n                    name=\"listColumn\"\r\n                    value=\"listColumn\" />\r\n\r\n                <label className=\"toggle__column\" htmlFor=\"listColumn\">Toggle Selected Column: </label>\r\n                <input\r\n                    onChange={e => {setIsSelectedColumnActive(e.currentTarget.checked)}}\r\n                    checked={isSelectedColumnActive}\r\n                    type=\"checkbox\"\r\n                    id=\"listColumn\"\r\n                    name=\"listColumn\"\r\n                    value=\"listColumn\" />\r\n            </section>\r\n        )\r\n    }\r\n\r\nexport default SubHeader","import React from 'react'  \r\nimport Header from './header/Header'\r\nimport SubHeader from './subHeader/SubHeader'\r\n\r\nconst HeaderDesktop = ({\r\n    isSelectedColumnActive,\r\n    setIsSelectedColumnActive,\r\n    setIsListColumnActive,\r\n    selectedCollection,\r\n    appSelectedRoute,\r\n    history,\r\n    collections }) => (\r\n    <>\r\n        <Header />\r\n        <SubHeader\r\n            isSelectedColumnActive={isSelectedColumnActive}\r\n            setIsSelectedColumnActive={setIsSelectedColumnActive}\r\n            setIsListColumnActive={setIsListColumnActive}\r\n            selectedCollection={selectedCollection}\r\n            appSelectedRoute={appSelectedRoute}\r\n            history={history}\r\n            collections={collections} />\r\n    </>\r\n)\r\n\r\nexport default HeaderDesktop","import React from 'react' \r\nimport { Settings, Logout, ManagerButton }  from '../buttons/Buttons'\r\nimport { CollectionManagerRoute, ProjectManagerRoute } from '../../utils/Routes'\r\nimport { DropDown } from '../inputs/Inputs'\r\nimport './HamburgerMenu.css'\r\n\r\nconst HamburgerMenu = ({\r\n    isOpen,\r\n    setIsOpen,\r\n    projects,\r\n    collections,\r\n    appSelectedRoute,\r\n    history,\r\n    selectedCollection }) => (\r\n    <nav\r\n    className={isOpen.hamburgerIsOpen ? (\r\n            \"hamburger__nav hamburger__nav--active\"\r\n        ) : (\r\n            \"hamburger__nav hamburger__nav--inactive\"\r\n        )\r\n    }>\r\n        <ul className=\"nav__list--hb\">\r\n            <div className=\"hb__container\">\r\n                <li className=\"nav__item nav__item--hb\">\r\n                    <ManagerButton\r\n                        isMobile={true}\r\n                        setHamburgerIsOpen={setIsOpen}\r\n                        managerRoute={CollectionManagerRoute}\r\n                        managerBtnText={\"Manage Collections\"} />\r\n                </li>\r\n                <li className=\"nav__item nav__item--hb\">\r\n                    <ManagerButton\r\n                        isMobile={true}\r\n                        setHamburgerIsOpen={setIsOpen}\r\n                        managerRoute={ProjectManagerRoute}\r\n                        managerBtnText={\"Manage Projects\"} />\r\n                </li>\r\n                <li>\r\n                    <DropDown\r\n                        nameOf='Selected collection'\r\n                        stateArray={collections}\r\n                        currentState={selectedCollection}\r\n                        urlToPushTo={appSelectedRoute}\r\n                        isCollection={true}\r\n                        history={history}\r\n                        fieldsetLocation='hamburger__fieldset'\r\n                        labelIdName='collectionSelect' \r\n                        isHamburger={true} />\r\n                </li>\r\n            </div>\r\n\r\n            <div className=\"hb__container\">\r\n                {/* <li className=\"nav__item nav__item--hb nav__item--settings\">\r\n                    <Settings isMobile={true} />\r\n                </li> */}\r\n                <li className=\"nav__item nav__item--hb\">\r\n                    <Logout isMobile={true} />\r\n                </li>\r\n            </div>\r\n        </ul>\r\n    </nav>\r\n)\r\n\r\nexport default HamburgerMenu","import React, { useState } from 'react'  \r\nimport { HeaderBranding } from '../branding/Branding'\r\nimport HamburgerMenu from './HamburgerMenu'\r\n// Main container for mobile header\r\n\r\nconst HeaderMobile = ({\r\n    projects,\r\n    collections,\r\n    history,\r\n    appSelectedRoute,\r\n    selectedCollection }) => {\r\n    const [ hamburgerIsOpen, setHamburgerIsOpen ] = useState(false)\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <HeaderBranding />\r\n\r\n            <button\r\n            className={hamburgerIsOpen ? (\r\n                \"btn__no-style btn__hamburger btn__hamburger--active\"\r\n            ) : (\r\n                \"btn__no-style btn__hamburger \"\r\n            )}\r\n            onClick={e => {\r\n                if (hamburgerIsOpen) {\r\n                    setHamburgerIsOpen(false)\r\n                }\r\n                 else if (!hamburgerIsOpen) {\r\n                    setHamburgerIsOpen(true)\r\n                }\r\n            }}>\r\n                <div className=\"hamburger__bar\"></div>\r\n            </button>\r\n        \r\n            <HamburgerMenu\r\n                projects={projects}\r\n                collections={collections}\r\n                history={history}\r\n                appSelectedRoute={appSelectedRoute}\r\n                selectedCollection={selectedCollection}\r\n                isOpen={{ hamburgerIsOpen }}\r\n                setIsOpen={{ setHamburgerIsOpen }} />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default HeaderMobile","import React from 'react'\r\nimport { LexLogo, LexTitle, MwLogo } from '../branding/Branding'\r\nimport './Footer.css'\r\n\r\nconst Footer = () => (\r\n    <footer>\r\n        <div className=\"footer__row1\">\r\n\r\n            <section className=\"footer__branding\">\r\n                <LexLogo location={\"logo__footer--lex\"} color={\"logo__black\"} />\r\n                <LexTitle location={\"title__footer\"} color={\"title__black\"} />\r\n                <MwLogo location={\"logo__footer--mw\"} />\r\n            </section>\r\n\r\n            <section className=\"footer__summary\">\r\n                <h2 className=\"footer__heading\">Summary</h2>\r\n                <p className=\"footer__p\">\r\n                    Lexicon allows writers to easily search for and store words from Merriam-Webster's Collegiate Thesaurus.\r\n                </p>\r\n            </section>\r\n\r\n            <section className=\"footer__about\">\r\n                <h2 className=\"footer__heading\">About</h2>\r\n                <div>\r\n                    <p className=\"footer__p\">\r\n                        Lexicon was created by Sam Edwards, a creative writer and software developer.\r\n                    </p>\r\n                    <div>\r\n                        {/* ICON */}\r\n                        <a className=\"footer__p\" href=\"https://www.linkedin.com/in/st-edwards\">LinkedIn</a>\r\n                    </div>\r\n                    <div>\r\n                        {/* ICON */}\r\n                        <a className=\"footer__p\" href=\"https://github.com/ste163\">Github</a>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <section className=\"footer__tech\">\r\n                <h2 className=\"footer__heading\">Technologies Used</h2>\r\n                <div className=\"footer__lists\">\r\n                    \r\n                    <div>\r\n                        <h3 className=\"footer__subHeading\">Development</h3>\r\n                        <ul className=\"tech__list\">\r\n                            BACKEND\r\n                            FRONTEND\r\n                            <li className=\"tech__item\"><a href=\"https://reactjs.org/\">React</a></li>\r\n                            <li className=\"tech__item\"><a href=\"https://code.visualstudio.com/\">VS Code</a></li>\r\n                        </ul>\r\n                    </div>\r\n                    \r\n                    <div className=\"footer__list\">\r\n                        <h3 className=\"footer__subHeading\">Design</h3>\r\n                        <ul className=\"tech__list\">\r\n                            <li className=\"tech__item\"><a href=\"https://inkscape.org/\">Inkscape</a></li>\r\n                            <li className=\"tech__item\"><a href=\"https://dribbble.com/\">Dribbble</a></li>\r\n                            <li className=\"tech__item\"><a href=\"https://developer.paciellogroup.com/resources/contrastanalyser/\">Colour Contrast Analyser</a></li>\r\n                        </ul>\r\n                    </div>\r\n                \r\n                </div>\r\n            </section>\r\n        </div>\r\n\r\n        <div className=\"footer__row2\">\r\n            &#169; 2021 Sam Edwards\r\n        </div>\r\n\r\n    </footer>\r\n)\r\n\r\nexport default Footer","import React from 'react'\r\nimport { RemovableItemButton } from '../buttons/Buttons'\r\nimport './Details.css'\r\n\r\nconst Details = ({\r\n    history,\r\n    selectedItem,\r\n    isCollections,\r\n    selectedUrlToPushTo,\r\n    editUrlToPushTo,\r\n    deleteUrlToPushTo \r\n}) => (\r\n    <>\r\n        <article>\r\n            <h3>\r\n                {isCollections ? selectedItem.collection.name : selectedItem.project.name}\r\n            </h3>\r\n            {isCollections ? (\r\n                <p className=\"details__p\">\r\n                    {selectedItem.collection.description}\r\n                </p>\r\n            ) : (\r\n                null\r\n            )}\r\n\r\n            {/* Show linked to following collections for projects */}\r\n            <h4>\r\n                Linked to the following {isCollections ? \"projects\" : \"collections\"}:\r\n            </h4>\r\n            <ul className=\"details__ul\">\r\n                {isCollections ? (\r\n                    selectedItem.projectCollections.map(c => <RemovableItemButton key={c.project.id} text={c.project.name} isActive={false} />)\r\n                ) : (\r\n                    selectedItem.projectCollections.map(c => <RemovableItemButton key={c.collection.id} text={c.collection.name} isActive={false} />)\r\n                )}\r\n            </ul>\r\n            {isCollections ? <h4>Total words in {selectedItem.collection.name} : <span>{selectedItem.words.length}</span></h4> : null}\r\n        </article>\r\n        \r\n        {/* If it's the project manager, switch out with other links */}\r\n        <div className=\"details__btns\">\r\n            {isCollections ? (\r\n                <button\r\n                    className=\"btn btn__details--dash\"\r\n                    onClick={() => history.push(selectedUrlToPushTo(selectedItem.collection.id))}>\r\n                        View on Dashboard\r\n                </button>\r\n            ) : (\r\n                null\r\n            )}\r\n            <div className=\"btns__edit-delete\">\r\n                <button\r\n                    className=\"btn btn__details--edit\"\r\n                    onClick={() => history.push(editUrlToPushTo(isCollections ? selectedItem.collection.id : selectedItem.project.id))}>\r\n                        Edit\r\n                    </button>\r\n                <button\r\n                    className=\"btn btn--red btn__details--delete\"\r\n                    onClick={() => history.push(deleteUrlToPushTo(isCollections ? selectedItem.collection.id : selectedItem.project.id))}>\r\n                        Delete\r\n                    </button>\r\n            </div>\r\n        </div>\r\n    </>    \r\n)\r\n\r\nexport default Details","import React from 'react'\r\nimport Details from './Details' \r\nimport { ManagerArrow } from '../buttons/Buttons'\r\nimport './Details.css'\r\n\r\nconst DetailsContainer = ({\r\n    history,\r\n    selectedItem,\r\n    isCollections,\r\n    isFetching,\r\n    isDetailsOpen,\r\n    isEditFormOpen,\r\n    itemToEdit,\r\n    EditForm,\r\n    managerUrlToPushTo,\r\n    selectedUrlToPushTo,\r\n    editUrlToPushTo,\r\n    deleteUrlToPushTo\r\n}) => (\r\n    <section\r\n        className={isDetailsOpen ? (\r\n            \"manager__details manager__details--active\"\r\n        ) : (\r\n            \"manager__details\"\r\n        )}>\r\n\r\n        {isFetching ? (\r\n            <div\r\n                className={isDetailsOpen ? (\r\n                    \"spinner__center\"\r\n                ) : (\r\n                    \"manager__details\"\r\n                )}>\r\n                <div className=\"cls-spinner\">\r\n                    <div className=\"cls-circle cls-spin\"></div>\r\n                </div>\r\n            </div>\r\n        ) : (\r\n        <>\r\n            <ManagerArrow\r\n                isForm={false}\r\n                history={history}\r\n                managerUrlToPushTo={managerUrlToPushTo} />\r\n\r\n            <section className=\"details card card__color--brightWhite card__details\"> \r\n                {selectedItem == undefined ? (\r\n                    null\r\n                ) : (\r\n                    // If we're editing, show edit form, else show details\r\n                    // But to have smooth animations, both will need to be rendered. The Ternary\r\n                    // will have to be on the className={}\r\n                    // This JS fiddle does animation with js: https://jsfiddle.net/ucu2vvf7/11/\r\n                    isEditFormOpen ? (\r\n                        <EditForm\r\n                            history={history}    \r\n                            itemToEdit={itemToEdit} />\r\n                    ) : (\r\n                        <Details\r\n                            isCollections={isCollections}\r\n                            selectedItem={selectedItem}\r\n                            isCollectionManager={true}\r\n                            history={history}\r\n                            selectedUrlToPushTo={selectedUrlToPushTo}\r\n                            editUrlToPushTo={editUrlToPushTo}\r\n                            deleteUrlToPushTo={deleteUrlToPushTo} />\r\n                    )\r\n                )}\r\n            </section>\r\n        </>\r\n        )}\r\n    </section>\r\n)\r\n\r\nexport default DetailsContainer","import React from 'react'\r\nimport { ManagerCreate } from '../buttons/Buttons'\r\nimport { SearchBar, DropDown } from '../inputs/Inputs'\r\nimport './ListControls.css'\r\n// Create, Search, and Filtering for lists\r\n// To use\r\n    // pass in a useHistory\r\n    // urlToPush\r\n    // and string with 'collection' etc.\r\n\r\nconst ListControls = ({\r\n    history,\r\n    projects,\r\n    setSelectedProject,\r\n    selectedProject,\r\n    searchLabelTitle,\r\n    searchPlaceholderText,\r\n    setSearchTerms,\r\n    formUrlToPushTo,\r\n    createNewString }) => (\r\n    <section className=\"card card__color--white card__controls\">\r\n        <ManagerCreate\r\n            history={history} \r\n            formUrlToPushTo={formUrlToPushTo}\r\n            createNewString={createNewString} />\r\n        \r\n        <SearchBar\r\n            labelTitle={searchLabelTitle}\r\n            placeholderText={searchPlaceholderText}\r\n            setSearchTerms={setSearchTerms} />\r\n\r\n        {/* // FILTERING DOES NOT WORK YET, NEEDS RETHINKING & REFACTORING FOR NON-PROJECTS */}\r\n        {/* <DropDown\r\n            nameOf='Filter by project'\r\n            fieldsetLocation='subHeader__fieldset' \r\n            labelIdName='projectSelect'\r\n            currentState={selectedProject}\r\n            stateArray={projects}\r\n            setCurrentState={setSelectedProject} /> */}\r\n        \r\n    </section>\r\n)\r\n\r\nexport default ListControls","import React from \"react\"\r\nimport { IconArrow } from \"../icons/Icons\"\r\nimport \"./ListCard.css\"\r\n// To use\r\n    // pass in items\r\n    // useHistory\r\n    // details to push to\r\n\r\nconst ListCard = ({item, urlToPushTo, history }) => (\r\n    <button\r\n        id={item.id}\r\n        className=\"card btn__collection card__list\"\r\n        onClick={e => history.push(urlToPushTo(+e.target.id))}>\r\n        <h2 id={item.id} className=\"list__h2\">{item.name}</h2>\r\n        {/* May need ternary for if no .description, return null */}\r\n        <p id={item.id} className=\"list__p\">{item.description}</p>\r\n        <div id={item.id} className=\"list__arrow\">\r\n            <IconArrow id={item.id} color=\"icon__gray\" />\r\n        </div>\r\n    </button>\r\n)\r\n\r\nexport default ListCard","import React from 'react'\r\nimport ListCard from './ListCard'\r\nimport './ListCardContainer.css'\r\n// To use:\r\n    // pass in an isFetching for the loading spinner\r\n    // items as a state of collections or projects\r\n    // useHistory to allow for pushing\r\n    // url route to push to\r\n    \r\nconst CollectionList = ({ history, searchTerms, isFetching, items, urlToPushTo }) => {\r\n\r\n    // Loading spinner while fetching\r\n    if (isFetching) {\r\n        return (\r\n        <div className=\"spinner__center\">\r\n            <div className=\"cls-spinner\">\r\n                <div className=\"cls-circle cls-spin\"></div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n    \r\n    if (!items) {\r\n        return (\r\n            null\r\n        )\r\n    }\r\n\r\n    // Map over items to display as cards\r\n    return (\r\n        <section className=\"list__container\">\r\n            {searchTerms === \"\" ? ( null \r\n                ) : ( \r\n                    items.length !== 0 ? (\r\n                        <h2 className=\"search__heading\">Matching searches...</h2>\r\n                    ) : (\r\n                        <h2 className=\"search__heading\">No matching searches</h2>\r\n                    ))}\r\n           \r\n                {items.map(item => {\r\n                    return <ListCard key={item.id} item={item} history={history} urlToPushTo={urlToPushTo} />\r\n                })}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CollectionList","// Assists with sorting array data\r\n\r\nexport const removeDuplicationFromArray = duplicationArray => {\r\n    // make copy of original array\r\n    const copyOfDuplicationArray = [...duplicationArray]\r\n    // make holding array for unique matches\r\n    const uniqueResultsArray = []\r\n\r\n    // for each object in Duplication, filter matches from new Array to\r\n    duplicationArray.forEach(obj => {\r\n        let tempFilteredArray = copyOfDuplicationArray.filter(newObj => newObj.id === obj.id)\r\n        \r\n        //if tempFilteredArray is less than 2 add it to the result\r\n        if (tempFilteredArray.length < 2){\r\n            uniqueResultsArray.push(obj)}\r\n    })\r\n\r\n    return uniqueResultsArray\r\n}\r\n\r\nexport const moveSingleItemsBetweenStateArrays = (e, itemsAvailableState, setItemsAvailableState, itemsAddedState, setItemsAddedToState) => {\r\n    // Get what we clicked on by it's inner text\r\n    const clickedItem = e.target.textContent\r\n    // Pull that item from projectsAvailable\r\n    const itemToAdd = itemsAvailableState.find(p => p.name === clickedItem)\r\n    // Filter out the clicked on item from those available\r\n    setItemsAvailableState(itemsAvailableState.filter(p => p.name !== itemToAdd.name))\r\n    // Add the filtered out item to the array to add to\r\n    setItemsAddedToState(itemsAddedState => [...itemsAddedState, itemToAdd])\r\n}","import React, { useContext, useState, useEffect } from \"react\"\r\nimport { CollectionContext } from '../../providers/CollectionProvider'\r\nimport { ProjectContext } from '../../providers/ProjectProvider'\r\nimport { ProjectManagerRoute } from '../../utils/Routes'\r\nimport { removeDuplicationFromArray, moveSingleItemsBetweenStateArrays } from '../../utils/ArrayHelpers'\r\nimport { AddableButton } from \"../buttons/Buttons\"\r\nimport { toast } from 'react-toastify'\r\nimport { AnonWarning } from '../../utils/ToastMessages'\r\nimport './Form.css'\r\n\r\nconst ProjectForm = ({ history, itemToEdit }) => {\r\n    const userId = +sessionStorage.getItem(\"currentUserId\")\r\n    const { projects, addProject, updateProject } = useContext(ProjectContext)\r\n    const { collections, getCollections } = useContext(CollectionContext)\r\n\r\n    const [ collectionsAvailableToAdd, setCollectionsAvailableToAdd ] = useState([])\r\n    const [ collectionsAdded, setCollectionsAdded ] = useState([])\r\n\r\n    // Set the default project so the form can reset.\r\n    const defaultProject = {\r\n        userId: userId,\r\n        name: '',\r\n    } \r\n    \r\n    // Sets state for creating the project\r\n    const [ currentProject, setCurrentProject ] = useState(defaultProject)\r\n    // Used for showing loading indicator and locking form from multiple submits\r\n    const [ isLoading, setIsLoading ] = useState(true)\r\n\r\n    // Check on load and when projects change, if we have an editable Project or not\r\n    useEffect(() => {\r\n        // collections  is not undefined, update state\r\n        if (collections) {\r\n            setCollectionsAvailableToAdd(collections)\r\n        }\r\n        // reset added state on load\r\n        setCollectionsAdded([])\r\n        // check user's options if they're editing\r\n        if (itemToEdit) {\r\n            setCurrentProject(itemToEdit.project)\r\n            // get collections to display\r\n            const collsInProj = itemToEdit.projectCollections.map(pc => pc.collection)\r\n            const collsWithDuplication = [...collections]\r\n            collsInProj.forEach(c => collsWithDuplication.push(c))\r\n            \r\n            // Filter out duplication\r\n            const removedDuplication = removeDuplicationFromArray(collsWithDuplication)\r\n\r\n            setCollectionsAdded(collsInProj)\r\n            setCollectionsAvailableToAdd(removedDuplication)\r\n            setIsLoading(false);\r\n        } else {\r\n            setIsLoading(false)\r\n        }\r\n    }, [projects, collections])\r\n\r\n    useEffect(() => {\r\n        getCollections()\r\n    }, [])\r\n\r\n    const handleControlledInputChange = e => {\r\n        const newProject = { ...currentProject }\r\n        newProject[e.target.name] = e.target.value\r\n        setCurrentProject(newProject)\r\n    }\r\n\r\n    const constructNewProject = () => {\r\n        if (itemToEdit) {\r\n            const project = {\r\n                id: itemToEdit.project.id,\r\n                userId,\r\n                name: currentProject.name,\r\n            }\r\n\r\n            let projectCollections = []\r\n\r\n            // If the user added projects, create the array for view model\r\n            if (collectionsAdded.length > 0) {\r\n                projectCollections = collectionsAdded.map(c => {\r\n                    return {\r\n                        projectId: itemToEdit.project.id,\r\n                        collectionId: c.id\r\n                    }\r\n                })\r\n            }\r\n\r\n            updateProject({\r\n                project, projectCollections\r\n            })\r\n            .then(res => {\r\n                if (!res) {\r\n                    setIsLoading(false)\r\n                } else {\r\n                    setIsLoading(false)\r\n                    history.goBack()\r\n                }\r\n            })\r\n        } else {\r\n            const project = {\r\n                userId,\r\n                name: currentProject.name,\r\n                description: currentProject.description,\r\n            }\r\n\r\n            let projectCollections = []\r\n\r\n            // If the user added projects, create the array for view model\r\n            if (collectionsAdded.length > 0) {\r\n                projectCollections = collectionsAdded.map(c => {\r\n                    return {\r\n                        projectId: 0,\r\n                        collectionId: c.id\r\n                    }\r\n                })\r\n            }\r\n\r\n            addProject({\r\n                project, projectCollections\r\n            })\r\n            .then(() => {\r\n                setIsLoading(false)\r\n                // Resets form\r\n                setCurrentProject(defaultProject) \r\n                // Push us back to the project-manager\r\n                history.push(ProjectManagerRoute())\r\n            })\r\n        }\r\n    }  \r\n\r\n    const createProject = (e) => {\r\n        e.preventDefault()\r\n        if (userId !== 0) {\r\n            setIsLoading(true)\r\n            constructNewProject()\r\n        } else {\r\n            toast.error(AnonWarning())\r\n        }\r\n    }\r\n\r\n    return (\r\n    <form\r\n        className={itemToEdit ? \"\" : \"collection__form card card__form card__color--brightWhite\"}\r\n        onSubmit={createProject}>\r\n\r\n        <h3>\r\n            {itemToEdit ? `Edit ${itemToEdit.project.name}` : \"Create\"}\r\n        </h3> \r\n\r\n        <fieldset>\r\n            <label htmlFor=\"ProjectName\">Name: </label>\r\n            <input type=\"text\"\r\n                className=\"collection__input\"\r\n                onChange={handleControlledInputChange}\r\n                id=\"projectName\"\r\n                name=\"name\"\r\n                value={currentProject.name}\r\n                placeholder=\"Project name\"\r\n                maxLength={255}\r\n                required\r\n                autoFocus/>\r\n        </fieldset>\r\n\r\n        <label>Collections available to link to this project:</label>\r\n            <ul className=\"form__addable-btns\">\r\n                {collectionsAvailableToAdd.length === 0 ? (\r\n                    <p className=\"form__p\">Added all available collections. Click a collection's name to remove.</p>\r\n                ) : (\r\n                    collectionsAvailableToAdd.map(p => <AddableButton\r\n                        key={p.id}\r\n                        item={p}\r\n                        onClickFunction={moveSingleItemsBetweenStateArrays}\r\n                        itemsAvailableStateArray={collectionsAvailableToAdd}\r\n                        setItemsAvailableStateArray={setCollectionsAvailableToAdd}\r\n                        itemsAddedState={collectionsAdded}\r\n                        setItemsAddedToStateArray={setCollectionsAdded} />)\r\n                )}\r\n            </ul>\r\n\r\n            <label>Linked collections:</label>\r\n            <ul className=\"form__addable-btns\">\r\n                {collectionsAdded.length === 0 ? (\r\n                    <p className=\"form__p\">None. Click a collection's name to add.</p>\r\n                ) : (\r\n                    collectionsAdded.map(p => <AddableButton\r\n                        key={p.id}\r\n                        item={p}\r\n                        onClickFunction={moveSingleItemsBetweenStateArrays}\r\n                        itemsAvailableStateArray={collectionsAdded}\r\n                        setItemsAvailableStateArray={setCollectionsAdded}\r\n                        itemsAddedState={collectionsAdded}\r\n                        setItemsAddedToStateArray={setCollectionsAvailableToAdd} />)\r\n                )}\r\n            </ul>\r\n\r\n        {isLoading ? (\r\n            <div className=\"spinner__card\">\r\n                <div className=\"cls-spinner cls-spinner--card\">\r\n                    <div className=\"cls-circle cls-spin\"></div>\r\n                </div>\r\n            </div>\r\n        ) : (\r\n            <div className=\"collection__submit\">\r\n                <button \r\n                    className=\"btn form__btn--submit\"\r\n                    type=\"submit\"\r\n                    disabled={isLoading}>\r\n                    {itemToEdit ? \"Save\" : \"Create\"}\r\n                </button>\r\n                {!itemToEdit ? (\r\n                    null\r\n                ) : (\r\n                    <button \r\n                    className=\"btn form__btn--cancel\"\r\n                    onClick={() => {\r\n                        history.goBack()\r\n                    }}\r\n                    type=\"button\">\r\n                    Cancel\r\n                </button>\r\n                ) }\r\n            </div>\r\n        )}\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default ProjectForm","import React, { useContext, useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { ProjectManagerCreateRoute, ProjectManagerRoute } from '../../utils/Routes'\r\nimport { ProjectContext } from '../../providers/ProjectProvider'\r\nimport { CollectionContext } from '../../providers/CollectionProvider'\r\nimport { ManagerArrow } from '../buttons/Buttons'\r\nimport DetailsContainer from '../details/DetailsContainer'\r\nimport ListControls from '../../components/lists/ListControls'\r\nimport ListCardContainer from '../lists/ListCardContainer'\r\nimport ProjectForm from '../forms/ProjectForm'\r\nimport './Manager.css'\r\nimport {\r\n    AppSelectedRoute,\r\n    ProjectManagerDetailsRoute,\r\n    ProjectManagerEditRoute,\r\n    ProjectManagerDeleteRoute\r\n} from '../../utils/Routes'\r\n\r\nconst ProjectManager = () => {\r\n    const history = useHistory()\r\n    const {\r\n        projects,\r\n        selectedProject,\r\n        isFetchingProjects,\r\n        isFetchingProjectDetails,\r\n        isProjectCreateFormOpen,\r\n        isProjectDetailsOpen,\r\n        isProjectEditFormOpen\r\n    } = useContext(ProjectContext)\r\n\r\n    const { collections, selectedCollection, setSelectedCollection } = useContext(CollectionContext)\r\n\r\n    const [searchTerms, setSearchTerms] = useState(\"\")\r\n    const [filteredList, setFilteredList] = useState([])\r\n\r\n    // handles searching\r\n    useEffect(() => {\r\n        if (searchTerms !== \"\") {\r\n            const matches = projects.filter(c => c.name.toLowerCase().includes(searchTerms.toLowerCase().trim()))\r\n            setFilteredList(matches)\r\n        } else {\r\n            // no terms in search bar, so display all and reset filtered items\r\n            setFilteredList(projects)\r\n        }\r\n    }, [searchTerms, projects])\r\n    \r\n    // Get the Create button working with the slide to form, and back and forth\r\n    return (\r\n        <section className=\"manager__container\">\r\n            <DetailsContainer\r\n                history={history}\r\n                isCollections={false}\r\n                selectedItem={selectedProject}\r\n                isFetching={isFetchingProjectDetails}\r\n                isDetailsOpen={isProjectDetailsOpen}\r\n                isEditFormOpen={isProjectEditFormOpen}\r\n                itemToEdit={selectedProject}\r\n                EditForm={ProjectForm}\r\n                managerUrlToPushTo={ProjectManagerRoute}\r\n                selectedUrlToPushTo={AppSelectedRoute}\r\n                editUrlToPushTo={ProjectManagerEditRoute}\r\n                deleteUrlToPushTo={ProjectManagerDeleteRoute} />\r\n\r\n            <section \r\n                // Will need to have checking on is the form open or details OR edit\r\n                className={isProjectCreateFormOpen ? (\r\n                    \"manager__list manager__list--inactive--form\"\r\n                    ) : isProjectDetailsOpen ? (\r\n                        \"manager__list manager__list--inactive--details\"\r\n                    ) : (\r\n                        \"manager__list\"\r\n                    )}>\r\n                <ListControls\r\n                    history={history}\r\n                    // Must refactor drop-downs to get filtering working\r\n                    // projects={collections}\r\n                    // setSelectedProject={setSelectedCollection}\r\n                    // selectedProject={selectedCollection}\r\n                    searchLabelTitle={\"Search projects\"}\r\n                    searchPlaceholderText={\"Enter a name...\"}\r\n                    setSearchTerms={setSearchTerms}\r\n                    formUrlToPushTo={ProjectManagerCreateRoute}\r\n                    createNewString={\"project\"} />\r\n\r\n                <ListCardContainer\r\n                    history={history}\r\n                    urlToPushTo={ProjectManagerDetailsRoute}\r\n                    isFetching={isFetchingProjects}\r\n                    searchTerms={searchTerms}\r\n                    items={filteredList}  />\r\n            </section>\r\n\r\n            <section\r\n                className={isProjectCreateFormOpen ? (\r\n                    \"manager__form manager__form--active\"\r\n                    ) : (\r\n                    \"manager__form\"\r\n                )}>\r\n\r\n                <ManagerArrow\r\n                    isForm={true}\r\n                    managerUrlToPushTo={ProjectManagerRoute}\r\n                    history={history} />\r\n\r\n                <ProjectForm\r\n                    history={history} />\r\n            </section>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ProjectManager","import React, { useContext, useState, useEffect } from \"react\"\r\nimport { CollectionContext } from '../../providers/CollectionProvider'\r\nimport { ProjectContext } from '../../providers/ProjectProvider'\r\nimport { CollectionManagerRoute } from '../../utils/Routes'\r\nimport { removeDuplicationFromArray, moveSingleItemsBetweenStateArrays } from '../../utils/ArrayHelpers'\r\nimport { AddableButton } from \"../buttons/Buttons\"\r\nimport { toast } from 'react-toastify'\r\nimport { AnonWarning } from '../../utils/ToastMessages'\r\nimport './CollectionForm.css'\r\nimport './Form.css'\r\n\r\nconst CollectionForm = ({ history, itemToEdit }) => {\r\n    const userId = +sessionStorage.getItem(\"currentUserId\")\r\n    const { collections, addCollection, updateCollection } = useContext(CollectionContext)\r\n    const { projects, getProjects } = useContext(ProjectContext)\r\n\r\n    const [ projectsAvailableToAdd, setProjectsAvailableToAdd ] = useState([])\r\n    const [ projectsAdded, setProjectsAdded ] = useState([])\r\n\r\n    // Set the default project so the form can reset.\r\n    const defaultCollection = {\r\n        userId: userId,\r\n        name: '',\r\n        description: '',\r\n    } \r\n    \r\n    // Sets state for creating the collection\r\n    const [ currentCollection, setCurrentCollection] = useState(defaultCollection)\r\n    // Used for showing loading indicator and locking form from multiple submits\r\n    const [ isLoading, setIsLoading ] = useState(true)\r\n\r\n    // Check on load and when collections change, if we have an editable collection or not\r\n    useEffect(() => {\r\n        // if projects is not undefined, update state\r\n        if (projects) {\r\n            setProjectsAvailableToAdd(projects)\r\n        }\r\n        // reset added state on load\r\n        setProjectsAdded([])\r\n        // check user's options if they're editing\r\n        if (itemToEdit) {\r\n            setCurrentCollection(itemToEdit.collection)\r\n            // Get projects to display\r\n            const projsInCol = itemToEdit.projectCollections.map(pc => pc.project)\r\n            const projsWithDuplication = [...projects]\r\n            projsInCol.forEach(p => projsWithDuplication.push(p))\r\n\r\n            // Filter out duplication\r\n            const removedDuplication = removeDuplicationFromArray(projsWithDuplication)\r\n            \r\n            setProjectsAdded(projsInCol)\r\n            setProjectsAvailableToAdd(removedDuplication)\r\n            setIsLoading(false);\r\n        } else {\r\n            setIsLoading(false)\r\n        }\r\n    }, [collections, projects])\r\n\r\n    useEffect(() => {\r\n        getProjects()\r\n    }, [])\r\n\r\n    const handleControlledInputChange = e => {\r\n        const newCollection = { ...currentCollection }\r\n        newCollection[e.target.name] = e.target.value\r\n        setCurrentCollection(newCollection)\r\n    }\r\n\r\n    const constructNewCollection = () => {\r\n        if (itemToEdit) {\r\n            const collection = {\r\n                id: itemToEdit.collection.id,\r\n                userId,\r\n                name: currentCollection.name,\r\n                description: currentCollection.description,\r\n            }\r\n\r\n            let projectCollections = []\r\n\r\n            // If the user added projects, create the array for view model\r\n            if (projectsAdded.length > 0) {\r\n                projectCollections = projectsAdded.map(p => {\r\n                    return {\r\n                        projectId: p.id,\r\n                        collectionId: itemToEdit.collection.id\r\n                    }\r\n                })\r\n            }\r\n\r\n            updateCollection({\r\n                collection, projectCollections\r\n            })\r\n            .then(res => {\r\n                if (!res) {\r\n                    setIsLoading(false)\r\n                } else {\r\n                    setIsLoading(false)\r\n                    history.goBack()\r\n                }\r\n            })\r\n        } else {\r\n            const collection  = {\r\n                userId,\r\n                name: currentCollection.name,\r\n                description: currentCollection.description,\r\n            }\r\n\r\n            let projectCollections = []\r\n\r\n            // If the user added projects, create the array for view model\r\n            if (projectsAdded.length > 0) {\r\n                projectCollections = projectsAdded.map(p => {\r\n                    return {\r\n                        projectId: p.id,\r\n                        collectionId: p.collectionId = 0\r\n                    }\r\n                })\r\n            }\r\n            \r\n            addCollection({\r\n                collection, projectCollections\r\n            })\r\n            .then(() => {\r\n                setIsLoading(false)\r\n                // Resets form\r\n                setCurrentCollection(defaultCollection) \r\n                // Push us back to the collection-manager\r\n                history.push(CollectionManagerRoute())\r\n            })\r\n        }\r\n    }  \r\n\r\n    const createCollection = (e) => {\r\n        e.preventDefault()\r\n        if (userId !== 0) {\r\n            setIsLoading(true)\r\n            constructNewCollection()\r\n        } else {\r\n            toast.error(AnonWarning())\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form\r\n            className={itemToEdit ? \"\" : \"collection__form card card__form card__color--brightWhite\"}\r\n            onSubmit={createCollection}>\r\n\r\n            <h3>\r\n                {itemToEdit ? `Edit ${itemToEdit.collection.name}` : \"Create\"}\r\n            </h3> \r\n\r\n            <fieldset>\r\n                <label htmlFor=\"collectionName\">Name: </label>\r\n                <input type=\"text\"\r\n                    className=\"collection__input\"\r\n                    onChange={handleControlledInputChange}\r\n                    id=\"collectionName\"\r\n                    name=\"name\"\r\n                    value={currentCollection.name}\r\n                    placeholder=\"Collection name\"\r\n                    maxLength={255}\r\n                    required\r\n                    autoFocus/>\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n                <label htmlFor=\"collectionDescription\">Description: </label>\r\n                <textarea\r\n                    rows={3}\r\n                    cols={3}\r\n                    onChange={handleControlledInputChange}\r\n                    id=\"collectionDescription\"\r\n                    name=\"description\"\r\n                    value={currentCollection.description}\r\n                    placeholder=\"Collection description\"\r\n                    maxLength={255} />\r\n            </fieldset>\r\n\r\n            <label>Projects available to link to this collection:</label>\r\n            <ul className=\"form__addable-btns\">\r\n                {projectsAvailableToAdd.length === 0 ? (\r\n                    <p className=\"form__p\">Added all available projects. Click a collection's name to remove.</p>\r\n                ) : (\r\n                    projectsAvailableToAdd.map(p => <AddableButton\r\n                        key={p.id}\r\n                        item={p}\r\n                        onClickFunction={moveSingleItemsBetweenStateArrays}\r\n                        itemsAvailableStateArray={projectsAvailableToAdd}\r\n                        setItemsAvailableStateArray={setProjectsAvailableToAdd}\r\n                        itemsAddedState={projectsAdded}\r\n                        setItemsAddedToStateArray={setProjectsAdded} />)\r\n                )}\r\n            </ul>\r\n\r\n            <label>Linked projects:</label>\r\n            <ul className=\"form__addable-btns\">\r\n                {projectsAdded.length === 0 ? (\r\n                    <p className=\"form__p\">None. Click a project's name to add.</p>\r\n                ) : (\r\n                    projectsAdded.map(p => <AddableButton\r\n                        key={p.id}\r\n                        item={p}\r\n                        onClickFunction={moveSingleItemsBetweenStateArrays}\r\n                        itemsAvailableStateArray={projectsAdded}\r\n                        setItemsAvailableStateArray={setProjectsAdded}\r\n                        itemsAddedState={projectsAdded}\r\n                        setItemsAddedToStateArray={setProjectsAvailableToAdd} />)\r\n                )}\r\n            </ul>\r\n\r\n            {isLoading ? (\r\n                <div className=\"spinner__card\">\r\n                    <div className=\"cls-spinner cls-spinner--card\">\r\n                        <div className=\"cls-circle cls-spin\"></div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className=\"collection__submit\">\r\n                    <button \r\n                        className=\"btn form__btn--submit\"\r\n                        type=\"submit\"\r\n                        disabled={isLoading}>\r\n                        {itemToEdit ? \"Save\" : \"Create\"}\r\n                    </button>\r\n                    {!itemToEdit ? (\r\n                        null\r\n                    ) : (\r\n                        <button \r\n                        className=\"btn form__btn--cancel\"\r\n                        onClick={() => {\r\n                            history.goBack()\r\n                        }}\r\n                        type=\"button\">\r\n                        Cancel\r\n                    </button>\r\n                    ) }\r\n                </div>\r\n            )}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CollectionForm","import React, { useContext, useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { CollectionManagerCreateRoute, CollectionManagerRoute } from '../../utils/Routes'\r\nimport { CollectionContext } from '../../providers/CollectionProvider'\r\nimport { ProjectContext } from '../../providers/ProjectProvider'\r\nimport { ManagerArrow } from '../buttons/Buttons'\r\nimport DetailsContainer from '../details/DetailsContainer'\r\nimport ListControls from '../../components/lists/ListControls'\r\nimport ListCardContainer from '../lists/ListCardContainer'\r\nimport CollectionForm from '../forms/CollectionForm'\r\nimport './Manager.css'\r\nimport {\r\n    AppSelectedRoute,\r\n    CollectionManagerDetailsRoute,\r\n    CollectionManagerEditRoute,\r\n    CollectionManagerDeleteRoute\r\n} from '../../utils/Routes'\r\n\r\nconst CollectionManager = () => {\r\n    const history = useHistory()\r\n    const {\r\n        collections,\r\n        selectedCollection,\r\n        isFetchingCollections,\r\n        isFetchingCollectionDetails,\r\n        isCollectionCreateFormOpen,\r\n        isCollectionDetailsOpen,\r\n        isCollectionEditFormOpen\r\n    } = useContext(CollectionContext)\r\n\r\n    const { projects, selectedProject, setSelectedProject } = useContext(ProjectContext)\r\n    \r\n    const [searchTerms, setSearchTerms] = useState(\"\")\r\n    const [filteredList, setFilteredList] = useState([])\r\n\r\n    // handles searching\r\n    useEffect(() => {\r\n        if (searchTerms !== \"\") {\r\n            const matches = collections.filter(c => c.name.toLowerCase().includes(searchTerms.toLowerCase().trim()) || c.description.toLowerCase().includes(searchTerms.toLowerCase().trim()))\r\n            setFilteredList(matches)\r\n        } else {\r\n            // no terms in search bar, so display all and reset filtered items\r\n            setFilteredList(collections)\r\n        }\r\n    }, [searchTerms, collections])\r\n\r\n    // Get the Create button working with the slide to form, and back and forth\r\n    return (\r\n        <section className=\"manager__container\">\r\n            <DetailsContainer\r\n                history={history}\r\n                isCollections={true}\r\n                selectedItem={selectedCollection}\r\n                isFetching={isFetchingCollectionDetails}\r\n                isDetailsOpen={isCollectionDetailsOpen}\r\n                isEditFormOpen={isCollectionEditFormOpen}\r\n                itemToEdit={selectedCollection}\r\n                EditForm={CollectionForm}\r\n                managerUrlToPushTo={CollectionManagerRoute}\r\n                selectedUrlToPushTo={AppSelectedRoute}\r\n                editUrlToPushTo={CollectionManagerEditRoute}\r\n                deleteUrlToPushTo={CollectionManagerDeleteRoute} />\r\n\r\n            <section \r\n                // Will need to have checking on is the form open or details OR edit\r\n                className={isCollectionCreateFormOpen ? (\r\n                    \"manager__list manager__list--inactive--form\"\r\n                    ) : isCollectionDetailsOpen ? (\r\n                        \"manager__list manager__list--inactive--details\"\r\n                    ) : (\r\n                        \"manager__list\"\r\n                    )}>\r\n                <ListControls\r\n                    history={history}\r\n                    projects={projects}\r\n                    setSelectedProject={setSelectedProject}\r\n                    selectedProject={selectedProject}\r\n                    searchLabelTitle={\"Search collections\"}\r\n                    searchPlaceholderText={\"Enter name or description...\"}\r\n                    setSearchTerms={setSearchTerms}\r\n                    formUrlToPushTo={CollectionManagerCreateRoute}\r\n                    createNewString={\"collection\"} />\r\n\r\n                <ListCardContainer\r\n                    history={history}\r\n                    urlToPushTo={CollectionManagerDetailsRoute}\r\n                    isFetching={isFetchingCollections}\r\n                    searchTerms={searchTerms}\r\n                    items={filteredList}  />\r\n            </section>\r\n\r\n            <section\r\n                className={isCollectionCreateFormOpen ? (\r\n                    \"manager__form manager__form--active\"\r\n                    ) : (\r\n                    \"manager__form\"\r\n                )}>\r\n\r\n                <ManagerArrow\r\n                    isForm={true}\r\n                    managerUrlToPushTo={CollectionManagerRoute}\r\n                    history={history} />\r\n\r\n                <CollectionForm\r\n                    history={history} />\r\n            </section>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CollectionManager","import React, { useState, useEffect } from \"react\"\r\nimport { WordButton, DeleteWordButton } from '../../../components/buttons/Buttons'\r\nimport { SearchBar } from '../../../components/inputs/Inputs'\r\nimport { WordDeleteRoute } from \"../../../utils/Routes\"\r\nimport \"./SelectedCard.css\"\r\n\r\nconst SelectedCard = ({ selectedCollection, getWordFromThesaurus, history }) => {\r\n    const [ isDeletingWords, setIsDeletingWords ] = useState(false)\r\n    const [ searchTerms, setSearchTerms ] = useState(\"\")\r\n    const [ filteredWords, setFilteredWords ] = useState([])\r\n\r\n    useEffect(() => {\r\n        if (searchTerms !== \"\") {\r\n            const matches = selectedCollection.words.filter(c => c.name.toLowerCase().includes(searchTerms.toLowerCase().trim()))\r\n            setFilteredWords(matches)\r\n        } else {\r\n            // no terms in search bar, so display all and reset filtered items\r\n            const words = [...selectedCollection.words]\r\n            const sorted = sortedAlphabetically(words)\r\n            setFilteredWords(sorted)\r\n        }\r\n    }, [searchTerms, selectedCollection])\r\n    \r\n    const sortedAlphabetically = (words) => {\r\n        const sorted = words.sort((a,b) => {\r\n            const wordA = a.name.toLowerCase()\r\n            const wordB = b.name.toLowerCase()\r\n            if (wordA < wordB) {\r\n                return -1\r\n            }\r\n            if (wordB > wordA) {\r\n                return 1\r\n            }\r\n            return 0\r\n        })\r\n        return sorted\r\n    }\r\n\r\n    return (\r\n        <article className=\"card card__color--white card__selected\">\r\n            {/* <SelectedDotMenu ref={dotMenu} collection={selectedCollection} /> */}\r\n    \r\n            <div className=\"card__type\">Selected Collection</div>\r\n            <h1 className=\"selected__h1\">{selectedCollection.collection.name}</h1>\r\n            <p className=\"selected__description\">{selectedCollection.collection.description}</p>\r\n    \r\n            <div className=\"selected__search\">\r\n                <SearchBar\r\n                labelTitle={\"Search for words in collection:\"}\r\n                placeholderText={\"Search for word...\"}\r\n                setSearchTerms={setSearchTerms} />\r\n            </div>\r\n    \r\n            {/* DROPDOWN FOR CATEGORIZATION TYPE */}\r\n            {/* <fieldset className=\"selected__categorization\">\r\n                <label htmlFor=\"collectionSelect\">Categorize by:</label>\r\n                <select\r\n                    name=\"collectionSelect\"\r\n                    id=\"collectionSelect\"\r\n                    defaultValue={\"1\"}\r\n                    onChange={e => {\r\n                        if (e.target.value === \"1\") {\r\n                            const words = [...filteredWords]\r\n                            const sorted = sortedAlphabetically(words)\r\n                            setFilteredWords(sorted)\r\n                        }\r\n                        if (e.target.value === \"2\") {\r\n                            const words = [...filteredWords]\r\n                            const sorted = sortPartOfSpeech(words)\r\n                            // setFilteredWords(sorted)\r\n                        }\r\n                    }} >\r\n                    <option value=\"1\">Alphabetically</option>\r\n                    <option value=\"2\">Part of Speech</option>\r\n                </select>\r\n            </fieldset> */}\r\n    \r\n            <hr className=\"selected__divider\"></hr>\r\n    \r\n            {selectedCollection.words.length === 0 ? (\r\n                <p className=\"selected__toggle\">No words added yet.</p>\r\n            ) : (\r\n                <>\r\n                    <fieldset className=\"selected__toggle\">\r\n                        <label className=\"label__wordDelete\" htmlFor=\"isDeleting\">Toggle deleting: </label>\r\n                        <input\r\n                            onChange={e => {setIsDeletingWords(e.currentTarget.checked)}}\r\n                            checked={isDeletingWords}\r\n                            type=\"checkbox\"\r\n                            id=\"isDeleting\"\r\n                            name=\"isDeleting\"\r\n                            value=\"isDeleting\" />\r\n                    </fieldset>\r\n            \r\n                    <section className=\"selected__words word__list definition__words\">\r\n                        {!isDeletingWords ? (\r\n                            filteredWords.map(w => <WordButton\r\n                                                            key={w.id}\r\n                                                            word={w.name}\r\n                                                            getWordFromThesaurus={getWordFromThesaurus}\r\n                                                            isSelectedCard={true} />)\r\n                        ) : (\r\n                            filteredWords.map(w => <DeleteWordButton\r\n                                                            key={w.id}\r\n                                                            wordId={w.id}\r\n                                                            word={w.name}\r\n                                                            history={history}\r\n                                                            deleteUrlToPushTo={WordDeleteRoute} />)\r\n                        )}\r\n                    </section>\r\n                </>\r\n            )}          \r\n        </article>\r\n    )\r\n}\r\n\r\n    \r\nexport default SelectedCard","import React from 'react'\r\nimport ListControls from '../../../components/lists/ListControls'\r\nimport ListCardContainer from '../../../components/lists/ListCardContainer'\r\nimport { CollectionManagerCreateRoute } from '../../../utils/Routes'\r\n\r\nconst ListColumn = ({\r\n    history,\r\n    searchTerms,\r\n    setSearchTerms,\r\n    projects,\r\n    setSelectedProject,\r\n    selectedProject,\r\n    AppSelectedRoute,\r\n    isFetchingCollections,\r\n    collections }) => (\r\n    <>\r\n        <ListControls\r\n            history={history}\r\n            projects={projects}\r\n            setSelectedProject={setSelectedProject}\r\n            selectedProject={selectedProject}\r\n            searchLabelTitle={\"Search collections\"}\r\n            searchPlaceholderText={\"Enter name or description...\"}\r\n            setSearchTerms={setSearchTerms}\r\n            formUrlToPushTo={CollectionManagerCreateRoute}\r\n            createNewString={'collection'} />\r\n\r\n        <ListCardContainer\r\n            history={history}\r\n            searchTerms={searchTerms}\r\n            urlToPushTo={AppSelectedRoute}\r\n            isFetching={isFetchingCollections}\r\n            items={collections}  />\r\n    </>\r\n)\r\n\r\nexport default ListColumn","// Render synonyms for current definition\r\n// Also sorts synonyms into arrays of 10\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { ChangeIconClassOnHover } from \"../../utils/ChangeIconClassOnHover\"\r\nimport { IconArrow } from \"../../components/icons/Icons\"\r\nimport { WordButton } from \"../../components/buttons/Buttons\"\r\n\r\nconst DefinitionSynonyms = ({ currentDef, getWordFromThesaurus }) => {\r\n\r\n    // Couldn't use .indexOf for WordButton keys for Synonyms, so using global keyValue\r\n    let keyValue = 0\r\n\r\n    // Final Array of Arrays of all Synonyms separated into sets of 10\r\n    const [ arrayOfSynonymArrays, setArrayOfSynonymArrays ] = useState([])\r\n\r\n    // setState for previous and next buttons\r\n    const [ synPrevBtnDisabled, setSynPrevBtnDisabled ] = useState(true)\r\n    const [ synNextBtnDisabled, setSynNextBtnDisabled ] = useState(false)\r\n\r\n    // Current synonymArray from array of arrays\r\n    const [ currentSynArray, setCurrentSynArray ] = useState([])\r\n\r\n    // Separated so we can get the current array of arrays of synonyms\r\n    useEffect(() => {\r\n        setArrayOfSynonymArrays(SeparateListOfSynsIntoSets())\r\n    }, [currentDef])\r\n\r\n    // Whenever the arrayOfSynonymsArrays state changes, update state of CurrentSynArray\r\n    useEffect(() => {\r\n        setCurrentSynArray(arrayOfSynonymArrays[0])\r\n    }, [arrayOfSynonymArrays])\r\n\r\n    // Whenever the CurrentSynArray state changes, update Next & Prev button States\r\n    useEffect(() => {\r\n        // PreviousDefinitionBtn State\r\n        if (arrayOfSynonymArrays.indexOf(currentSynArray) === 0) {\r\n            setSynPrevBtnDisabled(true)\r\n        } else {\r\n            setSynPrevBtnDisabled(false)\r\n        }\r\n        // NextDefinitionBtn State\r\n        if (arrayOfSynonymArrays.indexOf(currentSynArray) === arrayOfSynonymArrays.length - 1) {\r\n            setSynNextBtnDisabled(true)\r\n        } else {\r\n            setSynNextBtnDisabled(false)\r\n        }\r\n    }, [currentSynArray])\r\n    \r\n    // Find total of synonyms for \"Showing X out of TOTAL\"\r\n    const CalculateTotalSyns = () => {\r\n        let totalSyns = 0\r\n        currentDef.meta.syns.map(synonymArray => {\r\n            totalSyns += synonymArray.length\r\n        })\r\n        return totalSyns\r\n    }\r\n\r\n    // Find total shown synonyms per page\r\n    const CalculateShowingSynAmount = () => {\r\n        const currentIndex = arrayOfSynonymArrays.indexOf(currentSynArray)\r\n        let synCount = 0\r\n        \r\n        // If on first page, set as currentSynArray.length else, we're on another page\r\n        if (currentIndex === 0) {\r\n            synCount = currentSynArray.length\r\n            return synCount\r\n        } else if (currentIndex > 0) {\r\n            // Loop over arrayOfSynonymArrays and stop and currentIndex\r\n            arrayOfSynonymArrays.forEach(array => {\r\n                // get the index of current array\r\n                const arrayIndex = arrayOfSynonymArrays.indexOf(array)\r\n                if (arrayIndex <= currentIndex) {\r\n                    // Add array's length to synonym count\r\n                    synCount += array.length\r\n                }\r\n            })\r\n            return synCount\r\n        }\r\n    }\r\n\r\n    // Create a combined list of all synonyms for this definition\r\n    // Returns nothing because it's affecting allSynonyms\r\n    const CreateArrayOfAllSyns = () => {\r\n        if (currentDef.meta.syns.length === 0) {\r\n            return null\r\n        }\r\n\r\n        let allSynonyms = []\r\n        currentDef.meta.syns.forEach(synonymArray => {\r\n            synonymArray.forEach(synonym => {\r\n                allSynonyms.push(synonym)\r\n            })\r\n        })\r\n        return allSynonyms\r\n    }\r\n\r\n    const SeparateListOfSynsIntoSets = () => {\r\n        const allSynonyms = CreateArrayOfAllSyns()\r\n        let separationAmount = 15\r\n        let arraysOfSynonyms = []\r\n        let setOf10Array = []\r\n        \r\n        allSynonyms.forEach(synonym => {\r\n            // If the array 10 or less, add current synonym\r\n            if (setOf10Array.length < separationAmount) {\r\n                setOf10Array.push(synonym)\r\n            } else if (setOf10Array.length === separationAmount) {\r\n                // If we've filled the array and their are still words,\r\n                // Add the array to Array of Arrays then clear array\r\n                arraysOfSynonyms.push(setOf10Array)\r\n                setOf10Array = []\r\n                // After we clear the array, add the word to it\r\n                setOf10Array.push(synonym)\r\n            }\r\n        })\r\n        arraysOfSynonyms.push(setOf10Array)\r\n        return arraysOfSynonyms\r\n    }\r\n    \r\n    if (currentDef.meta.syns.length === 0) {\r\n        return null\r\n    }\r\n\r\n    if (currentSynArray === undefined) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <hr className=\"definition__divider\"></hr>\r\n            <h4 className=\"card__h4 definition__h4--synonym\">synonyms</h4>\r\n            {\r\n                // Only show if there is more than one \"page\" of synonyms\r\n                arrayOfSynonymArrays.length === 1 ? null :\r\n                <>\r\n                <p className=\"synonym__total\">showing {CalculateShowingSynAmount()} out of {CalculateTotalSyns()}</p>\r\n                \r\n                {/* MAKE THIS A COMPONENT BECAUSE IT'S USED BY BOTH DEFINITIONS AND SYNONYMS */}\r\n                <div className=\"synonym__next\">\r\n                <button                      \r\n                    onClick={e => {\r\n                        const previous = arrayOfSynonymArrays.indexOf(currentSynArray) - 1\r\n                        setCurrentSynArray(arrayOfSynonymArrays[previous])\r\n                    }}\r\n                    onMouseOver={e => ChangeIconClassOnHover(e, true, \"icon__black\", \"icon__white\")}\r\n                    onMouseLeave={e => ChangeIconClassOnHover(e, false, \"icon__black\", \"icon__white\")}\r\n                    className={arrayOfSynonymArrays.indexOf(currentSynArray) === 0 ? \"btn btn__arrow btn--disabled\" : \"btn btn__arrow\"}>\r\n                        <IconArrow rotation=\"icon__arrow--rotated\" color=\"icon__black\" disabled={synPrevBtnDisabled} />\r\n                    </button>\r\n\r\n                    <p className=\"next__text\"> {arrayOfSynonymArrays.indexOf(currentSynArray) + 1} / {arrayOfSynonymArrays.length}</p>\r\n                    \r\n                    <button\r\n                    onClick={e => {\r\n                        const next = arrayOfSynonymArrays.indexOf(currentSynArray) + 1\r\n                        setCurrentSynArray(arrayOfSynonymArrays[next])\r\n                    }}\r\n                    onMouseOver={e => ChangeIconClassOnHover(e, true, \"icon__black\", \"icon__white\")}\r\n                    onMouseLeave={e => ChangeIconClassOnHover(e, false, \"icon__black\", \"icon__white\")}\r\n                    className={arrayOfSynonymArrays.indexOf(currentSynArray) === arrayOfSynonymArrays.length - 1 ? \"btn btn__arrow btn--disabled\" : \"btn btn__arrow\"}>\r\n                        <IconArrow color=\"icon__black\" disabled={synNextBtnDisabled} />\r\n                    </button>\r\n                </div>\r\n                </>\r\n            }\r\n            <ul className=\"word__list synonym__words\">\r\n                {\r\n                    currentSynArray.map(synonym => {\r\n                        ++keyValue\r\n                        return <WordButton\r\n                                    key={keyValue}\r\n                                    word={synonym}\r\n                                    getWordFromThesaurus={getWordFromThesaurus}\r\n                                    isSelectedCard={false} />\r\n                    })\r\n                }\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DefinitionSynonyms","// Render antonyms for current definition\r\n// Also sorts antonyms into arrays of 10\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { ChangeIconClassOnHover } from \"../../utils/ChangeIconClassOnHover\"\r\nimport { IconArrow } from \"../../components/icons/Icons\"\r\nimport { WordButton } from \"../../components/buttons/Buttons\"\r\n\r\nconst DefinitionAntonyms = ({ currentDef, getWordFromThesaurus }) => {\r\n\r\n    \r\n\r\n    // Couldn't use .indexOf for WordButton keys for antonyms, so using global keyValue\r\n    let keyValue = 0\r\n\r\n    // Final Array of Arrays of all antonyms separated into sets of 10\r\n    const [ arrayOfAntonymArrays, setArrayOfAntonymArrays ] = useState([])\r\n\r\n    // setState for previous and next buttons\r\n    const [ antPrevBtnDisabled, setAntPrevBtnDisabled ] = useState(true)\r\n    const [ antNextBtnDisabled, setAntNextBtnDisabled ] = useState(false)\r\n\r\n    // Current antonym from array of arrays\r\n    const [ currentAntArray, setCurrentAntArray ] = useState([])\r\n\r\n    // Separated so we can get the current array of arrays of antonyms\r\n    useEffect(() => {\r\n        setArrayOfAntonymArrays(SeparateListOfAntsIntoSets())\r\n    }, [currentDef])\r\n\r\n    // Whenever the arrayOfAntonymsArrays state changes, update state of CurrentAntArray\r\n    useEffect(() => {\r\n        setCurrentAntArray(arrayOfAntonymArrays[0])\r\n    }, [arrayOfAntonymArrays])\r\n\r\n    // Whenever the CurrentAntArray state changes, update Next & Prev button States\r\n    useEffect(() => {\r\n        // PreviousDefinitionBtn State\r\n        if (arrayOfAntonymArrays.indexOf(currentAntArray) === 0) {\r\n            setAntPrevBtnDisabled(true)\r\n        } else {\r\n            setAntPrevBtnDisabled(false)\r\n        }\r\n        // NextDefinitionBtn State\r\n        if (arrayOfAntonymArrays.indexOf(currentAntArray) === arrayOfAntonymArrays.length - 1) {\r\n            setAntNextBtnDisabled(true)\r\n        } else {\r\n            setAntNextBtnDisabled(false)\r\n        }\r\n    }, [currentAntArray])\r\n    \r\n    // Find total of antonyms for \"Showing X out of TOTAL\"\r\n    const CalculateTotalAnts = () => {\r\n        let totalAnts = 0\r\n        currentDef.meta.ants.map(antonymArray => {\r\n            totalAnts += antonymArray.length\r\n        })\r\n        return totalAnts\r\n    }\r\n\r\n    // Find total shown antonyms per page\r\n    const CalculateShowingAntAmount = () => {\r\n        const currentIndex = arrayOfAntonymArrays.indexOf(currentAntArray)\r\n        let antCount = 0\r\n        \r\n        // If on first page, set as currentAntArray.length else, we're on another page\r\n        if (currentIndex === 0) {\r\n            antCount = currentAntArray.length\r\n            return antCount\r\n        } else if (currentIndex > 0) {\r\n            // Loop over arrayOfAntArrays and stop and currentIndex\r\n            arrayOfAntonymArrays.forEach(array => {\r\n                // get the index of current array\r\n                const arrayIndex = arrayOfAntonymArrays.indexOf(array)\r\n                if (arrayIndex <= currentIndex) {\r\n                    // Add array's length to ant count\r\n                    antCount += array.length\r\n                }\r\n            })\r\n            return antCount\r\n        }\r\n    }\r\n\r\n    // Create a combined list of all antonyms for this definition\r\n    // Returns nothing because it's affecting allAntonyms\r\n    const CreateArrayOfAllAnts = () => {\r\n        if (currentDef.meta.ants.length === 0) {\r\n            return null\r\n        }\r\n\r\n        let allAntonyms = []\r\n        currentDef.meta.ants.forEach(antonymArray => {\r\n            antonymArray.forEach(antonym => {\r\n                allAntonyms.push(antonym)\r\n            })\r\n        })\r\n        return allAntonyms\r\n    }\r\n\r\n    const SeparateListOfAntsIntoSets = () => {\r\n        const allAntonyms = CreateArrayOfAllAnts()\r\n        let separationAmount = 15\r\n        let arraysOfAntonyms = []\r\n        let setOf10Array = []\r\n        \r\n        allAntonyms.forEach(antonym => {\r\n            // If the array 10 or less, add current antonym\r\n            if (setOf10Array.length < separationAmount) {\r\n                setOf10Array.push(antonym)\r\n            } else if (setOf10Array.length === separationAmount) {\r\n                // If we've filled the array and their are still words,\r\n                // Add the array to Array of Arrays then clear array\r\n                arraysOfAntonyms.push(setOf10Array)\r\n                setOf10Array = []\r\n                // After we clear the array, add the word to it\r\n                setOf10Array.push(antonym)\r\n            }\r\n        })\r\n        arraysOfAntonyms.push(setOf10Array)\r\n        return arraysOfAntonyms\r\n    }\r\n    \r\n    if (currentDef.meta.ants.length === 0) {\r\n        return null\r\n    }\r\n\r\n    if (currentAntArray === undefined) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h4 className=\"card__h4 definition__h4--antonym\">antonyms</h4>\r\n            {\r\n                // Only show if there is more than one \"page\" of antonyms\r\n                arrayOfAntonymArrays.length === 1 ? null :\r\n                <>\r\n                <p className=\"antonym__total\">showing {CalculateShowingAntAmount()} out of {CalculateTotalAnts()}</p>\r\n                \r\n                <div className=\"antonym__next\">\r\n                <button                      \r\n                    onClick={e => {\r\n                        const previous = arrayOfAntonymArrays.indexOf(currentAntArray) - 1\r\n                        setCurrentAntArray(arrayOfAntonymArrays[previous])\r\n                    }}\r\n                    onMouseOver={e => ChangeIconClassOnHover(e, true, \"icon__black\", \"icon__white\")}\r\n                    onMouseLeave={e => ChangeIconClassOnHover(e, false, \"icon__black\", \"icon__white\")}\r\n                    className={arrayOfAntonymArrays.indexOf(currentAntArray) === 0 ? \"btn btn__arrow btn--disabled\" : \"btn btn__arrow\"}>\r\n                        <IconArrow rotation=\"icon__arrow--rotated\" color=\"icon__black\" disabled={antPrevBtnDisabled} />\r\n                    </button>\r\n\r\n                    <p className=\"next__text\"> {arrayOfAntonymArrays.indexOf(currentAntArray) + 1} / {arrayOfAntonymArrays.length}</p>\r\n                    \r\n                    <button\r\n                    onClick={e => {\r\n                        const next = arrayOfAntonymArrays.indexOf(currentAntArray) + 1\r\n                        setCurrentAntArray(arrayOfAntonymArrays[next])\r\n                    }}\r\n                    onMouseOver={e => ChangeIconClassOnHover(e, true, \"icon__black\", \"icon__white\")}\r\n                    onMouseLeave={e => ChangeIconClassOnHover(e, false, \"icon__black\", \"icon__white\")}\r\n                    className={arrayOfAntonymArrays.indexOf(currentAntArray) === arrayOfAntonymArrays.length - 1 ? \"btn btn__arrow btn--disabled\" : \"btn btn__arrow\"}>\r\n                        <IconArrow color=\"icon__black\" disabled={antNextBtnDisabled} />\r\n                    </button>\r\n                </div>\r\n                </>\r\n            }\r\n            <ul className=\"word__list antonym__words\">\r\n                {\r\n                    currentAntArray.map(antonym => {\r\n                        ++keyValue\r\n                        return <WordButton\r\n                                    key={keyValue}\r\n                                    word={antonym}\r\n                                    getWordFromThesaurus={getWordFromThesaurus}\r\n                                    isSelectedCard={false} />\r\n                    })\r\n                }\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DefinitionAntonyms","import React, { useContext, useEffect, useState } from \"react\"\r\nimport { ChangeIconClassOnHover } from \"../../utils/ChangeIconClassOnHover\"\r\nimport { ThesaurusContext } from \"../../providers/ThesaurusProvider\"\r\nimport { CollectionContext } from \"../../providers/CollectionProvider\"\r\nimport { WordContext } from \"../../providers/WordProvider\"\r\nimport { IconClose, IconArrow } from \"../../components/icons/Icons\"\r\nimport DefinitionSynonyms from './DefinitionSynonyms'\r\nimport \"./DefinitionCard.css\"\r\nimport DefinitionAntonyms from \"./DefinitionAntonyms\"\r\n// Definition cards handle all information related to retrieved search terms\r\n\r\nconst DefinitionCard = ({ cardId, getWordFromThesaurus, definitions }) => {\r\n    // stores incoming array of all definitions for current term\r\n    const userId = +sessionStorage.getItem('currentUserId')\r\n\r\n    // setState for previous and next buttons\r\n    const [ defPrevBtnDisabled, setDefPrevBtnDisabled ] = useState(true)\r\n    const [ defNextBtnDisabled, setDefNextBtnDisabled ] = useState(false)\r\n\r\n    // DefinitionCards hold the array of current cards\r\n    const { definitionCards, setDefinitionCards } = useContext(ThesaurusContext)\r\n\r\n    const { addWord } = useContext(WordContext)\r\n\r\n    // currentDef holds current definition showing in card. Allows for cycling through defs\r\n    const [ currentDef, setCurrentDef ] = useState(undefined)\r\n\r\n    // currently selected collection to add/remove definition from\r\n    const { selectedCollection } = useContext(CollectionContext)\r\n\r\n    // Need useEffect to setState on card instantiation\r\n    // Whenever the definitions change (ie, a new card is added, re-load state)\r\n    useEffect(() => {\r\n        setCurrentDef(definitions[0])\r\n    }, [definitions])\r\n\r\n    // Check if the Next & Prev buttons are active\r\n    useEffect(() => {\r\n        // PreviousDefinitionBtn State\r\n        if (definitions.indexOf(currentDef) === 0) {\r\n            setDefPrevBtnDisabled(true)\r\n        } else {\r\n            setDefPrevBtnDisabled(false)\r\n        }\r\n        // NextDefinitionBtn State\r\n        if (definitions.indexOf(currentDef) === definitions.length - 1) {\r\n            setDefNextBtnDisabled(true)\r\n        } else {\r\n            setDefNextBtnDisabled(false)\r\n        }\r\n    }, [currentDef])\r\n\r\n    if (!currentDef) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <article className=\"card card__color--white card__definition\">\r\n\r\n            <button className=\"btn__close card__definition--close\"\r\n                onClick={e => {\r\n                    const removed = definitionCards.filter(card => definitionCards.indexOf(card) !== cardId)\r\n                    setDefinitionCards(removed)\r\n                }}\r\n                onMouseOver={e => ChangeIconClassOnHover(e, true, \"icon__gray\", \"icon__hovered\")}\r\n                onMouseLeave={e => ChangeIconClassOnHover(e, true, \"icon__hovered\", \"icon__gray\")}>\r\n                <IconClose color=\"icon__gray\" />\r\n            </button>\r\n\r\n            <h2 className=\"card__h2 definition__h2\">Definition</h2>\r\n            \r\n            {/* Display current definition name */}\r\n            <h3 className=\"card__h3 definition__h3\">\r\n                {currentDef.meta.id}\r\n            </h3>\r\n\r\n            {/* If word is already in the user's collection, change this to REMOVE */}\r\n            {selectedCollection === undefined || !selectedCollection.collection ? (\r\n                    null \r\n                ) : (\r\n                    <button className=\"btn definition__submit\"\r\n                    onClick={() => {\r\n                        const word = {\r\n                            userId,\r\n                            \"collectionId\": selectedCollection.collection.id,\r\n                            \"MwWordId\": currentDef.meta.uuid,\r\n                            \"name\": currentDef.meta.id\r\n                        }\r\n                        addWord(word)\r\n                    }}>\r\n                        Add to {selectedCollection.collection.name}\r\n                    </button>\r\n                )}\r\n\r\n            {\r\n                // If more than one definition, show previous/next buttons to cycle through definitions\r\n                definitions.length === 1 ? null :\r\n                <div className=\"definition__next\">\r\n                    <button                      \r\n                        className={definitions.indexOf(currentDef) === 0 ? \"btn btn__arrow btn--disabled\" : \"btn btn__arrow\"}\r\n                        onClick={e => {\r\n                            const previous = definitions.indexOf(currentDef) - 1\r\n                            setCurrentDef(definitions[previous])\r\n                        }}\r\n                        onMouseOver={e => ChangeIconClassOnHover(e, true, \"icon__black\", \"icon__white\")}\r\n                        onMouseLeave={e => ChangeIconClassOnHover(e, false, \"icon__black\", \"icon__white\")}>\r\n                        <IconArrow rotation=\"icon__arrow--rotated\" color=\"icon__black\" disabled={defPrevBtnDisabled} />\r\n                    </button>\r\n\r\n                    <p className=\"next__text\"> {definitions.indexOf(currentDef) + 1} / {definitions.length}</p>\r\n                    \r\n                    <button\r\n                    className={definitions.indexOf(currentDef) === definitions.length - 1 ? \"btn btn__arrow btn--disabled\" : \"btn btn__arrow\"}\r\n                    onClick={e => {\r\n                        const next = definitions.indexOf(currentDef) + 1\r\n                        setCurrentDef(definitions[next])\r\n                    }}\r\n                    onMouseOver={e => ChangeIconClassOnHover(e, true, \"icon__black\", \"icon__white\")}\r\n                    onMouseLeave={e => ChangeIconClassOnHover(e, false, \"icon__black\", \"icon__white\")}>\r\n                        <IconArrow color=\"icon__black\" disabled={defNextBtnDisabled} />\r\n                    </button>\r\n                </div>\r\n            }\r\n            \r\n            {/* OPEN MODAL WITH SEARCH TO MW'S DICTIONARY API FOR CURRENT DEFINITION */}\r\n            {/* <a className=\"definition__expanded\"\r\n                onClick={e => {\r\n                    console.log('FETCH INFO FROM MW DICTIONARY WITH CURRENT WORD & PART OF SPEECH, PASS INTO MODAL')\r\n                }}>\r\n                See Expanded Definition\r\n            </a> */}\r\n\r\n            {/* DEFINITION LIST SECTION */}\r\n            <h4 className=\"card__h4 definition__h4--speech\">\r\n                {currentDef.fl}\r\n            </h4>\r\n            <ol className=\"definitions__list\">\r\n                {currentDef.shortdef.map(shortDefinition => (\r\n                    <li className=\"list__definition\" key={currentDef.shortdef.indexOf(shortDefinition)}>{shortDefinition}</li>\r\n                ))}\r\n            </ol>\r\n\r\n            <DefinitionSynonyms currentDef={currentDef} getWordFromThesaurus={getWordFromThesaurus} />\r\n\r\n            {currentDef.meta.ants.length === 0 ? (\r\n                null\r\n            ) : (\r\n                <DefinitionAntonyms currentDef={currentDef} getWordFromThesaurus={getWordFromThesaurus} />\r\n            )}\r\n\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default DefinitionCard","import React, { useContext } from \"react\"\r\nimport { IconClose } from \"../../components/icons/Icons\"\r\nimport { WordButton } from \"../../components/buttons/Buttons\"\r\nimport \"./DefinitionCard.css\"\r\n// Displays if there are no matches. Shows similar words\r\n\r\nconst DefinitionSimilar = ({ cardId, getWordFromThesaurus, definitions, definitionCards, setDefinitionCards }) => (\r\n    <article className=\"card card__color--white card__definition\">\r\n        <button className=\"btn__close card__definition--close\"\r\n            onClick={e => {\r\n                const removed = definitionCards.filter(card => definitionCards.indexOf(card) !== cardId)\r\n                setDefinitionCards(removed)\r\n            }}>\r\n            <IconClose color=\"icon__gray\" />\r\n        </button>\r\n\r\n        <h2 className=\"card__h2\">Similar words</h2>\r\n        \r\n        <h3 className=\"card__h3 definition__h3\">Couldn't find that word. Did you mean?</h3>\r\n\r\n        {/* word button list */}\r\n        <ul className=\"word__list definition__words\">\r\n            {definitions.map(similar => <WordButton\r\n                                            key={definitions.indexOf(similar)}\r\n                                            word={similar}\r\n                                            getWordFromThesaurus={getWordFromThesaurus} />)}\r\n        </ul>\r\n        {/* stems array of: 'autumn, autumnal, autumnally, autumns, fall' */}\r\n    </article>\r\n)\r\n\r\nexport default DefinitionSimilar","import React from \"react\"\r\nimport { IconClose } from \"../../components/icons/Icons\"\r\nimport \"./DefinitionCard.css\"\r\n// If more than one definition in the array, show the back and next buttons \r\n\r\nconst DefinitionNotFound = ({ cardId, definitionCards, setDefinitionCards }) => (\r\n    <article className=\"card card__color--white card__definition\">\r\n        {/* Able to \"close\" card by removing it from array*/}\r\n        <button className=\"btn__close card__definition--close\"\r\n            onClick={e => {\r\n                const removed = definitionCards.filter(card => definitionCards.indexOf(card) !== cardId)\r\n                setDefinitionCards(removed)\r\n            }}>\r\n            <IconClose color=\"icon__gray\" />\r\n        </button>\r\n        <h2 className=\"card__h2\">Error</h2>\r\n        <h3 className=\"card__h3 definition__h3\">Term not found.</h3>\r\n    </article>\r\n)\r\n\r\nexport default DefinitionNotFound","import React, { useState } from 'react'\r\nimport { SearchBar } from '../../../components/inputs/Inputs'\r\n\r\nconst ThesaurusSearch = ({ getWordFromThesaurus }) => {\r\n    const [ search, setSearch ] = useState(\"\")\r\n\r\n    const searchThesaurus = e => {\r\n        e.preventDefault()\r\n        // Checks for if there is just an empty string\r\n        if (search.length !== 0) {\r\n            // If there is more than an empty string, remove all spaces\r\n            const trimmed = search.trim()\r\n            // On the off chance there is just a bunch of spaces, do not add the word\r\n            if (trimmed.length !== 0) {\r\n                const lowered = trimmed.toLowerCase()\r\n                getWordFromThesaurus(lowered)\r\n                // reset search input value to empty string & state\r\n                // must do both to have the visual and actual input value change\r\n                setSearch(\"\")\r\n                e.target[1].value = \"\"\r\n            }    \r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className=\"card card__color--white thesaurus__search\">\r\n            <form className=\"form__search\" onSubmit={searchThesaurus}>\r\n                <SearchBar\r\n                    labelTitle={\"Search Merriam-Webster's Collegiate Thesaurus\"}\r\n                    placeholderText={\"Enter a word...\"}\r\n                    setSearchTerms={setSearch}/>\r\n\r\n                <button className=\"btn\" type=\"submit\">\r\n                    Search\r\n                </button>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ThesaurusSearch","import React, { useContext } from 'react'\r\nimport { ThesaurusContext } from '../../../providers/ThesaurusProvider'\r\nimport DefinitionCard from '../../../components/definitions/DefinitionCard'\r\nimport DefinitionSimilar from '../../../components/definitions/DefinitionSimilar'\r\nimport DefinitionNotFound from '../../../components/definitions/DefinitionNotFound'\r\nimport ThesaurusSearch from './ThesaurusSearch'\r\nimport './Thesaurus.css'\r\n\r\n// Thesaurus Column works by mapping over each definitionCard created by clicking the search or word buttons\r\nconst ThesaurusColumn = () => {\r\n    const { definitionCards, setDefinitionCards } = useContext(ThesaurusContext)\r\n    const { getWordFromThesaurus } = useContext(ThesaurusContext)\r\n\r\n    return (\r\n        <>\r\n            <ThesaurusSearch getWordFromThesaurus={getWordFromThesaurus} />\r\n\r\n            <div className=\"thesaurus__definitions\">\r\n                {definitionCards.map(dc => {\r\n\r\n                    // create the key based on current items index\r\n                    const key = definitionCards.indexOf(dc)\r\n                    // Check current def card to choose which to display\r\n                    if (typeof dc[0] !== \"string\" && dc[0] !== undefined) {\r\n                        return <DefinitionCard\r\n                                key={key}\r\n                                cardId={key}\r\n                                getWordFromThesaurus={getWordFromThesaurus}\r\n                                definitions={dc} />\r\n                    } else if (dc[0] !== undefined) {\r\n                        // Return similar words to the term\r\n                        return <DefinitionSimilar\r\n                                    key={key}\r\n                                    cardId={key} \r\n                                    getWordFromThesaurus={getWordFromThesaurus}\r\n                                    definitions={dc}\r\n                                    definitionCards={definitionCards}\r\n                                    setDefinitionCards={setDefinitionCards} />\r\n                    } else {\r\n                        return <DefinitionNotFound\r\n                            key={key}\r\n                            cardId={key}\r\n                            definitionCards={definitionCards}\r\n                            setDefinitionCards={setDefinitionCards} />\r\n                    }\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ThesaurusColumn","import React, { useState, useEffect, useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { CollectionContext } from '../../providers/CollectionProvider'\r\nimport { ProjectContext } from '../../providers/ProjectProvider'\r\nimport Delete from '../../components/delete/Delete'\r\nimport HeaderDesktop from '../../components/headerDesktop/HeaderDesktop'\r\nimport HeaderMobile from '../../components/headerMobile/HeaderMobile'\r\nimport Footer from '../../components/footer/Footer'\r\nimport Modal from '../../components/modal/Modal'\r\nimport ProjectManager from '../../components/managers/ProjectManager'\r\nimport CollectionManager from '../../components/managers/CollectionManager'\r\nimport { AppSelectedRoute } from '../../utils/Routes'\r\nimport SelectedCard from './selected/SelectedCard'\r\nimport ListColumn from './list/ListColumn'\r\nimport ThesaurusColumn from './thesaurus/ThesaurusColumn'\r\nimport { ThesaurusContext } from '../../providers/ThesaurusProvider'\r\nimport './MainView.css'\r\n\r\nconst MainView = ({\r\n   isListColumnActive,\r\n   setIsListColumnActive,\r\n   isSelectedColumnActive,\r\n   setIsSelectedColumnActive\r\n}) => {\r\n    const history = useHistory()\r\n    const {\r\n        collections,\r\n        selectedCollection,\r\n        getCollections,\r\n        isFetchingCollections,\r\n        isCollectionManagerOpen } = useContext(CollectionContext)\r\n    const {\r\n        projects,\r\n        selectedProject,\r\n        setSelectedProject,\r\n        getProjects,\r\n        isProjectManagerOpen } = useContext(ProjectContext)\r\n\r\n    const { getWordFromThesaurus } = useContext(ThesaurusContext)\r\n    // List column search state\r\n    const [searchTerms, setSearchTerms] = useState(\"\")\r\n    const [filteredList, setFilteredList] = useState([])\r\n\r\n    // Track browser windows dimensions, so if they are below a certain amount, swap to mobile-view header\r\n    const [ windowDimensions, setWindowDimensions ] = useState({ height: window.innerHeight, width: window.innerWidth })\r\n    // isMobile tracks state for if we should show mobile view or not\r\n    const [ isMobile, setIsMobile ] = useState(false)\r\n    // If you change this, update it in: Icons.css, \r\n    const maxWidthForMobile = 1075\r\n\r\n    // Need to track the state of List, Selected, and Thesaurus Columns\r\n    // Based on if they are \"True\" display their columns. If not, display: none\r\n    // Will also need to turn them on and off based on Screen Width. Do not handle that with CSS because they could conflict\r\n\r\n    useEffect(() => {\r\n        getCollections()\r\n        getProjects()\r\n    }, [])\r\n\r\n    // handles list column searching\r\n    useEffect(() => {\r\n        // turn on and off the list column toggle button\r\n        if (!collections || collections.length !== 0) {\r\n            setIsListColumnActive(true)\r\n        } else {\r\n            setIsListColumnActive(false)\r\n        }\r\n\r\n        if (searchTerms !== \"\") {\r\n            const matches = collections.filter(c => c.name.toLowerCase().includes(searchTerms.toLowerCase().trim()) || c.description.toLowerCase().includes(searchTerms.toLowerCase().trim()))\r\n            setFilteredList(matches)\r\n        } else {\r\n            // no terms in search bar, so display all and reset filtered items\r\n            setFilteredList(collections)\r\n        }\r\n    }, [searchTerms, collections])\r\n\r\n    // Debounce and useEffect based on https://www.pluralsight.com/guides/re-render-react-component-on-window-resize\r\n    // Debounce delays re-renders on every resize event\r\n    function debounce(fn, ms) {\r\n        let timer\r\n        return _ => {\r\n          clearTimeout(timer)\r\n          timer = setTimeout(_ => {\r\n            timer = null\r\n            fn.apply(this, arguments)\r\n          }, ms)\r\n        };\r\n      }\r\n\r\n    // Delays state update on every resize event, and removes the event listener to stop a memory leak\r\n    useEffect(() => {\r\n        const debouncedHandleResize = debounce(function handleResize() {\r\n            setWindowDimensions({\r\n              height: window.innerHeight,\r\n              width: window.innerWidth\r\n            })\r\n          }, 150)\r\n\r\n        // EventListener on Window object to properly track the current browser dimensions\r\n        window.addEventListener('resize', debouncedHandleResize)\r\n\r\n        if (windowDimensions.width < maxWidthForMobile){\r\n            setIsMobile(true)\r\n            setIsListColumnActive(false)\r\n        } else {\r\n            setIsMobile(false)\r\n            setIsListColumnActive(false)\r\n        }\r\n\r\n        console.log(windowDimensions)\r\n\r\n        // Remove event listener so we don't add an infinite amount\r\n        return _ => {\r\n            window.removeEventListener('resize', debouncedHandleResize)\r\n        }\r\n    }, [windowDimensions])\r\n\r\n\r\n    return (\r\n        <div className=\"app__container\">\r\n            {/* Render Modals */}\r\n            <Delete />\r\n            \r\n            <Modal\r\n                isOpen={isCollectionManagerOpen}\r\n                contentFunction={<CollectionManager />}\r\n                contentHeader={\"Collection Manager\"} />\r\n\r\n            <Modal\r\n                isOpen={isProjectManagerOpen}\r\n                contentFunction={<ProjectManager />}\r\n                contentHeader={\"Project Manager\"} />\r\n\r\n            {/* Headers */}\r\n            <div className=\"container__headers\">\r\n                {isMobile ? (\r\n                    <HeaderMobile\r\n                        selectedCollection={selectedCollection}\r\n                        appSelectedRoute={AppSelectedRoute}\r\n                        history={history}\r\n                        collections={collections} />\r\n                ) : (\r\n                    <HeaderDesktop\r\n                        isListColumnActive={isListColumnActive}\r\n                        setIsListColumnActive={setIsListColumnActive}\r\n                        isSelectedColumnActive={isSelectedColumnActive}\r\n                        setIsSelectedColumnActive={setIsSelectedColumnActive}\r\n                        selectedCollection={selectedCollection}\r\n                        appSelectedRoute={AppSelectedRoute}\r\n                        history={history}\r\n                        collections={collections}/>\r\n                )}\r\n            </div>\r\n            \r\n            {/* Dashboard */}\r\n            <div className=\"container__inner\">\r\n                \r\n                {isListColumnActive ? (\r\n                    <section className=\"column__list\">\r\n                        <ListColumn\r\n                            history={history}\r\n                            projects={projects}\r\n                            setSelectedProject={setSelectedProject}\r\n                            selectedProject={selectedProject}\r\n                            searchTerms={searchTerms}\r\n                            setSearchTerms={setSearchTerms}\r\n                            AppSelectedRoute={AppSelectedRoute}\r\n                            isFetchingCollection={isFetchingCollections}\r\n                            collections={filteredList} />\r\n                    </section>\r\n                ) : (\r\n                    null\r\n                )}\r\n\r\n                {isSelectedColumnActive ? (\r\n                    <section className=\"column__selected\">\r\n                        {selectedCollection ? (\r\n                            <SelectedCard\r\n                                history={history}\r\n                                selectedCollection={selectedCollection}\r\n                                getWordFromThesaurus={getWordFromThesaurus} />\r\n                        ) : (\r\n                            null\r\n                        )}\r\n                    </section>\r\n                ) : (\r\n                    null\r\n                )}\r\n                <section className=\"column__thesaurus\">\r\n                    <ThesaurusColumn />\r\n                </section>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainView","import React, { useContext, useState, useEffect } from 'react'\r\nimport { Switch, Route, Redirect, useLocation, useHistory } from 'react-router-dom'\r\nimport { UserContext } from './providers/UserProvider'\r\nimport { DeleteContext } from './providers/DeleteProvider'\r\nimport { WordContext } from './providers/WordProvider'\r\nimport { CollectionContext } from './providers/CollectionProvider'\r\nimport { ProjectContext } from './providers/ProjectProvider'\r\nimport AuthView from './views/auth/AuthView'\r\nimport MainView from './views/main/MainView'\r\nimport {\r\n    findRouteParam,\r\n    AuthRoute,\r\n    AppRoute,\r\n    AppSelectedRoute,\r\n    SettingsRoute,\r\n    WordDeleteRoute,\r\n    CollectionManagerRoute,\r\n    CollectionManagerCreateRoute,\r\n    CollectionManagerDetailsRoute,\r\n    CollectionManagerEditRoute,\r\n    CollectionManagerDeleteRoute,\r\n    ProjectManagerRoute,\r\n    ProjectManagerCreateRoute,\r\n    ProjectManagerDetailsRoute,\r\n    ProjectManagerEditRoute,\r\n    ProjectManagerDeleteRoute,\r\n} from './utils/Routes'\r\n\r\nconst ApplicationViews = () => {\r\n    const { isLoggedIn } = useContext(UserContext)\r\n    const { setObjectToDelete, setIsDeleteModalOpen } = useContext(DeleteContext)\r\n    const { wordsInCollection, getWordById } = useContext(WordContext)\r\n    let currentUrl = useLocation().pathname\r\n    const history = useHistory()\r\n\r\n    // Dashboard column state needed at this level so the router can change them\r\n    const [ isListColumnActive, setIsListColumnActive ] = useState(true);\r\n    const [ isSelectedColumnActive, setIsSelectedColumnActive ] = useState(false);\r\n\r\n    const {\r\n        getProjects,\r\n        getProjectById,\r\n        setSelectedProject,\r\n\r\n        // Project Manager\r\n        setIsProjectManagerOpen,\r\n        setIsProjectCreateFormOpen,\r\n        setIsProjectDetailsOpen,\r\n        setIsProjectEditFormOpen,\r\n        setIsFetchingProjectDetails\r\n    } = useContext(ProjectContext)\r\n\r\n    const {\r\n        getCollections,\r\n        getCollectionById,\r\n        selectedCollection,\r\n        setSelectedCollection,\r\n\r\n        // Collection Manager\r\n        setIsCollectionManagerOpen,\r\n        setIsCollectionCreateFormOpen,\r\n        setIsCollectionDetailsOpen,\r\n        setIsCollectionEditFormOpen,\r\n        setIsFetchingCollectionDetails\r\n    } = useContext(CollectionContext)\r\n\r\n    // State router switches state on/off based on the URL pathname\r\n    const StateRouter = () => {\r\n        const routeParamId = findRouteParam(currentUrl)\r\n\r\n        // If an id is ever 0, set state to undefined, and re-route to /app\r\n        if (routeParamId === \"0\") {\r\n            currentUrl = AppRoute()\r\n            setSelectedCollection(undefined)\r\n        } \r\n\r\n        const turnOffAllCollectionRoutes = () => {\r\n            setIsCollectionCreateFormOpen(false)\r\n            setIsCollectionManagerOpen(false)\r\n            setIsCollectionDetailsOpen(false)\r\n            setIsCollectionEditFormOpen(false)\r\n        }\r\n\r\n        const turnOffAllProjectRoutes = () => {\r\n            setIsProjectManagerOpen(false)\r\n            setIsProjectCreateFormOpen(false)\r\n            setIsProjectDetailsOpen(false)\r\n            setIsProjectEditFormOpen(false)\r\n        }\r\n\r\n        const turnOffAllButDelete = () => {\r\n            turnOffAllCollectionRoutes()\r\n            turnOffAllProjectRoutes()\r\n        }\r\n\r\n        switch (currentUrl) {\r\n            case AuthRoute():\r\n                setIsDeleteModalOpen(false)\r\n                turnOffAllButDelete()\r\n                break\r\n\r\n            case AppSelectedRoute(routeParamId):\r\n                // Turn off all open modals\r\n                turnOffAllButDelete()\r\n                setIsDeleteModalOpen(false)\r\n\r\n                // set SelectedCollection\r\n                getCollectionById(routeParamId)\r\n                .then(collectionDetails => setSelectedCollection(collectionDetails))\r\n                .catch(error => history.goBack())\r\n                setIsSelectedColumnActive(true)\r\n                break\r\n\r\n            case AppRoute():\r\n                // Checks if routeParam is 0 or undefined selectedCollection\r\n                if (!selectedCollection || routeParamId === \"0\") {\r\n                    turnOffAllButDelete()\r\n                    setIsDeleteModalOpen(false)\r\n                    setIsSelectedColumnActive(false)\r\n                } else {\r\n                    // Push to the selectedCollection Route\r\n                    history.push(AppSelectedRoute(selectedCollection.collection.id))\r\n                }\r\n                break\r\n\r\n            case SettingsRoute():\r\n                turnOffAllCollectionRoutes()\r\n                turnOffAllProjectRoutes()\r\n                // Close all modals\r\n                // Open Settings modal\r\n                break\r\n\r\n            case WordDeleteRoute(routeParamId):\r\n                getWordById(routeParamId)\r\n                .then(word => {\r\n                    setObjectToDelete(word)\r\n                })\r\n                .catch(error => history.goBack()) // if an error, on retrieval, go back a page\r\n\r\n                turnOffAllButDelete()\r\n                setIsDeleteModalOpen(true)\r\n                break\r\n\r\n            // Project Manager\r\n            case ProjectManagerRoute():\r\n                // Whenever we hit the ProjectManager, getProjects\r\n                getProjects() // Currently doesn't show a loading icon though. Which I'd like to add\r\n\r\n                turnOffAllCollectionRoutes()\r\n                setIsProjectCreateFormOpen(false)\r\n                setIsProjectDetailsOpen(false)\r\n                setIsProjectEditFormOpen(false)\r\n                setIsProjectManagerOpen(true)\r\n                break \r\n\r\n            case ProjectManagerCreateRoute():\r\n                turnOffAllCollectionRoutes()\r\n                setIsProjectManagerOpen(true)\r\n                setIsProjectCreateFormOpen(true)\r\n                setIsProjectEditFormOpen(false)\r\n                setIsProjectDetailsOpen(false)\r\n                break\r\n\r\n            case ProjectManagerDetailsRoute(routeParamId):\r\n                setIsFetchingProjectDetails(true)\r\n                turnOffAllCollectionRoutes()\r\n\r\n                getProjectById(routeParamId)\r\n                .then(projectDetails => setSelectedProject(projectDetails))\r\n                .catch(error => history.goBack())\r\n\r\n                setIsProjectDetailsOpen(true) \r\n                setIsProjectManagerOpen(true)\r\n                setIsProjectCreateFormOpen(false)\r\n                setIsProjectEditFormOpen(false)\r\n                break\r\n\r\n            case ProjectManagerEditRoute(routeParamId):\r\n                // Hide Details and Show Edit form by switching their opacity\r\n                getProjectById(routeParamId)\r\n                .then(project => setSelectedProject(project))\r\n                .catch(error => history.goBack())\r\n\r\n                setIsProjectEditFormOpen(true)\r\n                setIsProjectDetailsOpen(true) \r\n                setIsProjectManagerOpen(true)\r\n                break\r\n\r\n            case ProjectManagerDeleteRoute(routeParamId):\r\n                getProjectById(routeParamId)\r\n                .then(projectDetails => setObjectToDelete(projectDetails.project))\r\n                .catch(error => history.goBack()) // if an error, on retrieval, go back a page\r\n\r\n                turnOffAllButDelete()\r\n                setIsDeleteModalOpen(true)\r\n                break\r\n            \r\n\r\n            // Collection Manager\r\n            case CollectionManagerRoute():\r\n                // Whenever we hit the CollectionManager, getCollections\r\n                getCollections() // Currently doesn't show a loading icon though. Which I'd like to add\r\n\r\n                turnOffAllProjectRoutes()\r\n                setIsCollectionCreateFormOpen(false)\r\n                setIsCollectionDetailsOpen(false)\r\n                setIsCollectionEditFormOpen(false)\r\n                setIsCollectionManagerOpen(true)\r\n                break \r\n\r\n            case CollectionManagerCreateRoute():\r\n                turnOffAllProjectRoutes()\r\n                setIsCollectionManagerOpen(true)\r\n                setIsCollectionCreateFormOpen(true)\r\n                setIsCollectionEditFormOpen(false)\r\n                setIsCollectionDetailsOpen(false)\r\n                break\r\n\r\n            case CollectionManagerDetailsRoute(routeParamId):\r\n                setIsFetchingCollectionDetails(true)\r\n                turnOffAllProjectRoutes()\r\n\r\n                getCollectionById(routeParamId)\r\n                .then(collectionDetails => setSelectedCollection(collectionDetails))\r\n                .catch(error => history.goBack()) // if an error, on retrieval, go back a page\r\n                // When we leave this route, will need to reset the loading spinner state!  \r\n                // if we get an error, show a toast error then revert back to collection-manager\r\n\r\n                setIsCollectionDetailsOpen(true) \r\n                setIsCollectionManagerOpen(true)\r\n                setIsCollectionCreateFormOpen(false)\r\n                setIsCollectionEditFormOpen(false)\r\n                break\r\n\r\n            case CollectionManagerEditRoute(routeParamId):\r\n                // Hide Details and Show Edit form by switching their opacity\r\n                getCollectionById(routeParamId)\r\n                .then(collection => setSelectedCollection(collection))\r\n                .catch(error => history.goBack()) // if an error, on retrieval, go back a page\r\n\r\n                setIsCollectionEditFormOpen(true)\r\n                setIsCollectionDetailsOpen(true) \r\n                setIsCollectionManagerOpen(true)\r\n                break\r\n\r\n            case CollectionManagerDeleteRoute(routeParamId):\r\n                getCollectionById(routeParamId)\r\n                .then(collectionDetails => {\r\n                    setObjectToDelete(collectionDetails.collection)\r\n                    setSelectedCollection(undefined)\r\n                })\r\n                .catch(error => history.goBack()) // if an error, on retrieval, go back a page\r\n\r\n                turnOffAllButDelete()\r\n                setIsDeleteModalOpen(true)\r\n                break\r\n\r\n            default:\r\n                history.push(AppRoute())\r\n                break\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isLoggedIn) {\r\n            StateRouter()\r\n        }\r\n    }, [currentUrl, wordsInCollection])\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path={AppRoute()}>\r\n                {isLoggedIn ? (\r\n                    <MainView\r\n                        isListColumnActive={isListColumnActive}\r\n                        setIsListColumnActive={setIsListColumnActive}\r\n                        isSelectedColumnActive={isSelectedColumnActive}\r\n                        setIsSelectedColumnActive={setIsSelectedColumnActive} />\r\n                ) : (\r\n                    <Redirect to={AuthRoute()} />\r\n                )}\r\n            </Route>\r\n            <Route path={AuthRoute()}>\r\n                {isLoggedIn ? <Redirect to={AppRoute()} /> : <AuthView />}\r\n            </Route>\r\n            <Route path=\"/\">\r\n                {isLoggedIn ? <Redirect to={AppRoute()} /> : <Redirect to={AuthRoute()} />}\r\n            </Route>\r\n        </Switch>\r\n    )\r\n}\r\n    \r\nexport default ApplicationViews","import React from 'react'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport { UserProvider } from './providers/UserProvider'\r\nimport { DeleteProvider } from './providers/DeleteProvider'\r\nimport { CollectionProvider } from './providers/CollectionProvider'\r\nimport { ProjectProvider } from './providers/ProjectProvider'\r\nimport { ThesaurusProvider } from './providers/ThesaurusProvider'\r\nimport ApplicationViews from './ApplicationViews'\r\nimport 'react-toastify/dist/ReactToastify.min.css'\r\nimport './Lexicon.css'\r\nimport { WordProvider } from './providers/WordProvider'\r\n\r\nconst Lexicon = () => (\r\n    <>\r\n        <ToastContainer position=\"top-center\" hideProgressBar closeOnClick draggable autoClose={4000}/>\r\n\r\n        <UserProvider>\r\n            <DeleteProvider>\r\n                <CollectionProvider>\r\n                    <ProjectProvider>\r\n                        <ThesaurusProvider>\r\n                            <WordProvider>\r\n                                <Router>\r\n                                    <ApplicationViews />\r\n                                </Router>    \r\n                            </WordProvider>\r\n                        </ThesaurusProvider>\r\n                    </ProjectProvider>\r\n                </CollectionProvider>\r\n            </DeleteProvider>\r\n        </UserProvider>\r\n    </>\r\n)\r\n\r\nexport default Lexicon","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport firebase from 'firebase/app';\r\nimport Lexicon from './Lexicon'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Lexicon />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}